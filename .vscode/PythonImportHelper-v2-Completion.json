[
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "base",
        "description": "base",
        "isExtraImport": true,
        "detail": "base",
        "documentation": {}
    },
    {
        "label": "flask_restful",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "flask_restful",
        "description": "flask_restful",
        "detail": "flask_restful",
        "documentation": {}
    },
    {
        "label": "Resource",
        "importPath": "flask_restful",
        "description": "flask_restful",
        "isExtraImport": true,
        "detail": "flask_restful",
        "documentation": {}
    },
    {
        "label": "Resource",
        "importPath": "flask_restful",
        "description": "flask_restful",
        "isExtraImport": true,
        "detail": "flask_restful",
        "documentation": {}
    },
    {
        "label": "Resource",
        "importPath": "flask_restful",
        "description": "flask_restful",
        "isExtraImport": true,
        "detail": "flask_restful",
        "documentation": {}
    },
    {
        "label": "Api",
        "importPath": "flask_restful",
        "description": "flask_restful",
        "isExtraImport": true,
        "detail": "flask_restful",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Userw",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Userw",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Userw",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Userw",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Userw",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Userw",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "mongo_models",
        "description": "mongo_models",
        "isExtraImport": true,
        "detail": "mongo_models",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "resources.User",
        "description": "resources.User",
        "isExtraImport": true,
        "detail": "resources.User",
        "documentation": {}
    },
    {
        "label": "Todow",
        "importPath": "resources.Todo",
        "description": "resources.Todo",
        "isExtraImport": true,
        "detail": "resources.Todo",
        "documentation": {}
    },
    {
        "label": "Company",
        "importPath": "resources.Company",
        "description": "resources.Company",
        "isExtraImport": true,
        "detail": "resources.Company",
        "documentation": {}
    },
    {
        "label": "socket",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "socket",
        "description": "socket",
        "detail": "socket",
        "documentation": {}
    },
    {
        "label": "flask.scaffold",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "flask.scaffold",
        "description": "flask.scaffold",
        "detail": "flask.scaffold",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.ext.declarative",
        "description": "sqlalchemy.ext.declarative",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.declarative",
        "documentation": {}
    },
    {
        "label": "sys,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys.",
        "description": "sys.",
        "detail": "sys.",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "os.path,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.path.",
        "description": "os.path.",
        "detail": "os.path.",
        "documentation": {}
    },
    {
        "label": "packTab",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "packTab",
        "description": "packTab",
        "detail": "packTab",
        "documentation": {}
    },
    {
        "label": "os,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.",
        "description": "os.",
        "detail": "os.",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "collections",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "collections",
        "description": "collections",
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "OrderedDict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "OrderedDict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "html",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "html",
        "description": "html",
        "detail": "html",
        "documentation": {}
    },
    {
        "label": "HTMLParser",
        "importPath": "html.parser",
        "description": "html.parser",
        "isExtraImport": true,
        "detail": "html.parser",
        "documentation": {}
    },
    {
        "label": "HTMLParser",
        "importPath": "html.parser",
        "description": "html.parser",
        "isExtraImport": true,
        "detail": "html.parser",
        "documentation": {}
    },
    {
        "label": "itertools",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "itertools",
        "description": "itertools",
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "unicodedata",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unicodedata",
        "description": "unicodedata",
        "detail": "unicodedata",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "packTab.ucdxml",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "packTab.ucdxml",
        "description": "packTab.ucdxml",
        "detail": "packTab.ucdxml",
        "documentation": {}
    },
    {
        "label": "gi",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "gi",
        "description": "gi",
        "detail": "gi",
        "documentation": {}
    },
    {
        "label": "Gtk",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "HarfBuzz",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "HarfBuzz",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "GLib",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "Gtk",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "HarfBuzz",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "HarfBuzz",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "GLib",
        "importPath": "gi.repository",
        "description": "gi.repository",
        "isExtraImport": true,
        "detail": "gi.repository",
        "documentation": {}
    },
    {
        "label": "array",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "array",
        "description": "array",
        "detail": "array",
        "documentation": {}
    },
    {
        "label": "Userw",
        "kind": 6,
        "importPath": "server.backand_python.models.mongo_models",
        "description": "server.backand_python.models.mongo_models",
        "peekOfCode": "class Userw(Base):\n    __tablename__ = 'userw'\n    id = Column(Integer, primary_key=True)\n    id_user = Column(String)\n    email = Column(String)\n    username = Column(String)\n    password = Column(String)\n    login = Column(String)\n    def to_json(self):\n        return {",
        "detail": "server.backand_python.models.mongo_models",
        "documentation": {}
    },
    {
        "label": "Companyw",
        "kind": 6,
        "importPath": "server.backand_python.models.mongo_models",
        "description": "server.backand_python.models.mongo_models",
        "peekOfCode": "class Companyw(Base):\n    __tablename__ = 'companyw'\n    id = Column(Integer, primary_key=True)\n    id_company = Column(String)\n    name = Column(String)\n    def to_json(self):\n        return {\n            \"id\": str(self.id),\n            \"id_company\": self.id_company,\n            \"name\": self.name",
        "detail": "server.backand_python.models.mongo_models",
        "documentation": {}
    },
    {
        "label": "Todow",
        "kind": 6,
        "importPath": "server.backand_python.models.mongo_models",
        "description": "server.backand_python.models.mongo_models",
        "peekOfCode": "class Todow(Base):\n    __tablename__ = 'todow'\n    id = Column(Integer, primary_key=True)\n    id_todo = Column(String)\n    id_company = Column(String)\n    id_user_creater = Column(String)\n    id_user_executor = Column(String)\n    name = Column(String)\n    description = Column(String)\n    datetime_create = Column(String)",
        "detail": "server.backand_python.models.mongo_models",
        "documentation": {}
    },
    {
        "label": "Company",
        "kind": 6,
        "importPath": "server.backand_python.resource.company",
        "description": "server.backand_python.resource.company",
        "peekOfCode": "class Company(Resource):\n    def post(self):\n        header = \"ds24\"#request.headers[\"Authorization\"]\n        json_data = request.get_json(force=True)\n        addDatabaseCompany(Companyw(\"id_company\", \"name\"))\n        return {\"Messege\" : \"No user with that api key\"}, 402\n    def get(self):\n        json_data = request.get_json(force=True)\n        ## MonogEngineDB\n        # db.disconnect_all()",
        "detail": "server.backand_python.resource.company",
        "documentation": {}
    },
    {
        "label": "addDatabaseCompany",
        "kind": 2,
        "importPath": "server.backand_python.resource.company",
        "description": "server.backand_python.resource.company",
        "peekOfCode": "def addDatabaseCompany(dataCompany: Companyw):\n    # 2 - generate database schema\n    Base.metadata.create_all(engine)\n    # 3 - create a new session\n    session = Session()\n    # 8 - create stuntmen\n    company = Companyw(\"id_company\", \"name\") # dataCompany\n    session.add(company)\n    # 10 - commit and close session\n    session.commit()",
        "detail": "server.backand_python.resource.company",
        "documentation": {}
    },
    {
        "label": "getAllCompanyw",
        "kind": 2,
        "importPath": "server.backand_python.resource.company",
        "description": "server.backand_python.resource.company",
        "peekOfCode": "def getAllCompanyw():\n    # 2 - extract a session\n    session = Session()\n    # 3 - extract all movies\n    companys = session.query(Companyw).all()\n    company = []\n    # 4 - print movies' details\n    print('\\n### All Companyw:')\n    for companyone in companys:\n        company.append(companyone)",
        "detail": "server.backand_python.resource.company",
        "documentation": {}
    },
    {
        "label": "Todow",
        "kind": 6,
        "importPath": "server.backand_python.resource.todo",
        "description": "server.backand_python.resource.todo",
        "peekOfCode": "class Todow(Resource):\n    def post(self):\n        header = \"ds24\"#request.headers[\"Authorization\"]\n        json_data = request.get_json(force=True)\n        addDatabaseTodo(Todow(\"id_company\", \"name\", \"id_todo\", \"id_user_creater\",\"id_user_executor\",\"description\", \"datetime_create\", \"priority_task\"))\n        return {\"Messege\" : \"No user with that api key\"}, 402\n    def get(self):\n        json_data = request.get_json(force=True)\n        # db.disconnect_all()\n        # db.connect(db='todo_list_manager',host='localhost:27017',alias='todo_list_manager')",
        "detail": "server.backand_python.resource.todo",
        "documentation": {}
    },
    {
        "label": "addDatabaseTodo",
        "kind": 2,
        "importPath": "server.backand_python.resource.todo",
        "description": "server.backand_python.resource.todo",
        "peekOfCode": "def addDatabaseTodo(dataTodo: Todow):\n    # 2 - generate database schema\n    Base.metadata.create_all(engine)\n    # 3 - create a new session\n    session = Session()\n    # 8 - create stuntmen\n    todo = Todow(\"id_company\", \"name\", \"id_todo\", \"id_user_creater\",\"id_user_executor\",\"description\", \"datetime_create\", \"priority_task\") # dataTodo\n    session.add(todo)\n    # 10 - commit and close session\n    session.commit()",
        "detail": "server.backand_python.resource.todo",
        "documentation": {}
    },
    {
        "label": "getAllTodow",
        "kind": 2,
        "importPath": "server.backand_python.resource.todo",
        "description": "server.backand_python.resource.todo",
        "peekOfCode": "def getAllTodow():\n    # 2 - extract a session\n    session = Session()\n    # 3 - extract all movies\n    todos = session.query(Todow).all()\n    todo = []\n    # 4 - print movies' details\n    print('\\n### All Todow:')\n    for todoone in todos:\n        todo.append(todoone)",
        "detail": "server.backand_python.resource.todo",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "server.backand_python.resource.user",
        "description": "server.backand_python.resource.user",
        "peekOfCode": "class User(Resource):\n    def post(self):\n        header = \"ds24\"#request.headers[\"Authorization\"]\n        json_data = request.get_json(force=True)\n        addDatabaseUser(Userw(\"id_user\", 'email', \"username\", \"password\", \"login\"))\n        return {\"Messege\" : \"No user with that api key\"}, 402\n    def get(self):\n        json_data = request.get_json(force=True)\n        # db.disconnect_all()\n        # db.connect(db='todo_list_manager',host='localhost:27017',alias='todo_list_manager')",
        "detail": "server.backand_python.resource.user",
        "documentation": {}
    },
    {
        "label": "addDatabaseUser",
        "kind": 2,
        "importPath": "server.backand_python.resource.user",
        "description": "server.backand_python.resource.user",
        "peekOfCode": "def addDatabaseUser(dataUser: Userw):\n    # 2 - generate database schema\n    Base.metadata.create_all(engine)\n    # 3 - create a new session\n    session = Session()\n    # 8 - create stuntmen\n    user = Userw(\"id_user\", 'email', \"username\", \"password\", \"login\") # dataUser\n    session.add(user)\n    # 10 - commit and close session\n    session.commit()",
        "detail": "server.backand_python.resource.user",
        "documentation": {}
    },
    {
        "label": "getAllUsers",
        "kind": 2,
        "importPath": "server.backand_python.resource.user",
        "description": "server.backand_python.resource.user",
        "peekOfCode": "def getAllUsers():\n    # 2 - extract a session\n    session = Session()\n    # 3 - extract all movies\n    users = session.query(Userw).all()\n    user = []\n    # 4 - print movies' details\n    print('\\n### All Userw:')\n    for usersone in users:\n        user.append(usersone)",
        "detail": "server.backand_python.resource.user",
        "documentation": {}
    },
    {
        "label": "api_bp",
        "kind": 5,
        "importPath": "server.backand_python.app",
        "description": "server.backand_python.app",
        "peekOfCode": "api_bp = Blueprint('api', __name__)\napi = Api(api_bp)\n# Route\napi.add_resource(User, '/register')\napi.add_resource(User, '/signin')\napi.add_resource(User, '/user_edit')\napi.add_resource(Todow, '/tasks_company') \napi.add_resource(Todow, '/tasks_user') \napi.add_resource(Todow, '/task_create') \napi.add_resource(Todow, '/task_update')",
        "detail": "server.backand_python.app",
        "documentation": {}
    },
    {
        "label": "api",
        "kind": 5,
        "importPath": "server.backand_python.app",
        "description": "server.backand_python.app",
        "peekOfCode": "api = Api(api_bp)\n# Route\napi.add_resource(User, '/register')\napi.add_resource(User, '/signin')\napi.add_resource(User, '/user_edit')\napi.add_resource(Todow, '/tasks_company') \napi.add_resource(Todow, '/tasks_user') \napi.add_resource(Todow, '/task_create') \napi.add_resource(Todow, '/task_update')\napi.add_resource(Todow, '/task_delete')",
        "detail": "server.backand_python.app",
        "documentation": {}
    },
    {
        "label": "create_app",
        "kind": 2,
        "importPath": "server.backand_python.run",
        "description": "server.backand_python.run",
        "peekOfCode": "def create_app(config_filename):\n    app = Flask(__name__)\n    # app.config.from_object(config_filename)\n    # app.config[\"MONGO_URI\"] = \"mongodb://localhost:27017/\"\n    # # app.config[\"DB_CLIENT\"] = \"\"\n    # # app.config[\"COLLECTION\"]= \"\"\n    # # app.config['MONGODB_SETTINGS'] = {\n    # # 'db': 'project1',\n    # # 'username':'webapp',\n    # # 'password':'pwd123'",
        "detail": "server.backand_python.run",
        "documentation": {}
    },
    {
        "label": "flask.helpers._endpoint_from_view_func",
        "kind": 5,
        "importPath": "server.backand_python.run",
        "description": "server.backand_python.run",
        "peekOfCode": "flask.helpers._endpoint_from_view_func = flask.scaffold._endpoint_from_view_func\nimport flask_restful\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\ndef create_app(config_filename):\n    app = Flask(__name__)\n    # app.config.from_object(config_filename)\n    # app.config[\"MONGO_URI\"] = \"mongodb://localhost:27017/\"\n    # # app.config[\"DB_CLIENT\"] = \"\"",
        "detail": "server.backand_python.run",
        "documentation": {}
    },
    {
        "label": "removeprefix",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "def removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "srcdir = os.getenv ('srcdir', os.path.dirname (__file__))\nbase_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "base_srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "base_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "\tabs_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "HBSOURCES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "HBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' not in content) or ('HB_END_DECLS' not in content):\n\t\tprint ('Ouch, file %s does not have HB_BEGIN_DECLS / HB_END_DECLS, but it should' % x)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "stat = 0\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' not in content) or ('HB_END_DECLS' not in content):\n\t\tprint ('Ouch, file %s does not have HB_BEGIN_DECLS / HB_END_DECLS, but it should' % x)\n\t\tstat = 1\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' in content) or ('HB_END_DECLS' in content):\n\t\tprint ('Ouch, file %s has HB_BEGIN_DECLS / HB_END_DECLS, but it shouldn\\'t' % x)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "\t\tstat = 1\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' in content) or ('HB_END_DECLS' in content):\n\t\tprint ('Ouch, file %s has HB_BEGIN_DECLS / HB_END_DECLS, but it shouldn\\'t' % x)\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nstat = 0\nprint ('Checking that all public symbols are exported with HB_EXTERN')\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tfor s in re.findall (r'\\n.+\\nhb_.+\\n', content):\n\t\tif not s.startswith ('\\nHB_EXTERN '):\n\t\t\tprint ('failure on:', s)\n\t\t\tstat = 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "peekOfCode": "stat = 0\nprint ('Checking that all public symbols are exported with HB_EXTERN')\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tfor s in re.findall (r'\\n.+\\nhb_.+\\n', content):\n\t\tif not s.startswith ('\\nHB_EXTERN '):\n\t\t\tprint ('failure on:', s)\n\t\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "peekOfCode": "\t\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-externs",
        "documentation": {}
    },
    {
        "label": "removeprefix",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "def removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "srcdir = os.getenv ('srcdir', os.path.dirname (__file__))\nbase_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "base_srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "base_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "\tabs_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS + HBSOURCES:\n\tif not x.endswith ('h') or x == 'hb-gobject-structs.h': continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "HBSOURCES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "HBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS + HBSOURCES:\n\tif not x.endswith ('h') or x == 'hb-gobject-structs.h': continue\n\ttag = x.upper ().replace ('.', '_').replace ('-', '_').replace(os.path.sep, '_').replace('/', '_')\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "stat = 0\nfor x in HBHEADERS + HBSOURCES:\n\tif not x.endswith ('h') or x == 'hb-gobject-structs.h': continue\n\ttag = x.upper ().replace ('.', '_').replace ('-', '_').replace(os.path.sep, '_').replace('/', '_')\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif len (re.findall (tag + r'\\b', content)) != 3:\n\t\tprint ('Ouch, header file %s does not have correct preprocessor guards. Expected: %s' % (x, tag))\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "\ttag = x.upper ().replace ('.', '_').replace ('-', '_').replace(os.path.sep, '_').replace('/', '_')\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif len (re.findall (tag + r'\\b', content)) != 3:\n\t\tprint ('Ouch, header file %s does not have correct preprocessor guards. Expected: %s' % (x, tag))\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "peekOfCode": "\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "removeprefix",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "def removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "srcdir = os.getenv ('srcdir', os.path.dirname (__file__))\nbase_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "base_srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "base_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\tabs_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nprint ('Checking that public header files #include \"hb-common.h\" or \"hb.h\" first (or none)')\nfor x in HBHEADERS:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "HBSOURCES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "HBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nprint ('Checking that public header files #include \"hb-common.h\" or \"hb.h\" first (or none)')\nfor x in HBHEADERS:\n\tif x == 'hb.h' or x == 'hb-common.h': continue\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "stat = 0\nprint ('Checking that public header files #include \"hb-common.h\" or \"hb.h\" first (or none)')\nfor x in HBHEADERS:\n\tif x == 'hb.h' or x == 'hb-common.h': continue\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tfirst = re.findall (r'#.*include.*', content)[0]\n\tif first not in ['#include \"hb.h\"', '#include \"hb-common.h\"']:\n\t\tprint ('failure on %s' % x)\n\t\tstat = 1\nprint ('Checking that source files #include a private header first (or none)')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\tfirst",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "\tfirst = re.findall (r'#.*include.*', content)[0]\n\tif first not in ['#include \"hb.h\"', '#include \"hb-common.h\"']:\n\t\tprint ('failure on %s' % x)\n\t\tstat = 1\nprint ('Checking that source files #include a private header first (or none)')\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tincludes = re.findall (r'#.*include.*', content)\n\tif includes:\n\t\tif not len (re.findall (r'\".*\\.hh\"', includes[0])):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "\t\tstat = 1\nprint ('Checking that source files #include a private header first (or none)')\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tincludes = re.findall (r'#.*include.*', content)\n\tif includes:\n\t\tif not len (re.findall (r'\".*\\.hh\"', includes[0])):\n\t\t\tprint ('failure on %s' % x)\n\t\t\tstat = 1\nprint ('Checking that there is no #include <hb-*.h>')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\tincludes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "\tincludes = re.findall (r'#.*include.*', content)\n\tif includes:\n\t\tif not len (re.findall (r'\".*\\.hh\"', includes[0])):\n\t\t\tprint ('failure on %s' % x)\n\t\t\tstat = 1\nprint ('Checking that there is no #include <hb-*.h>')\nfor x in HBHEADERS + HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif re.findall ('#.*include.*<.*hb', content):\n\t\tprint ('failure on %s' % x)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "\t\t\tstat = 1\nprint ('Checking that there is no #include <hb-*.h>')\nfor x in HBHEADERS + HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif re.findall ('#.*include.*<.*hb', content):\n\t\tprint ('failure on %s' % x)\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "peekOfCode": "\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "libs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "libs = os.getenv ('libs', '.libs')\nldd = os.getenv ('LDD', shutil.which ('ldd'))\nif not ldd:\n\totool = os.getenv ('OTOOL', shutil.which ('otool'))\n\tif otool:\n\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "ldd",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "ldd = os.getenv ('LDD', shutil.which ('ldd'))\nif not ldd:\n\totool = os.getenv ('OTOOL', shutil.which ('otool'))\n\tif otool:\n\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0\ntested = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\totool",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\totool = os.getenv ('OTOOL', shutil.which ('otool'))\n\tif otool:\n\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0\ntested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\tldd",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0\ntested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "stat = 0\ntested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\tprint ('Checking that we are not linking to libstdc++ or libc++ in %s' % so)\n\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "tested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "tested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\tprint ('Checking that we are not linking to libstdc++ or libc++ in %s' % so)\n\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):\n\t\t\tprint ('Ouch, %s is linked to libstdc++ or libc++' % so)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\tso",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\tprint ('Checking that we are not linking to libstdc++ or libc++ in %s' % so)\n\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):\n\t\t\tprint ('Ouch, %s is linked to libstdc++ or libc++' % so)\n\t\t\tstat = 1\n\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\tldd_result",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):\n\t\t\tprint ('Ouch, %s is linked to libstdc++ or libc++' % so)\n\t\t\tstat = 1\n\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\t\tstat = 1\n\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\ttested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "builddir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "builddir = os.getenv ('builddir', os.path.dirname (__file__))\nlibs = os.getenv ('libs', '.libs')\nobjdump = os.getenv ('OBJDUMP', shutil.which ('objdump'))\nif not objdump:\n\tprint ('check-static-inits.py: \\'ldd\\' not found; skipping test')\n\tsys.exit (77)\nif sys.version_info < (3, 5):\n\tprint ('check-static-inits.py: needs python 3.5 for recursive support in glob')\n\tsys.exit (77)\nOBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "libs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "libs = os.getenv ('libs', '.libs')\nobjdump = os.getenv ('OBJDUMP', shutil.which ('objdump'))\nif not objdump:\n\tprint ('check-static-inits.py: \\'ldd\\' not found; skipping test')\n\tsys.exit (77)\nif sys.version_info < (3, 5):\n\tprint ('check-static-inits.py: needs python 3.5 for recursive support in glob')\n\tsys.exit (77)\nOBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)\nif not OBJS:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "objdump",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "objdump = os.getenv ('OBJDUMP', shutil.which ('objdump'))\nif not objdump:\n\tprint ('check-static-inits.py: \\'ldd\\' not found; skipping test')\n\tsys.exit (77)\nif sys.version_info < (3, 5):\n\tprint ('check-static-inits.py: needs python 3.5 for recursive support in glob')\n\tsys.exit (77)\nOBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)\nif not OBJS:\n\tprint ('check-static-inits.py: object files not found; skipping test')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "OBJS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "OBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)\nif not OBJS:\n\tprint ('check-static-inits.py: object files not found; skipping test')\n\tsys.exit (77)\nstat = 0\ntested = 0\nfor obj in OBJS:\n\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "stat = 0\ntested = 0\nfor obj in OBJS:\n\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:\n\t\t\t# https://github.com/harfbuzz/harfbuzz/issues/3019\n\t\t\tprint ('objdump %s returned \"not recognized\", skipping' % obj)\n\t\t\tcontinue\n\t\tprint ('objdump %s returned error:\\n%s' % (obj, result.stderr.decode ('utf-8')))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "tested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "tested = 0\nfor obj in OBJS:\n\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:\n\t\t\t# https://github.com/harfbuzz/harfbuzz/issues/3019\n\t\t\tprint ('objdump %s returned \"not recognized\", skipping' % obj)\n\t\t\tcontinue\n\t\tprint ('objdump %s returned error:\\n%s' % (obj, result.stderr.decode ('utf-8')))\n\t\tstat = 2",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\tresult",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:\n\t\t\t# https://github.com/harfbuzz/harfbuzz/issues/3019\n\t\t\tprint ('objdump %s returned \"not recognized\", skipping' % obj)\n\t\t\tcontinue\n\t\tprint ('objdump %s returned error:\\n%s' % (obj, result.stderr.decode ('utf-8')))\n\t\tstat = 2\n\tresult = result.stdout.decode ('utf-8')\n\t# Checking that no object file has static initializers",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "\t\tstat = 2\n\tresult = result.stdout.decode ('utf-8')\n\t# Checking that no object file has static initializers\n\tfor l in re.findall (r'^.*\\.[cd]tors.*$', result, re.MULTILINE):\n\t\tif not re.match (r'.*\\b0+\\b', l):\n\t\t\tprint ('Ouch, %s has static initializers/finalizers' % obj)\n\t\t\tstat = 1\n\t# Checking that no object file has lazy static C++ constructors/destructors or other such stuff\n\tif ('__cxa_' in result) and ('__ubsan_handle' not in result):\n\t\tprint ('Ouch, %s has lazy static C++ constructors/destructors or other such stuff' % obj)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\tresult",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "\tresult = result.stdout.decode ('utf-8')\n\t# Checking that no object file has static initializers\n\tfor l in re.findall (r'^.*\\.[cd]tors.*$', result, re.MULTILINE):\n\t\tif not re.match (r'.*\\b0+\\b', l):\n\t\t\tprint ('Ouch, %s has static initializers/finalizers' % obj)\n\t\t\tstat = 1\n\t# Checking that no object file has lazy static C++ constructors/destructors or other such stuff\n\tif ('__cxa_' in result) and ('__ubsan_handle' not in result):\n\t\tprint ('Ouch, %s has lazy static C++ constructors/destructors or other such stuff' % obj)\n\t\tstat = 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "\t\t\tstat = 1\n\t# Checking that no object file has lazy static C++ constructors/destructors or other such stuff\n\tif ('__cxa_' in result) and ('__ubsan_handle' not in result):\n\t\tprint ('Ouch, %s has lazy static C++ constructors/destructors or other such stuff' % obj)\n\t\tstat = 1\n\ttested += 1\nsys.exit (stat if tested else 77)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "peekOfCode": "\t\tstat = 1\n\ttested += 1\nsys.exit (stat if tested else 77)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "os.environ['LC_ALL']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "os.environ['LC_ALL'] = 'C' # otherwise 'nm' prints in wrong order\nbuilddir = os.getenv ('builddir', os.path.dirname (__file__))\nlibs = os.getenv ('libs', '.libs')\nIGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "builddir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "builddir = os.getenv ('builddir', os.path.dirname (__file__))\nlibs = os.getenv ('libs', '.libs')\nIGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "libs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "libs = os.getenv ('libs', '.libs')\nIGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)\ncxxfilt = shutil.which ('c++filt')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "IGNORED_SYMBOLS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "IGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)\ncxxfilt = shutil.which ('c++filt')\ntested = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "nm",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "nm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)\ncxxfilt = shutil.which ('c++filt')\ntested = False\nstat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "cxxfilt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "cxxfilt = shutil.which ('c++filt')\ntested = False\nstat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "tested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "tested = False\nstat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "stat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tso",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]\n\t\t# run again c++filt also if is available\n\t\tif cxxfilt:\n\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tsymprefix",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]\n\t\t# run again c++filt also if is available\n\t\tif cxxfilt:\n\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (\n\t\t\t\t[cxxfilt], input='\\n'.join (EXPORTED_SYMBOLS).encode ()\n\t\t\t).decode ('utf-8').splitlines ()\n\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tEXPORTED_SYMBOLS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]\n\t\t# run again c++filt also if is available\n\t\tif cxxfilt:\n\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (\n\t\t\t\t[cxxfilt], input='\\n'.join (EXPORTED_SYMBOLS).encode ()\n\t\t\t).decode ('utf-8').splitlines ()\n\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]\n\t\tprint ('Checking that %s does not expose internal symbols' % so)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\tEXPORTED_SYMBOLS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (\n\t\t\t\t[cxxfilt], input='\\n'.join (EXPORTED_SYMBOLS).encode ()\n\t\t\t).decode ('utf-8').splitlines ()\n\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]\n\t\tprint ('Checking that %s does not expose internal symbols' % so)\n\t\tsuspicious_symbols = [x for x in EXPORTED_SYMBOLS if not re.match (r'^%s(_|$)' % prefix, x)]\n\t\tif suspicious_symbols:\n\t\t\tprint ('Ouch, internal symbols exposed:', suspicious_symbols)\n\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tprefix",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]\n\t\tprint ('Checking that %s does not expose internal symbols' % so)\n\t\tsuspicious_symbols = [x for x in EXPORTED_SYMBOLS if not re.match (r'^%s(_|$)' % prefix, x)]\n\t\tif suspicious_symbols:\n\t\t\tprint ('Ouch, internal symbols exposed:', suspicious_symbols)\n\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tsuspicious_symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tsuspicious_symbols = [x for x in EXPORTED_SYMBOLS if not re.match (r'^%s(_|$)' % prefix, x)]\n\t\tif suspicious_symbols:\n\t\t\tprint ('Ouch, internal symbols exposed:', suspicious_symbols)\n\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:\n\t\t\tprint ('Checking that %s has the same symbol list as %s' % (so, def_path))\n\t\t\twith open (def_path, 'r', encoding='utf-8') as f: def_file = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:\n\t\t\tprint ('Checking that %s has the same symbol list as %s' % (so, def_path))\n\t\t\twith open (def_path, 'r', encoding='utf-8') as f: def_file = f.read ()\n\t\t\tdiff_result = list (difflib.context_diff (\n\t\t\t\tdef_file.splitlines (),\n\t\t\t\t['EXPORTS'] + [re.sub ('^%shb' % symprefix, 'hb', x) for x in EXPORTED_SYMBOLS] +",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tdef_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:\n\t\t\tprint ('Checking that %s has the same symbol list as %s' % (so, def_path))\n\t\t\twith open (def_path, 'r', encoding='utf-8') as f: def_file = f.read ()\n\t\t\tdiff_result = list (difflib.context_diff (\n\t\t\t\tdef_file.splitlines (),\n\t\t\t\t['EXPORTS'] + [re.sub ('^%shb' % symprefix, 'hb', x) for x in EXPORTED_SYMBOLS] +\n\t\t\t\t\t# cheat: copy the last line from the def file!",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\tdiff_result",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\tdiff_result = list (difflib.context_diff (\n\t\t\t\tdef_file.splitlines (),\n\t\t\t\t['EXPORTS'] + [re.sub ('^%shb' % symprefix, 'hb', x) for x in EXPORTED_SYMBOLS] +\n\t\t\t\t\t# cheat: copy the last line from the def file!\n\t\t\t\t\t[def_file.splitlines ()[-1]]\n\t\t\t))\n\t\t\tif diff_result:\n\t\t\t\tprint ('\\n'.join (diff_result))\n\t\t\t\tstat = 1\n\t\t\ttested = True",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\t\tstat = 1\n\t\t\ttested = True\nif not tested:\n\tprint ('check-symbols.py: no shared libraries found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\ttested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\ttested = True\nif not tested:\n\tprint ('check-symbols.py: no shared libraries found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "parser",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.fix_get_types",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.fix_get_types",
        "peekOfCode": "parser = argparse.ArgumentParser ()\nparser.add_argument ('input')\nparser.add_argument ('output')\nargs = parser.parse_args ()\nwith open (args.input, 'r') as inp, open (args.output, 'w') as out:\n    for l in inp.readlines ():\n        l = re.sub ('_t_get_type', '_get_type', l)\n        l = re.sub ('_T \\(', ' (', l)\n        out.write (l)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.fix_get_types",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.fix_get_types",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.fix_get_types",
        "peekOfCode": "args = parser.parse_args ()\nwith open (args.input, 'r') as inp, open (args.output, 'w') as out:\n    for l in inp.readlines ():\n        l = re.sub ('_t_get_type', '_get_type', l)\n        l = re.sub ('_T \\(', ' (', l)\n        out.write (l)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.fix_get_types",
        "documentation": {}
    },
    {
        "label": "rea",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "def read (f):\n\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "read_joining_u",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "def read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tif fields[2] in {'T', 'U'}:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "print_has_arabic_joinin",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "def print_has_arabic_joining (scripts, joining_uu):\n\tprint (\"static bool\")\n\tprint (\"has_arabic_joining (hb_script_t script)\")\n\tprint (\"{\")\n\tprint (\"  /* List of scripts that have data in arabic-table. */\")\n\tprint (\"  switch ((int) script)\")\n\tprint (\"  {\")\n\tfor script in sorted ({scripts[u] for u in joining_uu if scripts[u] not in {'Common', 'Inherited'}}):\n\t\tprint (\"    case HB_SCRIPT_{}:\".format (script.upper ()))\n\tprint (\"      return true;\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline (), f.readline ()] for f in files]\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\ndef read (f):\n\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "headers = [[f.readline (), f.readline ()] for f in files]\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\ndef read (f):\n\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\tmapping",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tmapping[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tif fields[2] in {'T', 'U'}:\n\t\t\tcontinue\n\t\tvalues.add (int (fields[0], 16))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tif fields[2] in {'T', 'U'}:\n\t\t\tcontinue\n\t\tvalues.add (int (fields[0], 16))\n\treturn sorted (values)\ndef print_has_arabic_joining (scripts, joining_uu):\n\tprint (\"static bool\")\n\tprint (\"has_arabic_joining (hb_script_t script)\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "code",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-pua",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-pua",
        "peekOfCode": "code = packTab.Code('_hb_arabic')\nfor p in (\"ArabicPUASimplified.txt\", \"ArabicPUATraditional.txt\"):\n    with open (p, encoding='utf-8') as f:\n        fields = [l.split('\\t') for l in f if l[:1] != '#']\n    data = {int(fs[1], 16):int(fs[0], 16) for fs in fields}\n    sol = packTab.pack_table(data, compression=9)\n    sol.genCode(code, f'pua_{p[9:13].lower()}_map')\ncode.print_c(linkage='static inline')\nprint ()\nprint (\"#endif /* HB_OT_SHAPER_ARABIC_PUA_HH */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-pua",
        "documentation": {}
    },
    {
        "label": "read_blocks",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "def read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "print_joining_table",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "def print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "print_shaping_table",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "def print_shaping_table(f):\n\tshapes = {}\n\tligatures = {}\n\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[files[0].readline (), files[0].readline ()], [files[2].readline (), files[2].readline ()]]\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\nblocks = {}\ndef read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "headers = [[files[0].readline (), files[0].readline ()], [files[2].readline (), files[2].readline ()]]\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\nblocks = {}\ndef read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "blocks",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "blocks = {}\ndef read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tblocks[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:\n\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:\n\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')\n\t\telse:\n\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:\n\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')\n\t\telse:\n\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')\n\t\telse:\n\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalues[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tshort_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())\n\tnum = len(values)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tshort",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())\n\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tshort_value[value]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())\n\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tuu = sorted(values.keys())\n\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tnum",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tall_blocks",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tlast",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tranges",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tranges[-1][-1]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")\n\tprint (\"{\")\n\tlast_block = None\n\toffset = 0\n\tfor start,end in ranges:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tlast",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")\n\tprint (\"{\")\n\tlast_block = None\n\toffset = 0\n\tfor start,end in ranges:\n\t\tprint ()\n\t\tprint (\"#define joining_offset_0x%04xu %d\" % (start, offset))\n\t\tfor u in range(start, end+1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tlast_block = None\n\toffset = 0\n\tfor start,end in ranges:\n\t\tprint ()\n\t\tprint (\"#define joining_offset_0x%04xu %d\" % (start, offset))\n\t\tfor u in range(start, end+1):\n\t\t\tblock = blocks.get(u, last_block)\n\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\toffset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\toffset = 0\n\tfor start,end in ranges:\n\t\tprint ()\n\t\tprint (\"#define joining_offset_0x%04xu %d\" % (start, offset))\n\t\tfor u in range(start, end+1):\n\t\t\tblock = blocks.get(u, last_block)\n\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:\n\t\t\t\t\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tblock",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tblock = blocks.get(u, last_block)\n\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:\n\t\t\t\t\tprint ()\n\t\t\t\tif block in all_blocks:\n\t\t\t\t\tprint (\"\\n  /* %s */\" % block)\n\t\t\t\telse:\n\t\t\t\t\tprint (\"\\n  /* FILLER */\")\n\t\t\t\tlast_block = block",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:\n\t\t\t\t\tprint ()\n\t\t\t\tif block in all_blocks:\n\t\t\t\t\tprint (\"\\n  /* %s */\" % block)\n\t\t\t\telse:\n\t\t\t\t\tprint (\"\\n  /* FILLER */\")\n\t\t\t\tlast_block = block\n\t\t\t\tif u % 32 != 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tlast_block = block\n\t\t\t\tif u % 32 != 0:\n\t\t\t\t\tprint ()\n\t\t\t\t\tprint (\"  /* %04X */\" % (u//32*32), \"  \" * (u % 32), end=\"\")\n\t\t\tif u % 32 == 0:\n\t\t\t\tprint ()\n\t\t\t\tprint (\"  /* %04X */ \" % u, end=\"\")\n\t\t\tprint (\"%s,\" % short_value[value], end=\"\")\n\t\tprint ()\n\t\toffset += end - start + 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\toccupancy",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\toccupancy = num * 100. / offset\n\tprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\n\tprint ()\n\tpage_bits = 12\n\tprint ()\n\tprint (\"static unsigned int\")\n\tprint (\"joining_type (hb_codepoint_t u)\")\n\tprint (\"{\")\n\tprint (\"  switch (u >> %d)\" % page_bits)\n\tprint (\"  {\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tpage_bits",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tpage_bits = 12\n\tprint ()\n\tprint (\"static unsigned int\")\n\tprint (\"joining_type (hb_codepoint_t u)\")\n\tprint (\"{\")\n\tprint (\"  switch (u >> %d)\" % page_bits)\n\tprint (\"  {\")\n\tpages = set([u>>page_bits for u in [s for s,e in ranges]+[e for s,e in ranges]])\n\tfor p in sorted(pages):\n\t\tprint (\"    case 0x%0Xu:\" % p)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tpages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tpages = set([u>>page_bits for u in [s for s,e in ranges]+[e for s,e in ranges]])\n\tfor p in sorted(pages):\n\t\tprint (\"    case 0x%0Xu:\" % p)\n\t\tfor (start,end) in ranges:\n\t\t\tif p not in [start>>page_bits, end>>page_bits]: continue\n\t\t\toffset = \"joining_offset_0x%04xu\" % start\n\t\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return joining_table[u - 0x%04Xu + %s];\" % (start, end, start, offset))\n\t\tprint (\"      break;\")\n\t\tprint (\"\")\n\tprint (\"    default:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\toffset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\toffset = \"joining_offset_0x%04xu\" % start\n\t\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return joining_table[u - 0x%04Xu + %s];\" % (start, end, start, offset))\n\t\tprint (\"      break;\")\n\t\tprint (\"\")\n\tprint (\"    default:\")\n\tprint (\"      break;\")\n\tprint (\"  }\")\n\tprint (\"  return X;\")\n\tprint (\"}\")\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "LIGATURES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "LIGATURES = (\n\t0xF2EE, 0xFC08, 0xFC0E, 0xFC12, 0xFC32, 0xFC3F, 0xFC40, 0xFC41, 0xFC42,\n\t0xFC44, 0xFC4E, 0xFC5E, 0xFC60, 0xFC61, 0xFC62, 0xFC6A, 0xFC6D, 0xFC6F,\n\t0xFC70, 0xFC73, 0xFC75, 0xFC86, 0xFC8F, 0xFC91, 0xFC94, 0xFC9C, 0xFC9D,\n\t0xFC9E, 0xFC9F, 0xFCA1, 0xFCA2, 0xFCA3, 0xFCA4, 0xFCA8, 0xFCAA, 0xFCAC,\n\t0xFCB0, 0xFCC9, 0xFCCA, 0xFCCB, 0xFCCC, 0xFCCD, 0xFCCE, 0xFCCF, 0xFCD0,\n\t0xFCD1, 0xFCD2, 0xFCD3, 0xFCD5, 0xFCDA, 0xFCDB, 0xFCDC, 0xFCDD, 0xFD30,\n\t0xFD88, 0xFEF5, 0xFEF6, 0xFEF7, 0xFEF8, 0xFEF9, 0xFEFA, 0xFEFB, 0xFEFC,\n\t0xF201, 0xF211, 0xF2EE,\n)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tshapes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tshapes = {}\n\tligatures = {}\n\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligatures",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligatures = {}\n\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tnames",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif fields[5][0:1] != '<':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tlines",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif fields[5][0:1] != '<':\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif fields[5][0:1] != '<':\n\t\t\tcontinue\n\t\titems = fields[5].split (' ')\n\t\tshape, items = items[0][1:-1], tuple (int (x, 16) for x in items[1:])\n\t\tc = int (fields[0], 16)\n\t\tif not shape in ['initial', 'medial', 'isolated', 'final']:\n\t\t\tcontinue\n\t\tif len (items) != 1:\n\t\t\t# Mark ligatures start with space and are in visual order, so we",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\titems",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\titems = fields[5].split (' ')\n\t\tshape, items = items[0][1:-1], tuple (int (x, 16) for x in items[1:])\n\t\tc = int (fields[0], 16)\n\t\tif not shape in ['initial', 'medial', 'isolated', 'final']:\n\t\t\tcontinue\n\t\tif len (items) != 1:\n\t\t\t# Mark ligatures start with space and are in visual order, so we\n\t\t\t# remove the space and reverse the items.\n\t\t\tif items[0] == 0x0020:\n\t\t\t\titems = items[:0:-1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tc = int (fields[0], 16)\n\t\tif not shape in ['initial', 'medial', 'isolated', 'final']:\n\t\t\tcontinue\n\t\tif len (items) != 1:\n\t\t\t# Mark ligatures start with space and are in visual order, so we\n\t\t\t# remove the space and reverse the items.\n\t\t\tif items[0] == 0x0020:\n\t\t\t\titems = items[:0:-1]\n\t\t\t\tshape = None\n\t\t\t# We only care about a subset of ligatures",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\titems",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\titems = items[:0:-1]\n\t\t\t\tshape = None\n\t\t\t# We only care about a subset of ligatures\n\t\t\tif c not in LIGATURES:\n\t\t\t\tcontinue\n\t\t\t# Save ligature\n\t\t\tnames[c] = fields[1]\n\t\t\tif items not in ligatures:\n\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tshape",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tshape = None\n\t\t\t# We only care about a subset of ligatures\n\t\t\tif c not in LIGATURES:\n\t\t\t\tcontinue\n\t\t\t# Save ligature\n\t\t\tnames[c] = fields[1]\n\t\t\tif items not in ligatures:\n\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tnames[c]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tnames[c] = fields[1]\n\t\t\tif items not in ligatures:\n\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c\n\t\telse:\n\t\t\t# Save shape\n\t\t\tif items[0] not in names:\n\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tligatures[items]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c\n\t\telse:\n\t\t\t# Save shape\n\t\t\tif items[0] not in names:\n\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tligatures[items][shape]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tligatures[items][shape] = c\n\t\telse:\n\t\t\t# Save shape\n\t\t\tif items[0] not in names:\n\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tnames[items[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tnames[items[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tshapes[items[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):\n\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tshapes[items[0]][shape]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):\n\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]\n\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tkeys",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):\n\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]\n\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)\n\t\tprint (\"  {%s}, /* U+%04X %s */\" % (value, u, names[u] if u in names else \"\"))\n\tprint (\"};\")\n\tprint ()\n\tprint (\"#define SHAPING_TABLE_FIRST\t0x%04Xu\" % min_u)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]\n\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)\n\t\tprint (\"  {%s}, /* U+%04X %s */\" % (value, u, names[u] if u in names else \"\"))\n\tprint (\"};\")\n\tprint ()\n\tprint (\"#define SHAPING_TABLE_FIRST\t0x%04Xu\" % min_u)\n\tprint (\"#define SHAPING_TABLE_LAST\t0x%04Xu\" % max_u)\n\tprint ()\n\tligas_2 = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)\n\t\tprint (\"  {%s}, /* U+%04X %s */\" % (value, u, names[u] if u in names else \"\"))\n\tprint (\"};\")\n\tprint ()\n\tprint (\"#define SHAPING_TABLE_FIRST\t0x%04Xu\" % min_u)\n\tprint (\"#define SHAPING_TABLE_LAST\t0x%04Xu\" % max_u)\n\tprint ()\n\tligas_2 = {}\n\tligas_3 = {}\n\tligas_mark_2 = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligas_2",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligas_2 = {}\n\tligas_3 = {}\n\tligas_mark_2 = {}\n\tfor key in ligatures.keys ():\n\t\tfor shape in ligatures[key]:\n\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligas_3",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligas_3 = {}\n\tligas_mark_2 = {}\n\tfor key in ligatures.keys ():\n\t\tfor shape in ligatures[key]:\n\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligas_mark_2",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligas_mark_2 = {}\n\tfor key in ligatures.keys ():\n\t\tfor shape in ligatures[key]:\n\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_3:\n\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_3:\n\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))\n\t\t\telif len(key) == 2:\n\t\t\t\tif shape is None:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_3:\n\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))\n\t\t\telif len(key) == 2:\n\t\t\t\tif shape is None:\n\t\t\t\t\tliga = key\n\t\t\t\t\tif liga[0] not in ligas_mark_2:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tligas_3[liga[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))\n\t\t\telif len(key) == 2:\n\t\t\t\tif shape is None:\n\t\t\t\t\tliga = key\n\t\t\t\t\tif liga[0] not in ligas_mark_2:\n\t\t\t\t\t\tligas_mark_2[liga[0]] = []\n\t\t\t\t\tligas_mark_2[liga[0]].append ((liga[1], c))\n\t\t\t\t\tcontinue\n\t\t\t\telif shape == 'isolated':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = key\n\t\t\t\t\tif liga[0] not in ligas_mark_2:\n\t\t\t\t\t\tligas_mark_2[liga[0]] = []\n\t\t\t\t\tligas_mark_2[liga[0]].append ((liga[1], c))\n\t\t\t\t\tcontinue\n\t\t\t\telif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tligas_mark_2[liga[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\t\tligas_mark_2[liga[0]] = []\n\t\t\t\t\tligas_mark_2[liga[0]].append ((liga[1], c))\n\t\t\t\t\tcontinue\n\t\t\t\telif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_2:\n\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_2:\n\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))\n\t\t\telse:\n\t\t\t\traise Exception (\"Unexpected number of ligature components\", key)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_2:\n\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))\n\t\t\telse:\n\t\t\t\traise Exception (\"Unexpected number of ligature components\", key)\n\tmax_i = max (len (ligas_2[l]) for l in ligas_2)\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tligas_2[liga[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))\n\t\t\telse:\n\t\t\t\traise Exception (\"Unexpected number of ligature components\", key)\n\tmax_i = max (len (ligas_2[l]) for l in ligas_2)\n\tprint ()\n\tprint (\"static const struct ligature_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_pairs_t {\")\n\tprint (\"   uint16_t components[1];\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tmax_i",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tmax_i = max (len (ligas_2[l]) for l in ligas_2)\n\tprint ()\n\tprint (\"static const struct ligature_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_pairs_t {\")\n\tprint (\"   uint16_t components[1];\")\n\tprint (\"   uint16_t ligature;\")\n\tprint (\" } ligatures[%d];\" % max_i)\n\tprint (\"} ligature_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tmax_i",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tmax_i = max (len (ligas_mark_2[l]) for l in ligas_mark_2)\n\tprint ()\n\tprint (\"static const struct ligature_mark_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_pairs_t {\")\n\tprint (\"   uint16_t components[1];\")\n\tprint (\"   uint16_t ligature;\")\n\tprint (\" } ligatures[%d];\" % max_i)\n\tprint (\"} ligature_mark_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tmax_i",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tmax_i = max (len (ligas_3[l]) for l in ligas_3)\n\tprint ()\n\tprint (\"static const struct ligature_3_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_triplets_t {\")\n\tprint (\"   uint16_t components[2];\")\n\tprint (\"   uint16_t ligature;\")\n\tprint (\" } ligatures[%d];\" % max_i)\n\tprint (\"} ligature_3_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "output_file",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "output_file = sys.argv[1]\nheader_paths = sys.argv[2:]\nheaders_content = []\nfor h in header_paths:\n\tif h.endswith (\".h\"):\n\t\twith open (h, encoding='utf-8') as f: headers_content.append (f.read ())\nsymbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "header_paths",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "header_paths = sys.argv[2:]\nheaders_content = []\nfor h in header_paths:\n\tif h.endswith (\".h\"):\n\t\twith open (h, encoding='utf-8') as f: headers_content.append (f.read ())\nsymbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "headers_content",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "headers_content = []\nfor h in header_paths:\n\tif h.endswith (\".h\"):\n\t\twith open (h, encoding='utf-8') as f: headers_content.append (f.read ())\nsymbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail\nhb_subset_input_override_name_table",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "symbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail\nhb_subset_input_override_name_table\n\"\"\".splitlines ()\n\tsymbols = [x for x in symbols if x not in experimental_symbols]\nsymbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "\texperimental_symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail\nhb_subset_input_override_name_table\n\"\"\".splitlines ()\n\tsymbols = [x for x in symbols if x not in experimental_symbols]\nsymbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "\tsymbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "\tsymbols = [x for x in symbols if x not in experimental_symbols]\nsymbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "symbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "result",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "peekOfCode": "result = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "f",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "f = open(sys.argv[1])\nheader = [f.readline () for _ in range(10)]\nranges = OrderedDict()\nfor line in f.readlines():\n\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "header = [f.readline () for _ in range(10)]\nranges = OrderedDict()\nfor line in f.readlines():\n\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "ranges",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "ranges = OrderedDict()\nfor line in f.readlines():\n\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang\n\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang\n\telse:\n\t\tstart = end = rang[0]\n\tif typ not in ranges:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\trang",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang\n\telse:\n\t\tstart = end = rang[0]\n\tif typ not in ranges:\n\t\tranges[typ] = []\n\tif ranges[typ] and ranges[typ][-1][1] == start - 1:\n\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\tstart = end = rang[0]\n\tif typ not in ranges:\n\t\tranges[typ] = []\n\tif ranges[typ] and ranges[typ][-1][1] == start - 1:\n\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:\n\t\tranges[typ].append((start, end))\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following tables are generated by running:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\tranges[typ]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\tranges[typ] = []\n\tif ranges[typ] and ranges[typ][-1][1] == start - 1:\n\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:\n\t\tranges[typ].append((start, end))\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following tables are generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-emoji-table.py emoji-data.txt\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\tranges[typ][-1]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:\n\t\tranges[typ].append((start, end))\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following tables are generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-emoji-table.py emoji-data.txt\")\nprint (\" *\")\nprint (\" * on file with this header:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tarr",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tarr = dict()\n\tfor start,end in s:\n\t\tfor i in range(start, end + 1):\n\t\t\tarr[i] = 1\n\tsol = packTab.pack_table(arr, 0, compression=9)\n\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tarr[i]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\t\tarr[i] = 1\n\tsol = packTab.pack_table(arr, 0, compression=9)\n\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()\nprint (\"#endif /* HB_UNICODE_EMOJI_TABLE_HH */\")\nprint ()\nprint (\"/* == End of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tsol",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tsol = packTab.pack_table(arr, 0, compression=9)\n\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()\nprint (\"#endif /* HB_UNICODE_EMOJI_TABLE_HH */\")\nprint ()\nprint (\"/* == End of generated table == */\")\n# Generate test file.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tcode",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()\nprint (\"#endif /* HB_UNICODE_EMOJI_TABLE_HH */\")\nprint ()\nprint (\"/* == End of generated table == */\")\n# Generate test file.\nsequences = []",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "sequences",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "sequences = []\nwith open(sys.argv[2]) as f:\n    for line in f.readlines():\n        if \"#\" in line:\n            line = line[:line.index(\"#\")]\n        if \";\" in line:\n            line = line[:line.index(\";\")]\n        line = line.strip()\n        line = line.split(\" \")\n        if len(line) < 2:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "OUTPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "OUTPUT = sys.argv[1]\nCURRENT_SOURCE_DIR = sys.argv[2]\n# make sure input files are unique\nsources = sorted(set(sys.argv[3:]))\nwith open (OUTPUT, \"wb\") as f:\n\tf.write (\"\".join ('#include \"{}\"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (\".cc\")).encode ())\n# copy it also to the source tree, but only if it has changed\nbaseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "CURRENT_SOURCE_DIR",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "CURRENT_SOURCE_DIR = sys.argv[2]\n# make sure input files are unique\nsources = sorted(set(sys.argv[3:]))\nwith open (OUTPUT, \"wb\") as f:\n\tf.write (\"\".join ('#include \"{}\"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (\".cc\")).encode ())\n# copy it also to the source tree, but only if it has changed\nbaseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "sources",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "sources = sorted(set(sys.argv[3:]))\nwith open (OUTPUT, \"wb\") as f:\n\tf.write (\"\".join ('#include \"{}\"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (\".cc\")).encode ())\n# copy it also to the source tree, but only if it has changed\nbaseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():\n\t\t\tshutil.copyfile (OUTPUT, baseline_filename)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "baseline_filename",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "baseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():\n\t\t\tshutil.copyfile (OUTPUT, baseline_filename)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "version",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "peekOfCode": "version = sys.argv[1]\nmajor, minor, micro = version.split (\".\")\nOUTPUT = sys.argv[2]\nINPUT = sys.argv[3]\nCURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "OUTPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "peekOfCode": "OUTPUT = sys.argv[2]\nINPUT = sys.argv[3]\nCURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "INPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "peekOfCode": "INPUT = sys.argv[3]\nCURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:\n\tpass",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "CURRENT_SOURCE_DIR",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "peekOfCode": "CURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:\n\tpass\nwith open (INPUT, \"r\", encoding='utf-8') as template:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "\t\t\told_version",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "peekOfCode": "\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:\n\tpass\nwith open (INPUT, \"r\", encoding='utf-8') as template:\n\twith open (OUTPUT, \"wb\") as output:\n\t\toutput.write (template.read ()\n\t\t\t.replace (\"@HB_VERSION_MAJOR@\", major)\n\t\t\t.replace (\"@HB_VERSION_MINOR@\", minor)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "baseline_filename",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "peekOfCode": "baseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():\n\t\t\tshutil.copyfile (OUTPUT, baseline_filename)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "matra_pos_left",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_left(u, block):\n  return \"PRE_M\"\ndef matra_pos_right(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_POST'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'\n  if block == 'Gujarati':\treturn  'AFTER_POST'\n  if block == 'Oriya':\t\treturn  'AFTER_POST'\n  if block == 'Tamil':\t\treturn  'AFTER_POST'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB' if u <= 0x0C42 else 'AFTER_SUB'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_pos_right",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_right(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_POST'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'\n  if block == 'Gujarati':\treturn  'AFTER_POST'\n  if block == 'Oriya':\t\treturn  'AFTER_POST'\n  if block == 'Tamil':\t\treturn  'AFTER_POST'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB' if u <= 0x0C42 else 'AFTER_SUB'\n  if block == 'Kannada':\treturn  'BEFORE_SUB' if u < 0x0CC3 or u > 0x0CD6 else 'AFTER_SUB'\n  if block == 'Malayalam':\treturn  'AFTER_POST'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_pos_top",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_top(u, block):\n  # BENG and MLYM don't have top matras.\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST' # Deviate from spec\n  if block == 'Gujarati':\treturn  'AFTER_SUB'\n  if block == 'Oriya':\t\treturn  'AFTER_MAIN'\n  if block == 'Tamil':\t\treturn  'AFTER_SUB'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB'\n  if block == 'Kannada':\treturn  'BEFORE_SUB'\n  return 'AFTER_SUB'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_pos_bottom",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_bottom(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_SUB'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'\n  if block == 'Gujarati':\treturn  'AFTER_POST'\n  if block == 'Oriya':\t\treturn  'AFTER_SUB'\n  if block == 'Tamil':\t\treturn  'AFTER_POST'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB'\n  if block == 'Kannada':\treturn  'BEFORE_SUB'\n  if block == 'Malayalam':\treturn  'AFTER_POST'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "indic_matra_position",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def indic_matra_position(u, pos, block): # Reposition matra\n  if pos == 'PRE_C':\treturn matra_pos_left(u, block)\n  if pos == 'POST_C':\treturn matra_pos_right(u, block)\n  if pos == 'ABOVE_C':\treturn matra_pos_top(u, block)\n  if pos == 'BELOW_C':\treturn matra_pos_bottom(u, block)\n  assert (False)\ndef position_to_category(pos):\n  if pos == 'PRE_C':\treturn 'VPre'\n  if pos == 'ABOVE_C':\treturn 'VAbv'\n  if pos == 'BELOW_C':\treturn 'VBlw'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "position_to_category",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def position_to_category(pos):\n  if pos == 'PRE_C':\treturn 'VPre'\n  if pos == 'ABOVE_C':\treturn 'VAbv'\n  if pos == 'BELOW_C':\treturn 'VBlw'\n  if pos == 'POST_C':\treturn 'VPst'\n  assert(False)\ndefaults = (category_map[defaults[0]], position_map[defaults[1]], defaults[2])\nindic_data = {}\nfor k, (cat, pos, block) in combined.items():\n  cat = category_map[cat]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "print_bloc",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0\n\tfor u in range (start, end+1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "ALLOWED_SINGLES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "ALLOWED_SINGLES = [0x00A0, 0x25CC]\nALLOWED_BLOCKS = [\n\t'Basic Latin',\n\t'Latin-1 Supplement',\n\t'Devanagari',\n\t'Bengali',\n\t'Gurmukhi',\n\t'Gujarati',\n\t'Oriya',\n\t'Tamil',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "ALLOWED_BLOCKS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "ALLOWED_BLOCKS = [\n\t'Basic Latin',\n\t'Latin-1 Supplement',\n\t'Devanagari',\n\t'Bengali',\n\t'Gurmukhi',\n\t'Gujarati',\n\t'Oriya',\n\t'Tamil',\n\t'Telugu',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline () for i in range (2)] for f in files]\nunicode_data = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "headers = [[f.readline () for i in range (2)] for f in files]\nunicode_data = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "unicode_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "unicode_data = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tunicode_data[i][u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue\n\t\tif not u in combined:\n\t\t\tcombined[u] = list (defaults)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "defaults",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "defaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue\n\t\tif not u in combined:\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "combined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue\n\t\tif not u in combined:\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tcombined[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types\ncategories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tcombined[u][i]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types\ncategories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',\n    'H',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "combined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types\ncategories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',\n    'H',\n    'ZWNJ',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "categories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',\n    'H',\n    'ZWNJ',\n    'ZWJ',\n    'M',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "category_map",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "category_map = {\n  'Other'\t\t\t: 'X',\n  'Avagraha'\t\t\t: 'Symbol',\n  'Bindu'\t\t\t: 'SM',\n  'Brahmi_Joining_Number'\t: 'PLACEHOLDER', # Don't care.\n  'Cantillation_Mark'\t\t: 'A',\n  'Consonant'\t\t\t: 'C',\n  'Consonant_Dead'\t\t: 'C',\n  'Consonant_Final'\t\t: 'CM',\n  'Consonant_Head_Letter'\t: 'C',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "position_map",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "position_map = {\n  'Not_Applicable'\t\t: 'END',\n  'Left'\t\t\t: 'PRE_C',\n  'Top'\t\t\t\t: 'ABOVE_C',\n  'Bottom'\t\t\t: 'BELOW_C',\n  'Right'\t\t\t: 'POST_C',\n  # These should resolve to the position of the last part of the split sequence.\n  'Bottom_And_Right'\t\t: 'POST_C',\n  'Left_And_Right'\t\t: 'POST_C',\n  'Top_And_Bottom'\t\t: 'BELOW_C',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "category_overrides",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "category_overrides = {\n  # These are the variation-selectors. They only appear in the Myanmar grammar\n  # but are not Myanmar-specific\n  0xFE00: 'VS',\n  0xFE01: 'VS',\n  0xFE02: 'VS',\n  0xFE03: 'VS',\n  0xFE04: 'VS',\n  0xFE05: 'VS',\n  0xFE06: 'VS',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "position_overrides",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "position_overrides = {\n  0x0A51: 'BELOW_C', # https://github.com/harfbuzz/harfbuzz/issues/524\n  0x0B01: 'BEFORE_SUB', # Oriya Bindu is BeforeSub in the spec.\n}\ndef matra_pos_left(u, block):\n  return \"PRE_M\"\ndef matra_pos_right(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_POST'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "defaults",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "defaults = (category_map[defaults[0]], position_map[defaults[1]], defaults[2])\nindic_data = {}\nfor k, (cat, pos, block) in combined.items():\n  cat = category_map[cat]\n  pos = position_map[pos]\n  indic_data[k] = (cat, pos, block)\nfor k,new_cat in category_overrides.items():\n  (cat, pos, _) = indic_data.get(k, defaults)\n  indic_data[k] = (new_cat, pos, unicode_data[2][k])\n# We only expect position for certain types",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "indic_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "indic_data = {}\nfor k, (cat, pos, block) in combined.items():\n  cat = category_map[cat]\n  pos = position_map[pos]\n  indic_data[k] = (cat, pos, block)\nfor k,new_cat in category_overrides.items():\n  (cat, pos, _) = indic_data.get(k, defaults)\n  indic_data[k] = (new_cat, pos, unicode_data[2][k])\n# We only expect position for certain types\npositioned_categories = ('CM', 'SM', 'RS', 'H', 'M', 'MPst')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "positioned_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "positioned_categories = ('CM', 'SM', 'RS', 'H', 'M', 'MPst')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat not in positioned_categories:\n    pos = 'END'\n    indic_data[k] = (cat, pos, block)\n# Position overrides are more complicated\n# Keep in sync with CONSONANT_FLAGS in the shaper\nconsonant_categories = ('C', 'CS', 'Ra','CM', 'V', 'PLACEHOLDER', 'DOTTEDCIRCLE')\nmatra_categories = ('M', 'MPst')\nsmvd_categories = ('SM', 'VD', 'A', 'Symbol')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "consonant_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "consonant_categories = ('C', 'CS', 'Ra','CM', 'V', 'PLACEHOLDER', 'DOTTEDCIRCLE')\nmatra_categories = ('M', 'MPst')\nsmvd_categories = ('SM', 'VD', 'A', 'Symbol')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat in consonant_categories:\n    pos = 'BASE_C'\n  elif cat in matra_categories:\n    if block.startswith('Khmer') or block.startswith('Myanmar'):\n      cat = position_to_category(pos)\n    else:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "matra_categories = ('M', 'MPst')\nsmvd_categories = ('SM', 'VD', 'A', 'Symbol')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat in consonant_categories:\n    pos = 'BASE_C'\n  elif cat in matra_categories:\n    if block.startswith('Khmer') or block.startswith('Myanmar'):\n      cat = position_to_category(pos)\n    else:\n      pos = indic_matra_position(k, pos, block)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "smvd_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "smvd_categories = ('SM', 'VD', 'A', 'Symbol')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat in consonant_categories:\n    pos = 'BASE_C'\n  elif cat in matra_categories:\n    if block.startswith('Khmer') or block.startswith('Myanmar'):\n      cat = position_to_category(pos)\n    else:\n      pos = indic_matra_position(k, pos, block)\n  elif cat in smvd_categories:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "values = [{_: 1} for _ in defaults]\nfor vv in indic_data.values():\n  for i,v in enumerate(vv):\n    values[i][v] = values[i].get (v, 0) + 1\n# Move the outliers NO-BREAK SPACE and DOTTED CIRCLE out\nsingles = {}\nfor u in ALLOWED_SINGLES:\n\tsingles[u] = indic_data[u]\n\tdel indic_data[u]\nprint (\"/* == Start of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "singles",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "singles = {}\nfor u in ALLOWED_SINGLES:\n\tsingles[u] = indic_data[u]\n\tdel indic_data[u]\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-indic-table.py IndicSyllabicCategory.txt IndicPositionalCategory.txt Blocks.txt\")\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tsingles[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tsingles[u] = indic_data[u]\n\tdel indic_data[u]\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-indic-table.py IndicSyllabicCategory.txt IndicPositionalCategory.txt Blocks.txt\")\nprint (\" *\")\nprint (\" * on files with these headers:\")\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "done",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "done = {}\nfor shaper, shaper_cats in categories.items():\n  print ('/* %s */' % shaper)\n  for cat in shaper_cats:\n    v = shaper[0].upper()\n    if cat not in done:\n      print (\"#define OT_%s %s_Cat(%s)\" % (cat, v, cat))\n      done[cat] = v\n    else:\n      print ('static_assert (OT_%s == %s_Cat(%s), \"\");' % (cat, v, cat))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "short",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "short = [{\n\t\"Repha\":\t\t'Rf',\n\t\"PLACEHOLDER\":\t\t'GB',\n\t\"DOTTEDCIRCLE\":\t\t'DC',\n\t\"VPst\":\t\t\t'VR',\n\t\"VPre\":\t\t\t'VL',\n\t\"Robatic\":\t\t'Rt',\n\t\"Xgroup\":\t\t'Xg',\n\t\"Ygroup\":\t\t'Yg',\n\t\"As\":\t\t\t'As',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "all_shorts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "all_shorts = [{},{}]\n# Add some of the values, to make them more readable, and to avoid duplicates\nfor i in range (2):\n\tfor v,s in short[i].items ():\n\t\tall_shorts[i][s] = v\nwhat = [\"OT\", \"POS\"]\nwhat_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tall_shorts[i][s]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tall_shorts[i][s] = v\nwhat = [\"OT\", \"POS\"]\nwhat_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "what",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "what = [\"OT\", \"POS\"]\nwhat_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "what_short",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "what_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "cat_defs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "cat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tvv",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tv_no_and",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tall_shorts[i][s]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tshort[i][v]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "maxlen_s",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "maxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))\nprint ()\nprint ('#pragma GCC diagnostic pop')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "maxlen_l",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "maxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))\nprint ()\nprint ('#pragma GCC diagnostic pop')\nprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "maxlen_n",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "maxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))\nprint ()\nprint ('#pragma GCC diagnostic pop')\nprint ()\nprint (\"#define INDIC_COMBINE_CATEGORIES(S,M) ((S) | ((M) << 8))\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "total",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "total = 0\nused = 0\nlast_block = None\ndef print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "used",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "used = 0\nlast_block = None\ndef print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0\n\tassert start % 8 == 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "last_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "last_block = None\ndef print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tnum",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0\n\tfor u in range (start, end+1):\n\t\tif u % 8 == 0:\n\t\t\tprint ()\n\t\t\tprint (\"  /* %04X */\" % u, end=\"\")\n\t\tif u in data:\n\t\t\tnum += 1\n\t\td = data.get (u, defaults)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\td = data.get (u, defaults)\n\t\tprint (\"%9s\" % (\"_(%s,%s),\" % (short[0][d[0]], short[1][d[1]])), end=\"\")\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block\nuu = sorted (indic_data)\nlast = -100000\nnum = 0\noffset = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tlast_block = block\nuu = sorted (indic_data)\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "uu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "uu = sorted (indic_data)\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "last",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "last = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "num",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "num = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "offset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "starts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "starts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "ends",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "ends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tblock",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1\n\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1\n\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:\n\t\t\tif last >= 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1\n\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:\n\t\t\tif last >= 0:\n\t\t\t\tends.append (last + 1)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:\n\t\t\tif last >= 0:\n\t\t\t\tends.append (last + 1)\n\t\t\t\toffset += ends[-1] - starts[-1]\n\t\t\tprint ()\n\t\t\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tlast",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tlast = end\nends.append (last + 1)\noffset += ends[-1] - starts[-1]\nprint ()\nprint ()\noccupancy = used * 100. / total\npage_bits = 12\nprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\nprint ()\nprint (\"uint16_t\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "occupancy",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "occupancy = used * 100. / total\npage_bits = 12\nprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\nprint ()\nprint (\"uint16_t\")\nprint (\"hb_indic_get_categories (hb_codepoint_t u)\")\nprint (\"{\")\nprint (\"  switch (u >> %d)\" % page_bits)\nprint (\"  {\")\npages = set ([u>>page_bits for u in starts+ends+list (singles.keys ())])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "page_bits",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "page_bits = 12\nprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\nprint ()\nprint (\"uint16_t\")\nprint (\"hb_indic_get_categories (hb_codepoint_t u)\")\nprint (\"{\")\nprint (\"  switch (u >> %d)\" % page_bits)\nprint (\"  {\")\npages = set ([u>>page_bits for u in starts+ends+list (singles.keys ())])\nfor p in sorted(pages):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "pages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "pages = set ([u>>page_bits for u in starts+ends+list (singles.keys ())])\nfor p in sorted(pages):\n\tprint (\"    case 0x%0Xu:\" % p)\n\tfor u,d in singles.items ():\n\t\tif p != u>>page_bits: continue\n\t\tprint (\"      if (unlikely (u == 0x%04Xu)) return _(%s,%s);\" % (u, short[0][d[0]], short[1][d[1]]))\n\tfor (start,end) in zip (starts, ends):\n\t\tif p not in [start>>page_bits, end>>page_bits]: continue\n\t\toffset = \"indic_offset_0x%04xu\" % start\n\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return indic_table[u - 0x%04Xu + %s];\" % (start, end-1, start, offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\toffset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\toffset = \"indic_offset_0x%04xu\" % start\n\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return indic_table[u - 0x%04Xu + %s];\" % (start, end-1, start, offset))\n\tprint (\"      break;\")\n\tprint (\"\")\nprint (\"    default:\")\nprint (\"      break;\")\nprint (\"  }\")\nprint (\"  return _(X,X);\")\nprint (\"}\")\nprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tvv",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tprint (\"#undef %s_%s\" %\n\t\t\t(what_short[i], short[i][v]))\nprint ()\nprint ('#endif')\nprint ()\nprint (\"/* == End of generated table == */\")\n# Maintain at least 50% occupancy in the table */\nif occupancy < 50:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "peekOfCode": "args = sys.argv[1:]\ninput_file = args[0]\nwith open (input_file, mode=\"r\", encoding=\"utf-8\") as f:\n  all_ranges = []\n  current_bit = 0\n  while True:\n    line = f.readline().strip()\n    if not line:\n      break\n    fields = re.split(r'\\t+', line)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "documentation": {}
    },
    {
        "label": "input_file",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "peekOfCode": "input_file = args[0]\nwith open (input_file, mode=\"r\", encoding=\"utf-8\") as f:\n  all_ranges = []\n  current_bit = 0\n  while True:\n    line = f.readline().strip()\n    if not line:\n      break\n    fields = re.split(r'\\t+', line)\n    if len(fields) == 3:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "documentation": {}
    },
    {
        "label": "all_ranges",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "peekOfCode": "all_ranges = sorted(all_ranges, key=lambda t: t[0])\nfor ranges in all_ranges:\n  start = (\"0x%X\" % ranges[0]).rjust(8)\n  end = (\"0x%X\" % ranges[1]).rjust(8)\n  bit = (\"%s\" % ranges[2]).rjust(3)\n  print (\"  {%s, %s, %s}, // %s\" % (start, end, bit, ranges[3]))\nprint (\"\"\"};\"\"\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-os2-unicode-ranges",
        "documentation": {}
    },
    {
        "label": "ragel",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "ragel = sys.argv[1]\nif not ragel:\n\tsys.exit ('You have to install ragel if you are going to develop HarfBuzz itself')\nif len (sys.argv) < 4:\n\tsys.exit (__doc__)\nOUTPUT = sys.argv[2]\nCURRENT_SOURCE_DIR = sys.argv[3]\nINPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "OUTPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "OUTPUT = sys.argv[2]\nCURRENT_SOURCE_DIR = sys.argv[3]\nINPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "CURRENT_SOURCE_DIR",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "CURRENT_SOURCE_DIR = sys.argv[3]\nINPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "INPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "INPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "outdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "outdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "rl",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "rl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "hh",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "hh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "LanguageTa",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "class LanguageTag (object):\n\t\"\"\"A BCP 47 language tag.\n\tAttributes:\n\t\tsubtags (List[str]): The list of subtags in this tag.\n\t\tgrandfathered (bool): Whether this tag is grandfathered. If\n\t\t\t``true``, the entire lowercased tag is the ``language``\n\t\t\tand the other subtag fields are empty.\n\t\tlanguage (str): The language subtag.\n\t\tscript (str): The script subtag.\n\t\tregion (str): The region subtag.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "OpenTypeRegistryParse",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "class OpenTypeRegistryParser (HTMLParser):\n\t\"\"\"A parser for the OpenType language system tag registry.\n\tAttributes:\n\t\theader (str): The \"last updated\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of language system tags to the\n\t\t\tnames they are given in the registry.\n\t\tranks (DefaultDict[str, int]): A map of language system tags to\n\t\t\tnumbers. If a single BCP 47 tag corresponds to multiple\n\t\t\tOpenType tags, the tags are ordered in increasing order by\n\t\t\trank. The rank is based on the number of BCP 47 tags",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "BCP47Parse",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "class BCP47Parser (object):\n\t\"\"\"A parser for the BCP 47 subtag registry.\n\tAttributes:\n\t\theader (str): The \"File-Date\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of subtags to the names they\n\t\t\tare given in the registry. Each value is a\n\t\t\t``'\\\\n'``-separated list of names.\n\t\tscopes (Mapping[str, str]): A map of language subtags to strings\n\t\t\tsuffixed to language names, including suffixes to explain\n\t\t\tlanguage scopes.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "expec",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def expect (condition, message=None):\n\tif not condition:\n\t\tif message is None:\n\t\t\traise AssertionError\n\t\traise AssertionError (message)\ndef write (s):\n\tsys.stdout.flush ()\n\tsys.stdout.buffer.write (s.encode ('utf-8'))\nDEFAULT_LANGUAGE_SYSTEM = ''\n# from https://www-01.sil.org/iso639-3/iso-639-3.tab",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "writ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def write (s):\n\tsys.stdout.flush ()\n\tsys.stdout.buffer.write (s.encode ('utf-8'))\nDEFAULT_LANGUAGE_SYSTEM = ''\n# from https://www-01.sil.org/iso639-3/iso-639-3.tab\nISO_639_3_TO_1 = {\n\t'aar': 'aa',\n\t'abk': 'ab',\n\t'afr': 'af',\n\t'aka': 'ak',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "rank_delt",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def rank_delta (bcp_47, ot):\n\t\"\"\"Return a delta to apply to a BCP 47 tag's rank.\n\tMost OpenType tags have a constant rank, but a few have ranks that\n\tdepend on the BCP 47 tag.\n\tArgs:\n\t\tbcp_47 (str): A BCP 47 tag.\n\t\tot (str): An OpenType tag to.\n\tReturns:\n\t\tA number to add to ``ot``'s rank when sorting ``bcp_47``'s\n\t\tOpenType equivalents.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "hb_ta",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def hb_tag (tag):\n\t\"\"\"Convert a tag to ``HB_TAG`` form.\n\tArgs:\n\t\ttag (str): An OpenType tag.\n\tReturns:\n\t\tA snippet of C++ representing ``tag``.\n\t\"\"\"\n\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\treturn 'HB_TAG_NONE\\t       '\n\treturn \"HB_TAG('%s','%s','%s','%s')\" % tuple (('%-4s' % tag)[:4])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "get_variant_se",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def get_variant_set (name):\n\t\"\"\"Return a set of variant language names from a name.\n\tArgs:\n\t\tname (str): A list of language names from the BCP 47 registry,\n\t\t\tjoined on ``'\\\\n'``.\n\tReturns:\n\t\tA set of normalized language names.\n\t\"\"\"\n\treturn set (unicodedata.normalize ('NFD', n.replace ('\\u2019', \"'\"))\n\t\t\t.encode ('ASCII', 'ignore')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "language_name_intersectio",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def language_name_intersection (a, b):\n\t\"\"\"Return the names in common between two language names.\n\tArgs:\n\t\ta (str): A list of language names from the BCP 47 registry,\n\t\t\tjoined on ``'\\\\n'``.\n\t\tb (str): A list of language names from the BCP 47 registry,\n\t\t\tjoined on ``'\\\\n'``.\n\tReturns:\n\t\tThe normalized language names shared by ``a`` and ``b``.\n\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "get_matching_language_nam",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def get_matching_language_name (intersection, candidates):\n\treturn next (iter (c for c in candidates if not intersection.isdisjoint (get_variant_set (c))))\ndef same_tag (bcp_47_tag, ot_tags):\n\treturn len (bcp_47_tag) == 3 and len (ot_tags) == 1 and bcp_47_tag == ot_tags[0].lower ()\nfor language_len in (2, 3):\n\tif language_len == 3:\n\t\tprint ('#ifndef HB_NO_LANGUAGE_LONG')\n\tprint ('static const LangTag ot_languages%d[] = {' % language_len)\n\tfor language, tags in sorted (ot.from_bcp_47.items ()):\n\t\tif language == '' or '-' in language:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "same_ta",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def same_tag (bcp_47_tag, ot_tags):\n\treturn len (bcp_47_tag) == 3 and len (ot_tags) == 1 and bcp_47_tag == ot_tags[0].lower ()\nfor language_len in (2, 3):\n\tif language_len == 3:\n\t\tprint ('#ifndef HB_NO_LANGUAGE_LONG')\n\tprint ('static const LangTag ot_languages%d[] = {' % language_len)\n\tfor language, tags in sorted (ot.from_bcp_47.items ()):\n\t\tif language == '' or '-' in language:\n\t\t\tcontinue\n\t\tif len(language) != language_len: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "print_subtag_matche",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def print_subtag_matches (subtag, string, new_line):\n\tif subtag:\n\t\tif new_line:\n\t\t\tprint ()\n\t\t\tprint ('\\t&& ', end='')\n\t\tprint ('subtag_matches (%s, limit, \"-%s\", %i)' % (string, subtag, 1 + len (subtag)), end='')\ncomplex_tags = collections.defaultdict (list)\nfor initial, group in itertools.groupby ((lt_tags for lt_tags in [\n\t\t\t(LanguageTag (language), tags)\n\t\t\tfor language, tags in sorted (ot.from_bcp_47.items (),",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "verify_disambiguation_dic",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def verify_disambiguation_dict ():\n\t\"\"\"Verify and normalize ``disambiguation``.\n\t``disambiguation`` is a map of ambiguous OpenType language system\n\ttags to the particular BCP 47 tags they correspond to. This function\n\tchecks that all its keys really are ambiguous and that each key's\n\tvalue is valid for that key. It checks that no ambiguous tag is\n\tmissing, except when it can figure out which BCP 47 tag is the best\n\tby itself.\n\tIt modifies ``disambiguation`` to remove keys whose values are the\n\tsame as those that the fallback would return anyway, and to add",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "DEFAULT_LANGUAGE_SYSTEM",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "DEFAULT_LANGUAGE_SYSTEM = ''\n# from https://www-01.sil.org/iso639-3/iso-639-3.tab\nISO_639_3_TO_1 = {\n\t'aar': 'aa',\n\t'abk': 'ab',\n\t'afr': 'af',\n\t'aka': 'ak',\n\t'amh': 'am',\n\t'ara': 'ar',\n\t'arg': 'an',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ISO_639_3_TO_1",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ISO_639_3_TO_1 = {\n\t'aar': 'aa',\n\t'abk': 'ab',\n\t'afr': 'af',\n\t'aka': 'ak',\n\t'amh': 'am',\n\t'ara': 'ar',\n\t'arg': 'an',\n\t'asm': 'as',\n\t'ava': 'av',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.subtags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.subtags = tag.lower ().split ('-')\n\t\tself.grandfathered = tag.lower () in bcp_47.grandfathered\n\t\tif self.grandfathered:\n\t\t\tself.language = tag.lower ()\n\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.grandfathered",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.grandfathered = tag.lower () in bcp_47.grandfathered\n\t\tif self.grandfathered:\n\t\t\tself.language = tag.lower ()\n\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.language",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.language = tag.lower ()\n\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.script",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.region",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.variant",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.language",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.script",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):\n\t\ttry:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.region",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):\n\t\ttry:\n\t\t\treturn next (iter (filter (function, sequence)))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.variant",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):\n\t\ttry:\n\t\t\treturn next (iter (filter (function, sequence)))\n\t\texcept StopIteration:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.header = ''\n\t\tself.names = {}\n\t\tself.ranks = collections.defaultdict (int)\n\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.names",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.names = {}\n\t\tself.ranks = collections.defaultdict (int)\n\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.ranks",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.ranks = collections.defaultdict (int)\n\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.to_bcp_47",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.from_bcp_47",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.from_bcp_47_uninherited",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself._td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself._br",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:\n\t\t\t\tif attr == 'name' and value == 'updated_at':\n\t\t\t\t\tself.header = self.get_starttag_text ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself._current_tr",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:\n\t\t\t\tif attr == 'name' and value == 'updated_at':\n\t\t\t\t\tself.header = self.get_starttag_text ()\n\t\t\t\t\tbreak\n\t\telif tag == 'td':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._br",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:\n\t\t\t\tif attr == 'name' and value == 'updated_at':\n\t\t\t\t\tself.header = self.get_starttag_text ()\n\t\t\t\t\tbreak\n\t\telif tag == 'td':\n\t\t\tself._td = True\n\t\t\tself._current_tr.append ('')\n\t\telif tag == 'tr':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tself.header = self.get_starttag_text ()\n\t\t\t\t\tbreak\n\t\telif tag == 'td':\n\t\t\tself._td = True\n\t\t\tself._current_tr.append ('')\n\t\telif tag == 'tr':\n\t\t\tself._br = False\n\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._td = True\n\t\t\tself._current_tr.append ('')\n\t\telif tag == 'tr':\n\t\t\tself._br = False\n\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':\n\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._br",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._br = False\n\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':\n\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)\n\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._current_tr",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':\n\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)\n\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)\n\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tname",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\trank",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\trank",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.names[tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:\n\t\t\tself._current_tr[-1] += data",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tiso_codes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:\n\t\t\tself._current_tr[-1] += data\n\tdef handle_charref (self, name):\n\t\tself.handle_data (html.unescape ('&#%s;' % name))\n\tdef handle_entityref (self, name):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.ranks[tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:\n\t\t\tself._current_tr[-1] += data\n\tdef handle_charref (self, name):\n\t\tself.handle_data (html.unescape ('&#%s;' % name))\n\tdef handle_entityref (self, name):\n\t\tself.handle_data (html.unescape ('&%s;' % name))\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the OpenType language system tag registry.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\ts = set ()\n\t\t\t\t\tfor language in bcp_47.macrolanguages[macrolanguage]:\n\t\t\t\t\t\tif language.lower () not in bcp_47.grandfathered:\n\t\t\t\t\t\t\ts.add ('%s-%s' % (language, suffix))\n\t\t\t\t\tbcp_47.macrolanguages['%s-%s' % (macrolanguage, suffix)] = s\n\t\t\texcept ValueError:\n\t\t\t\tpass\n\t@staticmethod\n\tdef _remove_language (tag_1, dict_1, dict_2):\n\t\tfor tag_2 in dict_1.pop (tag_1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tfirst_time",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tfirst_time = self.from_bcp_47_uninherited is None\n\t\tif first_time:\n\t\t\tself.from_bcp_47_uninherited = dict (self.from_bcp_47)\n\t\tfor macrolanguage, languages in dict (bcp_47.macrolanguages).items ():\n\t\t\tot_macrolanguages = {\n\t\t\t\tot_macrolanguage for ot_macrolanguage in self.from_bcp_47_uninherited.get (macrolanguage, set ())\n\t\t\t}\n\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.from_bcp_47_uninherited",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.from_bcp_47_uninherited = dict (self.from_bcp_47)\n\t\tfor macrolanguage, languages in dict (bcp_47.macrolanguages).items ():\n\t\t\tot_macrolanguages = {\n\t\t\t\tot_macrolanguage for ot_macrolanguage in self.from_bcp_47_uninherited.get (macrolanguage, set ())\n\t\t\t}\n\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tot_macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tot_macrolanguages = {\n\t\t\t\tot_macrolanguage for ot_macrolanguage in self.from_bcp_47_uninherited.get (macrolanguage, set ())\n\t\t\t}\n\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tblocked_ot_macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tround_trip_languages = {\n\t\t\t\t\t\tl for l in languages\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tround_trip_macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tround_trip_languages = {\n\t\t\t\t\t\tl for l in languages\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tintersection = round_trip_macrolanguages & round_trip_languages\n\t\t\t\t\tif intersection and intersection != round_trip_languages:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tround_trip_languages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tround_trip_languages = {\n\t\t\t\t\t\tl for l in languages\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tintersection = round_trip_macrolanguages & round_trip_languages\n\t\t\t\t\tif intersection and intersection != round_trip_languages:\n\t\t\t\t\t\tblocked_ot_macrolanguages.add (ot_macrolanguage)\n\t\t\tif ot_macrolanguages:\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tif ot_macrolanguage not in blocked_ot_macrolanguages:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tintersection",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tintersection = round_trip_macrolanguages & round_trip_languages\n\t\t\t\t\tif intersection and intersection != round_trip_languages:\n\t\t\t\t\t\tblocked_ot_macrolanguages.add (ot_macrolanguage)\n\t\t\tif ot_macrolanguages:\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tif ot_macrolanguage not in blocked_ot_macrolanguages:\n\t\t\t\t\t\tfor language in languages:\n\t\t\t\t\t\t\tself.add_language (language, ot_macrolanguage)\n\t\t\t\t\t\t\tif not blocked_ot_macrolanguages:\n\t\t\t\t\t\t\t\tself.ranks[ot_macrolanguage] += 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.from_bcp_47[language]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.from_bcp_47[language] = sorted (tags,\n\t\t\t\t\tkey=lambda t: (self.ranks[t] + rank_delta (language, t), t))\not = OpenTypeRegistryParser ()\nclass BCP47Parser (object):\n\t\"\"\"A parser for the BCP 47 subtag registry.\n\tAttributes:\n\t\theader (str): The \"File-Date\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of subtags to the names they\n\t\t\tare given in the registry. Each value is a\n\t\t\t``'\\\\n'``-separated list of names.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot = OpenTypeRegistryParser ()\nclass BCP47Parser (object):\n\t\"\"\"A parser for the BCP 47 subtag registry.\n\tAttributes:\n\t\theader (str): The \"File-Date\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of subtags to the names they\n\t\t\tare given in the registry. Each value is a\n\t\t\t``'\\\\n'``-separated list of names.\n\t\tscopes (Mapping[str, str]): A map of language subtags to strings\n\t\t\tsuffixed to language names, including suffixes to explain",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.header = ''\n\t\tself.names = {}\n\t\tself.scopes = {}\n\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.names",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.names = {}\n\t\tself.scopes = {}\n\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.scopes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.scopes = {}\n\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:\n\t\t\tsubtag_type = None",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.prefixes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:\n\t\t\tsubtag_type = None\n\t\t\tsubtag = None",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.grandfathered",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:\n\t\t\tsubtag_type = None\n\t\t\tsubtag = None\n\t\t\tdeprecated = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tsubtag_type",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tsubtag_type = None\n\t\t\tsubtag = None\n\t\t\tdeprecated = False\n\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tsubtag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tsubtag = None\n\t\t\tdeprecated = False\n\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tdeprecated",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tdeprecated = False\n\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\thas_preferred_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):\n\t\t\t\t\tsubtag_type = line.split (' ')[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline_buffer",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):\n\t\t\t\t\tsubtag_type = line.split (' ')[1]\n\t\t\t\t\tdeprecated = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):\n\t\t\t\t\tsubtag_type = line.split (' ')[1]\n\t\t\t\t\tdeprecated = False\n\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tsubtag_type",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tsubtag_type = line.split (' ')[1]\n\t\t\t\t\tdeprecated = False\n\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):\n\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdeprecated",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdeprecated = False\n\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):\n\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\thas_preferred_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):\n\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tsubtag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:\n\t\t\t\t\t\tself.names[subtag] += '\\n' + description\n\t\t\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdescription",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:\n\t\t\t\t\t\tself.names[subtag] += '\\n' + description\n\t\t\t\t\telse:\n\t\t\t\t\t\tself.names[subtag] = description\n\t\t\t\telif subtag_type == 'language' or subtag_type == 'grandfathered':\n\t\t\t\t\tif line.startswith ('Scope: '):\n\t\t\t\t\t\tscope = line.split (' ')[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdescription",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:\n\t\t\t\t\t\tself.names[subtag] += '\\n' + description\n\t\t\t\t\telse:\n\t\t\t\t\t\tself.names[subtag] = description\n\t\t\t\telif subtag_type == 'language' or subtag_type == 'grandfathered':\n\t\t\t\t\tif line.startswith ('Scope: '):\n\t\t\t\t\t\tscope = line.split (' ')[1]\n\t\t\t\t\t\tif scope == 'macrolanguage':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.names[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.names[subtag] = description\n\t\t\t\telif subtag_type == 'language' or subtag_type == 'grandfathered':\n\t\t\t\t\tif line.startswith ('Scope: '):\n\t\t\t\t\t\tscope = line.split (' ')[1]\n\t\t\t\t\t\tif scope == 'macrolanguage':\n\t\t\t\t\t\t\tscope = ' [macrolanguage]'\n\t\t\t\t\t\telif scope == 'collection':\n\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tscope = line.split (' ')[1]\n\t\t\t\t\t\tif scope == 'macrolanguage':\n\t\t\t\t\t\t\tscope = ' [macrolanguage]'\n\t\t\t\t\t\telif scope == 'collection':\n\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\t\tscope = ' [macrolanguage]'\n\t\t\t\t\t\telif scope == 'collection':\n\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.scopes[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.\n\t\t\t\t\t\tfor language in line.replace (',', '').split (' ')[2:]:\n\t\t\t\t\t\t\tself._add_macrolanguage (subtag, language)\n\t\t\t\t\telif line.startswith ('Preferred-Value: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.scopes[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.\n\t\t\t\t\t\tfor language in line.replace (',', '').split (' ')[2:]:\n\t\t\t\t\t\t\tself._add_macrolanguage (subtag, language)\n\t\t\t\t\telif line.startswith ('Preferred-Value: '):\n\t\t\t\t\t\t# If a subtag is deprecated in favor of a single replacement subtag,\n\t\t\t\t\t\t# it is either a dialect or synonym of the preferred subtag. Either",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tdeprecated",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.\n\t\t\t\t\t\tfor language in line.replace (',', '').split (' ')[2:]:\n\t\t\t\t\t\t\tself._add_macrolanguage (subtag, language)\n\t\t\t\t\telif line.startswith ('Preferred-Value: '):\n\t\t\t\t\t\t# If a subtag is deprecated in favor of a single replacement subtag,\n\t\t\t\t\t\t# it is either a dialect or synonym of the preferred subtag. Either\n\t\t\t\t\t\t# way, it is close enough to the truth to consider the replacement",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\thas_preferred_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\thas_preferred_value = True\n\t\t\t\t\t\tmacrolanguage = line.split (' ')[1]\n\t\t\t\t\t\tself._add_macrolanguage (macrolanguage, subtag)\n\t\t\t\t\telif not has_preferred_value and line.startswith ('Macrolanguage: '):\n\t\t\t\t\t\tself._add_macrolanguage (line.split (' ')[1], subtag)\n\t\t\t\telif subtag_type == 'variant':\n\t\t\t\t\tif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\telif line.startswith ('Prefix: '):\n\t\t\t\t\t\tself.prefixes[subtag].add (line.split (' ')[1])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tmacrolanguage",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tmacrolanguage = line.split (' ')[1]\n\t\t\t\t\t\tself._add_macrolanguage (macrolanguage, subtag)\n\t\t\t\t\telif not has_preferred_value and line.startswith ('Macrolanguage: '):\n\t\t\t\t\t\tself._add_macrolanguage (line.split (' ')[1], subtag)\n\t\t\t\telif subtag_type == 'variant':\n\t\t\t\t\tif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\telif line.startswith ('Prefix: '):\n\t\t\t\t\t\tself.prefixes[subtag].add (line.split (' ')[1])\n\t\t\t\telif line.startswith ('File-Date: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.scopes[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\telif line.startswith ('Prefix: '):\n\t\t\t\t\t\tself.prefixes[subtag].add (line.split (' ')[1])\n\t\t\t\telif line.startswith ('File-Date: '):\n\t\t\t\t\tself.header = line\n\t\texpect (self.header)\n\tdef _add_macrolanguage (self, macrolanguage, language):\n\t\tglobal ot\n\t\tif language not in ot.from_bcp_47:\n\t\t\tfor l in self.macrolanguages.get (language, set ()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tself.header = line\n\t\texpect (self.header)\n\tdef _add_macrolanguage (self, macrolanguage, language):\n\t\tglobal ot\n\t\tif language not in ot.from_bcp_47:\n\t\t\tfor l in self.macrolanguages.get (language, set ()):\n\t\t\t\tself._add_macrolanguage (macrolanguage, l)\n\t\tif macrolanguage not in ot.from_bcp_47:\n\t\t\tfor ls in list (self.macrolanguages.values ()):\n\t\t\t\tif macrolanguage in ls:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tinverted",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tinverted = collections.defaultdict (list)\n\t\tfor macrolanguage, languages in self.macrolanguages.items ():\n\t\t\tfor language in languages:\n\t\t\t\tinverted[language].append (macrolanguage)\n\t\tfor language, macrolanguages in inverted.items ():\n\t\t\tif len (macrolanguages) > 1:\n\t\t\t\tmacrolanguages.sort (key=lambda ml: len (self.macrolanguages[ml]))\n\t\t\t\tbiggest_macrolanguage = macrolanguages.pop ()\n\t\t\t\tfor macrolanguage in macrolanguages:\n\t\t\t\t\tself._add_macrolanguage (biggest_macrolanguage, macrolanguage)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tbiggest_macrolanguage",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tbiggest_macrolanguage = macrolanguages.pop ()\n\t\t\t\tfor macrolanguage in macrolanguages:\n\t\t\t\t\tself._add_macrolanguage (biggest_macrolanguage, macrolanguage)\n\tdef _get_name_piece (self, subtag):\n\t\t\"\"\"Return the first name of a subtag plus its scope suffix.\n\t\tArgs:\n\t\t\tsubtag (str): A BCP 47 subtag.\n\t\tReturns:\n\t\t\tThe name form of ``subtag``.\n\t\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tname",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tname = self._get_name_piece (lt.language)\n\t\tif lt.script:\n\t\t\tname += '; ' + self._get_name_piece (lt.script.title ())\n\t\tif lt.region:\n\t\t\tname += '; ' + self._get_name_piece (lt.region.upper ())\n\t\tif lt.variant:\n\t\t\tname += '; ' + self._get_name_piece (lt.variant)\n\t\treturn name\nbcp_47 = BCP47Parser ()\not.parse (sys.argv[1])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47 = BCP47Parser ()\not.parse (sys.argv[1])\nbcp_47.parse (sys.argv[2])\not.add_language ('ary', 'MOR')\not.add_language ('ath', 'ATH')\not.add_language ('bai', 'BML')\not.ranks['BAL'] = ot.ranks['KAR'] + 1\not.add_language ('ber', 'BBR')\not.remove_language_ot ('PGR')\not.add_language ('el-polyton', 'PGR')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['BAL']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['BAL'] = ot.ranks['KAR'] + 1\not.add_language ('ber', 'BBR')\not.remove_language_ot ('PGR')\not.add_language ('el-polyton', 'PGR')\nbcp_47.macrolanguages['et'] = {'ekk'}\nbcp_47.names['flm'] = 'Falam Chin'\nbcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['et']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['et'] = {'ekk'}\nbcp_47.names['flm'] = 'Falam Chin'\nbcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.names['flm']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.names['flm'] = 'Falam Chin'\nbcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.scopes['flm']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')\not.add_language ('und-Geok', 'KGE')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['flm']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')\not.add_language ('und-Geok', 'KGE')\nbcp_47.macrolanguages['id'] = {'in'}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['FNE']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')\not.add_language ('und-Geok', 'KGE')\nbcp_47.macrolanguages['id'] = {'in'}\nbcp_47.macrolanguages['ijo'] = {'ijc'}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['id']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['id'] = {'in'}\nbcp_47.macrolanguages['ijo'] = {'ijc'}\not.add_language ('kht', 'KHN')\not.names['KHN'] = ot.names['KHT'] + ' (Microsoft fonts)'\not.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['ijo']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['ijo'] = {'ijc'}\not.add_language ('kht', 'KHN')\not.names['KHN'] = ot.names['KHT'] + ' (Microsoft fonts)'\not.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.names['KHN']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.names['KHN'] = ot.names['KHT'] + ' (Microsoft fonts)'\not.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['KHN']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['LCR']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.names['MAL']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')\not.add_language ('qub', 'QWH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.names['mhv']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')\not.add_language ('qub', 'QWH')\not.add_language ('qud', 'QVI')\not.add_language ('qug', 'QVI')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.scopes['mhv']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')\not.add_language ('qub', 'QWH')\not.add_language ('qud', 'QVI')\not.add_language ('qug', 'QVI')\not.add_language ('qul', 'QUH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.names['xst']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.names['xst'] = \"Silt'e\"\nbcp_47.scopes['xst'] = ' (retired code)'\nbcp_47.macrolanguages['xst'] = {'stv', 'wle'}\not.add_language ('xwo', 'TOD')\not.remove_language_ot ('ZHH')\not.remove_language_ot ('ZHP')\not.remove_language_ot ('ZHT')\not.remove_language_ot ('ZHTM')\nbcp_47.macrolanguages['zh'].remove ('lzh')\nbcp_47.macrolanguages['zh'].remove ('yue')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.scopes['xst']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.scopes['xst'] = ' (retired code)'\nbcp_47.macrolanguages['xst'] = {'stv', 'wle'}\not.add_language ('xwo', 'TOD')\not.remove_language_ot ('ZHH')\not.remove_language_ot ('ZHP')\not.remove_language_ot ('ZHT')\not.remove_language_ot ('ZHTM')\nbcp_47.macrolanguages['zh'].remove ('lzh')\nbcp_47.macrolanguages['zh'].remove ('yue')\not.add_language ('zh-Hant-MO', 'ZHH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['xst']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['xst'] = {'stv', 'wle'}\not.add_language ('xwo', 'TOD')\not.remove_language_ot ('ZHH')\not.remove_language_ot ('ZHP')\not.remove_language_ot ('ZHT')\not.remove_language_ot ('ZHTM')\nbcp_47.macrolanguages['zh'].remove ('lzh')\nbcp_47.macrolanguages['zh'].remove ('yue')\not.add_language ('zh-Hant-MO', 'ZHH')\not.add_language ('zh-Hant-MO', 'ZHTM')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['zom']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['zom'] = {'yos'}\ndef rank_delta (bcp_47, ot):\n\t\"\"\"Return a delta to apply to a BCP 47 tag's rank.\n\tMost OpenType tags have a constant rank, but a few have ranks that\n\tdepend on the BCP 47 tag.\n\tArgs:\n\t\tbcp_47 (str): A BCP 47 tag.\n\t\tot (str): An OpenType tag to.\n\tReturns:\n\t\tA number to add to ``ot``'s rank when sorting ``bcp_47``'s",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "disambiguation",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "disambiguation = {\n\t'ALT': 'alt',\n\t'ARK': 'rki',\n\t'ATH': 'ath',\n\t'BHI': 'bhb',\n\t'BLN': 'bjt',\n\t'BTI': 'beb',\n\t'CCHN': 'cco',\n\t'CMR': 'swb',\n\t'CPP': 'crp',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.names[DEFAULT_LANGUAGE_SYSTEM]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.names[DEFAULT_LANGUAGE_SYSTEM] = '*/'\not.ranks[DEFAULT_LANGUAGE_SYSTEM] = max (ot.ranks.values ()) + 1\nfor tricky_ot_tag in filter (lambda tag: re.match ('[A-Z]{3}$', tag), ot.names):\n\tpossible_bcp_47_tag = tricky_ot_tag.lower ()\n\tif possible_bcp_47_tag in bcp_47.names and not ot.from_bcp_47[possible_bcp_47_tag]:\n\t\tot.add_language (possible_bcp_47_tag, DEFAULT_LANGUAGE_SYSTEM)\n\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks[DEFAULT_LANGUAGE_SYSTEM]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks[DEFAULT_LANGUAGE_SYSTEM] = max (ot.ranks.values ()) + 1\nfor tricky_ot_tag in filter (lambda tag: re.match ('[A-Z]{3}$', tag), ot.names):\n\tpossible_bcp_47_tag = tricky_ot_tag.lower ()\n\tif possible_bcp_47_tag in bcp_47.names and not ot.from_bcp_47[possible_bcp_47_tag]:\n\t\tot.add_language (possible_bcp_47_tag, DEFAULT_LANGUAGE_SYSTEM)\n\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')\nprint (' * The following table is generated by running:')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\tpossible_bcp_47_tag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\tpossible_bcp_47_tag = tricky_ot_tag.lower ()\n\tif possible_bcp_47_tag in bcp_47.names and not ot.from_bcp_47[possible_bcp_47_tag]:\n\t\tot.add_language (possible_bcp_47_tag, DEFAULT_LANGUAGE_SYSTEM)\n\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')\nprint (' * The following table is generated by running:')\nprint (' *')\nprint (' *   %s languagetags language-subtag-registry' % sys.argv[0])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tbcp_47.macrolanguages[possible_bcp_47_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')\nprint (' * The following table is generated by running:')\nprint (' *')\nprint (' *   %s languagetags language-subtag-registry' % sys.argv[0])\nprint (' *')\nprint (' * on files with these headers:')\nprint (' *')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tcommented_out",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tcommented_out = same_tag (language, tags)\n\t\tfor i, tag in enumerate (tags, start=1):\n\t\t\tprint ('%s{%s,\\t%s},' % ('/*' if commented_out else '  ', hb_tag (language), hb_tag (tag)), end='')\n\t\t\tif commented_out:\n\t\t\t\tprint ('*/', end='')\n\t\t\tprint ('\\t/* ', end='')\n\t\t\tbcp_47_name = bcp_47.names.get (language, '')\n\t\t\tbcp_47_name_candidates = bcp_47_name.split ('\\n')\n\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tbcp_47_name",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tbcp_47_name = bcp_47.names.get (language, '')\n\t\t\tbcp_47_name_candidates = bcp_47_name.split ('\\n')\n\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tbcp_47_name_candidates",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tbcp_47_name_candidates = bcp_47_name.split ('\\n')\n\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tot_name",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:\n\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:\n\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)\n\t\t\t\t\tbcp_47.names[language] = name",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tintersection",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:\n\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)\n\t\t\t\t\tbcp_47.names[language] = name\n\t\t\t\t\twrite ('%s%s' % (name if len (name) > len (ot_name) else ot_name, scope))\n\t\t\tprint (' */')\n\tprint ('};')\n\tif language_len == 3:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tname",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)\n\t\t\t\t\tbcp_47.names[language] = name\n\t\t\t\t\twrite ('%s%s' % (name if len (name) > len (ot_name) else ot_name, scope))\n\t\t\tprint (' */')\n\tprint ('};')\n\tif language_len == 3:\n\t\tprint ('#endif')\n\tprint ()\nprint ('/**')\nprint (' * hb_ot_tags_from_complex_language:')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tbcp_47.names[language]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tbcp_47.names[language] = name\n\t\t\t\t\twrite ('%s%s' % (name if len (name) > len (ot_name) else ot_name, scope))\n\t\t\tprint (' */')\n\tprint ('};')\n\tif language_len == 3:\n\t\tprint ('#endif')\n\tprint ()\nprint ('/**')\nprint (' * hb_ot_tags_from_complex_language:')\nprint (' * @lang_str: a BCP 47 language tag to convert.')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "complex_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "complex_tags = collections.defaultdict (list)\nfor initial, group in itertools.groupby ((lt_tags for lt_tags in [\n\t\t\t(LanguageTag (language), tags)\n\t\t\tfor language, tags in sorted (ot.from_bcp_47.items (),\n\t\t\t\tkey=lambda i: (-len (i[0]), i[0]))\n\t\t] if lt_tags[0].is_complex ()),\n\t\tkey=lambda lt_tags: lt_tags[0].get_group ()):\n\tcomplex_tags[initial] += group\n# Calculate the min length of the subtags outside the switch\nmin_subtag_len = 100",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "min_subtag_len",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "min_subtag_len = 100\nfor initial, items in sorted (complex_tags.items ()):\n\tif initial != 'und':\n\t\tcontinue\n\tfor lt, tags in items:\n\t\tif not tags:\n\t\t\tcontinue\n\t\tsubtag_len = 0\n\t\tsubtag_len += 1 + len (lt.script) if lt.script is not None else 0\n\t\tsubtag_len += 1 + len (lt.region) if lt.region is not None else 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tsubtag_len",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tsubtag_len = 0\n\t\tsubtag_len += 1 + len (lt.script) if lt.script is not None else 0\n\t\tsubtag_len += 1 + len (lt.region) if lt.region is not None else 0\n\t\tsubtag_len += 1 + len (lt.variant) if lt.variant is not None else 0\n\t\tmin_subtag_len = min(subtag_len, min_subtag_len)\nprint ('  if (limit - lang_str >= %d)' % (min_subtag_len + 2))\nprint ('  {')\nprint (\"    const char *p = strchr (lang_str, '-');\")\nprint (\"    if (!p || p >= limit || limit - p < %i) goto out;\" % min_subtag_len)\nfor initial, items in sorted (complex_tags.items ()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tmin_subtag_len",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tmin_subtag_len = min(subtag_len, min_subtag_len)\nprint ('  if (limit - lang_str >= %d)' % (min_subtag_len + 2))\nprint ('  {')\nprint (\"    const char *p = strchr (lang_str, '-');\")\nprint (\"    if (!p || p >= limit || limit - p < %i) goto out;\" % min_subtag_len)\nfor initial, items in sorted (complex_tags.items ()):\n\tif initial != 'und':\n\t\tcontinue\n\tfor lt, tags in items:\n\t\tif not tags:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tscript = lt.script\n\t\tregion = lt.region\n\t\tif lt.grandfathered:\n\t\t\tprint ('0 == strcmp (&lang_str[1], \"%s\")' % lt.language[1:], end='')\n\t\telse:\n\t\t\tstring_literal = lt.language[1:] + '-'\n\t\t\tif script:\n\t\t\t\tstring_literal += script\n\t\t\t\tscript = None\n\t\t\t\tif region:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tregion",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tregion = lt.region\n\t\tif lt.grandfathered:\n\t\t\tprint ('0 == strcmp (&lang_str[1], \"%s\")' % lt.language[1:], end='')\n\t\telse:\n\t\t\tstring_literal = lt.language[1:] + '-'\n\t\t\tif script:\n\t\t\t\tstring_literal += script\n\t\t\t\tscript = None\n\t\t\t\tif region:\n\t\t\t\t\tstring_literal += '-' + region",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tstring_literal",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tstring_literal = lt.language[1:] + '-'\n\t\t\tif script:\n\t\t\t\tstring_literal += script\n\t\t\t\tscript = None\n\t\t\t\tif region:\n\t\t\t\t\tstring_literal += '-' + region\n\t\t\t\t\tregion = None\n\t\t\tif string_literal[-1] == '-':\n\t\t\t\tprint ('0 == strncmp (&lang_str[1], \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tscript = None\n\t\t\t\tif region:\n\t\t\t\t\tstring_literal += '-' + region\n\t\t\t\t\tregion = None\n\t\t\tif string_literal[-1] == '-':\n\t\t\t\tprint ('0 == strncmp (&lang_str[1], \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\t\telse:\n\t\t\t\tprint ('lang_matches (&lang_str[1], limit, \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\tprint_subtag_matches (script, 'lang_str', True)\n\t\tprint_subtag_matches (region, 'lang_str', True)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tregion",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tregion = None\n\t\t\tif string_literal[-1] == '-':\n\t\t\t\tprint ('0 == strncmp (&lang_str[1], \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\t\telse:\n\t\t\t\tprint ('lang_matches (&lang_str[1], limit, \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\tprint_subtag_matches (script, 'lang_str', True)\n\t\tprint_subtag_matches (region, 'lang_str', True)\n\t\tprint_subtag_matches (lt.variant, 'lang_str', True)\n\t\tprint (')')\n\t\tprint ('    {')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tprimary_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tprimary_tags = []\n\t\telse:\n\t\t\tprimary_tags = list (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot.from_bcp_47.get (t)[0] == ot_tag)\n\t\tif len (primary_tags) == 1:\n\t\t\texpect (ot_tag not in disambiguation, 'unnecessary disambiguation for OT tag: %s' % ot_tag)\n\t\t\tif '-' in primary_tags[0]:\n\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\t\telse:\n\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tprimary_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tprimary_tags = list (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot.from_bcp_47.get (t)[0] == ot_tag)\n\t\tif len (primary_tags) == 1:\n\t\t\texpect (ot_tag not in disambiguation, 'unnecessary disambiguation for OT tag: %s' % ot_tag)\n\t\t\tif '-' in primary_tags[0]:\n\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\t\telse:\n\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:\n\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tdisambiguation[ot_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\t\telse:\n\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:\n\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:\n\t\t\texpect (ot_tag not in disambiguation, 'There is no possible valid disambiguation for %s' % ot_tag)\n\t\telse:\n\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tfirst_tag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:\n\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:\n\t\t\texpect (ot_tag not in disambiguation, 'There is no possible valid disambiguation for %s' % ot_tag)\n\t\telse:\n\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:\n\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdisambiguation[ot_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:\n\t\t\texpect (ot_tag not in disambiguation, 'There is no possible valid disambiguation for %s' % ot_tag)\n\t\telse:\n\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:\n\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:\n\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\toriginal_languages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:\n\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:\n\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:\n\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,\n\t\t\t\t\t\t'%s is not a valid disambiguation for %s' % (disambiguation[ot_tag], ot_tag))\n\t\t\telif ot_tag not in disambiguation:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,\n\t\t\t\t\t\t'%s is not a valid disambiguation for %s' % (disambiguation[ot_tag], ot_tag))\n\t\t\telif ot_tag not in disambiguation:\n\t\t\t\tdisambiguation[ot_tag] = macrolanguages[0]\n\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,\n\t\t\t\t\t\t'%s is not a valid disambiguation for %s' % (disambiguation[ot_tag], ot_tag))\n\t\t\telif ot_tag not in disambiguation:\n\t\t\t\tdisambiguation[ot_tag] = macrolanguages[0]\n\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))\n\t\t\tif different_bcp_47_tags and disambiguation[ot_tag] == different_bcp_47_tags[0] and '-' not in disambiguation[ot_tag]:\n\t\t\t\tdel disambiguation[ot_tag]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tdisambiguation[ot_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tdisambiguation[ot_tag] = macrolanguages[0]\n\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))\n\t\t\tif different_bcp_47_tags and disambiguation[ot_tag] == different_bcp_47_tags[0] and '-' not in disambiguation[ot_tag]:\n\t\t\t\tdel disambiguation[ot_tag]\n\tfor ot_tag in disambiguation.keys ():\n\t\texpect (ot_tag in ot.to_bcp_47, 'unknown OT tag: %s' % ot_tag)\nverify_disambiguation_dict ()\nfor ot_tag, bcp_47_tag in sorted (disambiguation.items ()):\n\twrite ('  case %s:  /* %s */' % (hb_tag (ot_tag), ot.names[ot_tag]))\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tdifferent_bcp_47_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))\n\t\t\tif different_bcp_47_tags and disambiguation[ot_tag] == different_bcp_47_tags[0] and '-' not in disambiguation[ot_tag]:\n\t\t\t\tdel disambiguation[ot_tag]\n\tfor ot_tag in disambiguation.keys ():\n\t\texpect (ot_tag in ot.to_bcp_47, 'unknown OT tag: %s' % ot_tag)\nverify_disambiguation_dict ()\nfor ot_tag, bcp_47_tag in sorted (disambiguation.items ()):\n\twrite ('  case %s:  /* %s */' % (hb_tag (ot_tag), ot.names[ot_tag]))\n\tprint ()\n\twrite ('    return hb_language_from_string (\\\"%s\\\", -1);  /* %s */' % (bcp_47_tag, bcp_47.get_name (LanguageTag (bcp_47_tag))))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ucdxml",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ucdxml = packTab.ucdxml.load_ucdxml(sys.argv[1])\nucd = packTab.ucdxml.ucdxml_get_repertoire(ucdxml)\nhb_common_h = 'hb-common.h' if len (sys.argv) < 3 else sys.argv[2]\nlogging.info('Preparing data tables...')\n# This is how the data is encoded:\n#\n# General_Category (gc), Canonical_Combining_Class (ccc),\n# and Script (sc) are encoded as integers.\n#\n# Mirroring character (bmg) is encoded as difference from",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "ucd",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ucd = packTab.ucdxml.ucdxml_get_repertoire(ucdxml)\nhb_common_h = 'hb-common.h' if len (sys.argv) < 3 else sys.argv[2]\nlogging.info('Preparing data tables...')\n# This is how the data is encoded:\n#\n# General_Category (gc), Canonical_Combining_Class (ccc),\n# and Script (sc) are encoded as integers.\n#\n# Mirroring character (bmg) is encoded as difference from\n# the original character.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "hb_common_h",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "hb_common_h = 'hb-common.h' if len (sys.argv) < 3 else sys.argv[2]\nlogging.info('Preparing data tables...')\n# This is how the data is encoded:\n#\n# General_Category (gc), Canonical_Combining_Class (ccc),\n# and Script (sc) are encoded as integers.\n#\n# Mirroring character (bmg) is encoded as difference from\n# the original character.\n#",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "gc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "gc = [u['gc'] for u in ucd]\nccc = [int(u['ccc']) for u in ucd]\nbmg = [int(v, 16) - int(u) if v else 0 for u,v in enumerate(u['bmg'] for u in ucd)]\nsc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "ccc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ccc = [int(u['ccc']) for u in ucd]\nbmg = [int(v, 16) - int(u) if v else 0 for u,v in enumerate(u['bmg'] for u in ucd)]\nsc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "bmg",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "bmg = [int(v, 16) - int(u) if v else 0 for u,v in enumerate(u['bmg'] for u in ucd)]\nsc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)\ndm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "ce",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)\ndm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)\ndm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1_p0_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1_p2_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "filt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "filt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u32_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u64_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u32_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u64_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "l",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "l = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):\n    gc_order[i] = v",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):\n    gc_order[i] = v\n    gc_order[v] = i",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "gc_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "gc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):\n    gc_order[i] = v\n    gc_order[v] = i\nsc_order = dict()\nsc_array = []\nsc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc_order = dict()\nsc_array = []\nsc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):\n    m = sc_re.search (line)\n    if not m: continue\n    name = m.group(1)\n    tag = ''.join(m.group(i) for i in range(2, 6))\n    i = len(sc_array)\n    sc_order[tag] = i",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc_array = []\nsc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):\n    m = sc_re.search (line)\n    if not m: continue\n    name = m.group(1)\n    tag = ''.join(m.group(i) for i in range(2, 6))\n    i = len(sc_array)\n    sc_order[tag] = i\n    sc_order[i] = tag",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc_re",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):\n    m = sc_re.search (line)\n    if not m: continue\n    name = m.group(1)\n    tag = ''.join(m.group(i) for i in range(2, 6))\n    i = len(sc_array)\n    sc_order[tag] = i\n    sc_order[i] = tag\n    sc_array.append(name)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "DEFAULT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "DEFAULT = 'DEFAULT'\nCOMPACT = 'COMPACT'\nSLOPPY  = 'SLOPPY'\ncompression_level = {\n    DEFAULT: 5,\n    COMPACT: 9,\n    SLOPPY:  9,\n}\nlogging.info('Generating output...')\nprint(\"/* == Start of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "COMPACT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "COMPACT = 'COMPACT'\nSLOPPY  = 'SLOPPY'\ncompression_level = {\n    DEFAULT: 5,\n    COMPACT: 9,\n    SLOPPY:  9,\n}\nlogging.info('Generating output...')\nprint(\"/* == Start of generated table == */\")\nprint(\"/*\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "compression_level",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "compression_level = {\n    DEFAULT: 5,\n    COMPACT: 9,\n    SLOPPY:  9,\n}\nlogging.info('Generating output...')\nprint(\"/* == Start of generated table == */\")\nprint(\"/*\")\nprint(\" * The following table is generated by running:\")\nprint(\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "code",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "code = packTab.Code('_hb_ucd')\nsc_array, _ = code.addArray('hb_script_t', 'sc_map', sc_array)\ndm1_p0_array, _ = code.addArray('uint16_t', 'dm1_p0_map', dm1_p0_array)\ndm1_p2_array, _ = code.addArray('uint16_t', 'dm1_p2_map', dm1_p2_array)\ndm2_u32_array, _ = code.addArray('uint32_t', 'dm2_u32_map', dm2_u32_array)\ndm2_u64_array, _ = code.addArray('uint64_t', 'dm2_u64_map', dm2_u64_array)\ncode.print_c(linkage='static inline')\ndatasets = [\n    ('gc', gc, 'Cn', gc_order),\n    ('ccc', ccc, 0, None),",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "datasets",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "datasets = [\n    ('gc', gc, 'Cn', gc_order),\n    ('ccc', ccc, 0, None),\n    ('bmg', bmg, 0, None),\n    ('sc', sc, 'Zzzz', sc_order),\n    ('dm', dm, None, dm_order),\n]\n# Write main data\nfor step in (DEFAULT, COMPACT, SLOPPY):\n    compression = compression_level[step]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "PropertyValue",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "class PropertyValue(object):\n\tdef __init__(self, name_):\n\t\tself.name = name_\n\tdef __str__(self):\n\t\treturn self.name\n\tdef __eq__(self, other):\n\t\treturn self.name == (other if isinstance(other, str) else other.name)\n\tdef __ne__(self, other):\n\t\treturn not (self == other)\n\tdef __hash__(self):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_BASE",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,\n\t\t\tVowel_Independent,\n\t\t\t] or\n\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/484\n\t\tAJT in [jt_C, jt_D, jt_L, jt_R] and UISC != Joiner or\n\t\t(UGC == Lo and UISC in [Avagraha, Bindu, Consonant_Final, Consonant_Medial,\n\t\t\t\t\tConsonant_Subjoined, Vowel, Vowel_Dependent]))\ndef is_BASE_NUM(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_BASE_NUM",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_BASE_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Brahmi_Joining_Number\ndef is_BASE_OTHER(U, UISC, UDI, UGC, AJT):\n\tif UISC == Consonant_Placeholder: return True\n\treturn U in [0x2015, 0x2022, 0x25FB, 0x25FC, 0x25FD, 0x25FE]\ndef is_CGJ(U, UISC, UDI, UGC, AJT):\n\t# Also includes VARIATION_SELECTOR and ZWJ\n\treturn UISC == Joiner or UDI and UGC in [Mc, Me, Mn]\ndef is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_BASE_OTHER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_BASE_OTHER(U, UISC, UDI, UGC, AJT):\n\tif UISC == Consonant_Placeholder: return True\n\treturn U in [0x2015, 0x2022, 0x25FB, 0x25FC, 0x25FD, 0x25FE]\ndef is_CGJ(U, UISC, UDI, UGC, AJT):\n\t# Also includes VARIATION_SELECTOR and ZWJ\n\treturn UISC == Joiner or UDI and UGC in [Mc, Me, Mn]\ndef is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or\n\t\tUISC == Consonant_Succeeding_Repha)\ndef is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CGJ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CGJ(U, UISC, UDI, UGC, AJT):\n\t# Also includes VARIATION_SELECTOR and ZWJ\n\treturn UISC == Joiner or UDI and UGC in [Mc, Me, Mn]\ndef is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or\n\t\tUISC == Consonant_Succeeding_Repha)\ndef is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Syllable_Modifier\ndef is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_FINAL",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or\n\t\tUISC == Consonant_Succeeding_Repha)\ndef is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Syllable_Modifier\ndef is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.\n\treturn (UISC == Consonant_Medial and UGC != Lo or\n\t\tUISC == Consonant_Initial_Postfixed)\ndef is_CONS_MOD(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_FINAL_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Syllable_Modifier\ndef is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.\n\treturn (UISC == Consonant_Medial and UGC != Lo or\n\t\tUISC == Consonant_Initial_Postfixed)\ndef is_CONS_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Nukta, Gemination_Mark, Consonant_Killer]\ndef is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_MED",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.\n\treturn (UISC == Consonant_Medial and UGC != Lo or\n\t\tUISC == Consonant_Initial_Postfixed)\ndef is_CONS_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Nukta, Gemination_Mark, Consonant_Killer]\ndef is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo\ndef is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Nukta, Gemination_Mark, Consonant_Killer]\ndef is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo\ndef is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker\ndef is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_SUB",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo\ndef is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker\ndef is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_WITH_STACKER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker\ndef is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HALANT",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HALANT_OR_VOWEL_MODIFIER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HALANT_NUM",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH_JOINER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH_SEGMENT_BEGIN",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_ZWNJ(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH_SEGMENT_END",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_ZWNJ(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Non_Joiner\ndef is_OTHER(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_INVISIBLE_STACKER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_ZWNJ(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Non_Joiner\ndef is_OTHER(U, UISC, UDI, UGC, AJT):\n\t# Also includes BASE_IND and SYM\n\treturn ((UGC == Po or UISC in [Consonant_Dead, Joiner, Modifying_Letter, Other])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_ZWNJ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_ZWNJ(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Non_Joiner\ndef is_OTHER(U, UISC, UDI, UGC, AJT):\n\t# Also includes BASE_IND and SYM\n\treturn ((UGC == Po or UISC in [Consonant_Dead, Joiner, Modifying_Letter, Other])\n\t\tand not is_BASE(U, UISC, UDI, UGC, AJT)\n\t\tand not is_BASE_OTHER(U, UISC, UDI, UGC, AJT)\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t\tand not is_SYM_MOD(U, UISC, UDI, UGC, AJT)\n\t\tand not is_Word_Joiner(U, UISC, UDI, UGC, AJT)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_OTHER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_OTHER(U, UISC, UDI, UGC, AJT):\n\t# Also includes BASE_IND and SYM\n\treturn ((UGC == Po or UISC in [Consonant_Dead, Joiner, Modifying_Letter, Other])\n\t\tand not is_BASE(U, UISC, UDI, UGC, AJT)\n\t\tand not is_BASE_OTHER(U, UISC, UDI, UGC, AJT)\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t\tand not is_SYM_MOD(U, UISC, UDI, UGC, AJT)\n\t\tand not is_Word_Joiner(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_REPHA(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_REPHA",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_REPHA(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Consonant_Preceding_Repha, Consonant_Prefixed]\ndef is_SAKOT(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x1A60\ndef is_SYM_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Symbol_Modifier\ndef is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_SAKOT",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_SAKOT(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x1A60\ndef is_SYM_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Symbol_Modifier\ndef is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])\ndef is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_SYM_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_SYM_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Symbol_Modifier\ndef is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])\ndef is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or\n\t\tUGC != Lo and UISC == Bindu)\ndef is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_VOWEL",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])\ndef is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or\n\t\tUGC != Lo and UISC == Bindu)\ndef is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv\n\treturn (UDI and U not in [0x115F, 0x1160, 0x3164, 0xFFA0, 0x1BCA0, 0x1BCA1, 0x1BCA2, 0x1BCA3]\n\t\tand UISC == Other",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_VOWEL_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or\n\t\tUGC != Lo and UISC == Bindu)\ndef is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv\n\treturn (UDI and U not in [0x115F, 0x1160, 0x3164, 0xFFA0, 0x1BCA0, 0x1BCA1, 0x1BCA2, 0x1BCA3]\n\t\tand UISC == Other\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t) or UGC == Cn\nuse_mapping = {",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_Word_Joiner",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv\n\treturn (UDI and U not in [0x115F, 0x1160, 0x3164, 0xFFA0, 0x1BCA0, 0x1BCA1, 0x1BCA2, 0x1BCA3]\n\t\tand UISC == Other\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t) or UGC == Cn\nuse_mapping = {\n\t'B':\tis_BASE,\n\t'N':\tis_BASE_NUM,\n\t'GB':\tis_BASE_OTHER,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "map_to_use",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def map_to_use(data):\n\tout = {}\n\titems = use_mapping.items()\n\tfor U, (UISC, UIPC, AJT, UDI, UGC, UBlock, _) in data.items():\n\t\t# Resolve Indic_Syllabic_Category\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x1CE2 <= U <= 0x1CE8: UISC = Cantillation_Mark\n\t\t# Tibetan:\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x0F18 <= U <= 0x0F19 or 0x0F3E <= U <= 0x0F3F: UISC = Vowel_Dependent",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "print_bloc",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "def print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:\n\t\t\tprint (' ' * (20 + (start % 16 * 6)), end='')\n\tnum = 0\n\tassert start % 8 == 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "DISABLED_SCRIPTS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "DISABLED_SCRIPTS = {\n\t'Arabic',\n\t'Lao',\n\t'Samaritan',\n\t'Syriac',\n\t'Thai',\n}\nfiles = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline () for i in range (2)] for j,f in enumerate(files) if j != 4]\nfor j in range(7, 9):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline () for i in range (2)] for j,f in enumerate(files) if j != 4]\nfor j in range(7, 9):\n\tfor line in files[j]:\n\t\tline = line.rstrip()\n\t\tif not line:\n\t\t\tbreak\n\t\theaders[j - 1].append(line)\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nunicode_data = [{} for _ in files]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "headers = [[f.readline () for i in range (2)] for j,f in enumerate(files) if j != 4]\nfor j in range(7, 9):\n\tfor line in files[j]:\n\t\tline = line.rstrip()\n\t\tif not line:\n\t\t\tbreak\n\t\theaders[j - 1].append(line)\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nunicode_data = [{} for _ in files]\nvalues = [{} for _ in files]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tline = line.rstrip()\n\t\tif not line:\n\t\t\tbreak\n\t\theaders[j - 1].append(line)\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nunicode_data = [{} for _ in files]\nvalues = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "unicode_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "unicode_data = [{} for _ in files]\nvalues = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "values = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336\n\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336\n\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':\n\t\t\tt = 'Not_Applicable'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336\n\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':\n\t\t\tt = 'Not_Applicable'\n\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':\n\t\t\tt = 'Not_Applicable'\n\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tt = 'Not_Applicable'\n\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\ti0",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tunicode_data[i0][u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalues[i0][t]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "defaults",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "defaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:\n\t\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tvalues[i][v]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:\n\t\t\t\tcontinue\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "combined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:\n\t\t\t\tcontinue\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tcombined[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tcombined[u][i]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',\n\t'Bindu',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "combined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',\n\t'Bindu',\n\t'Visarga',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "property_names",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "property_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',\n\t'Bindu',\n\t'Visarga',\n\t'Avagraha',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.name",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tself.name = name_\n\tdef __str__(self):\n\t\treturn self.name\n\tdef __eq__(self, other):\n\t\treturn self.name == (other if isinstance(other, str) else other.name)\n\tdef __ne__(self, other):\n\t\treturn not (self == other)\n\tdef __hash__(self):\n\t\treturn hash(str(self))\nproperty_values = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "property_values",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "property_values = {}\nfor name in property_names:\n\tvalue = PropertyValue(name)\n\tassert value not in property_values\n\tassert value not in globals()\n\tproperty_values[name] = value\nglobals().update(property_values)\ndef is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tvalue = PropertyValue(name)\n\tassert value not in property_values\n\tassert value not in globals()\n\tproperty_values[name] = value\nglobals().update(property_values)\ndef is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,\n\t\t\tVowel_Independent,\n\t\t\t] or",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tproperty_values[name]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tproperty_values[name] = value\nglobals().update(property_values)\ndef is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,\n\t\t\tVowel_Independent,\n\t\t\t] or\n\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/484\n\t\tAJT in [jt_C, jt_D, jt_L, jt_R] and UISC != Joiner or\n\t\t(UGC == Lo and UISC in [Avagraha, Bindu, Consonant_Final, Consonant_Medial,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "use_mapping",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "use_mapping = {\n\t'B':\tis_BASE,\n\t'N':\tis_BASE_NUM,\n\t'GB':\tis_BASE_OTHER,\n\t'CGJ':\tis_CGJ,\n\t'F':\tis_CONS_FINAL,\n\t'FM':\tis_CONS_FINAL_MOD,\n\t'M':\tis_CONS_MED,\n\t'CM':\tis_CONS_MOD,\n\t'SUB':\tis_CONS_SUB,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "use_positions",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "use_positions = {\n\t'F': {\n\t\t'Abv': [Top],\n\t\t'Blw': [Bottom],\n\t\t'Pst': [Right],\n\t},\n\t'M': {\n\t\t'Abv': [Top],\n\t\t'Blw': [Bottom, Bottom_And_Left, Bottom_And_Right],\n\t\t'Pst': [Right],",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tout",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tout = {}\n\titems = use_mapping.items()\n\tfor U, (UISC, UIPC, AJT, UDI, UGC, UBlock, _) in data.items():\n\t\t# Resolve Indic_Syllabic_Category\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x1CE2 <= U <= 0x1CE8: UISC = Cantillation_Mark\n\t\t# Tibetan:\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x0F18 <= U <= 0x0F19 or 0x0F3E <= U <= 0x0F3F: UISC = Vowel_Dependent\n\t\t# TODO: U+1CED should only be allowed after some of",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\titems",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\titems = use_mapping.items()\n\tfor U, (UISC, UIPC, AJT, UDI, UGC, UBlock, _) in data.items():\n\t\t# Resolve Indic_Syllabic_Category\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x1CE2 <= U <= 0x1CE8: UISC = Cantillation_Mark\n\t\t# Tibetan:\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x0F18 <= U <= 0x0F19 or 0x0F3E <= U <= 0x0F3F: UISC = Vowel_Dependent\n\t\t# TODO: U+1CED should only be allowed after some of\n\t\t# the nasalization marks, maybe only for U+1CE9..U+1CF1.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tvalues = [k for k,v in items if v(U, UISC, UDI, UGC, AJT)]\n\t\tassert len(values) == 1, \"%s %s %s %s %s %s\" % (hex(U), UISC, UDI, UGC, AJT, values)\n\t\tUSE = values[0]\n\t\t# Resolve Indic_Positional_Category\n\t\t# TODO: https://github.com/harfbuzz/harfbuzz/pull/1037\n\t\t#  and https://github.com/harfbuzz/harfbuzz/issues/1631\n\t\tif U in [0x11302, 0x11303, 0x114C1]: UIPC = Top\n\t\tassert (UIPC in [Not_Applicable, Visual_Order_Left] or U == 0x0F7F or\n\t\t\tUSE in use_positions), \"%s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT)\n\t\tpos_mapping = use_positions.get(USE, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tUSE",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tUSE = values[0]\n\t\t# Resolve Indic_Positional_Category\n\t\t# TODO: https://github.com/harfbuzz/harfbuzz/pull/1037\n\t\t#  and https://github.com/harfbuzz/harfbuzz/issues/1631\n\t\tif U in [0x11302, 0x11303, 0x114C1]: UIPC = Top\n\t\tassert (UIPC in [Not_Applicable, Visual_Order_Left] or U == 0x0F7F or\n\t\t\tUSE in use_positions), \"%s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT)\n\t\tpos_mapping = use_positions.get(USE, None)\n\t\tif pos_mapping:\n\t\t\tvalues = [k for k,v in pos_mapping.items() if v and UIPC in v]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tpos_mapping",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tpos_mapping = use_positions.get(USE, None)\n\t\tif pos_mapping:\n\t\t\tvalues = [k for k,v in pos_mapping.items() if v and UIPC in v]\n\t\t\tassert len(values) == 1, \"%s %s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT, values)\n\t\t\tUSE = USE + values[0]\n\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tvalues = [k for k,v in pos_mapping.items() if v and UIPC in v]\n\t\t\tassert len(values) == 1, \"%s %s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT, values)\n\t\t\tUSE = USE + values[0]\n\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tUSE",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tUSE = USE + values[0]\n\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   {} IndicSyllabicCategory.txt IndicPositionalCategory.txt ArabicShaping.txt DerivedCoreProperties.txt UnicodeData.txt Blocks.txt Scripts.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\".format (sys.argv[0]))\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tout[U]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   {} IndicSyllabicCategory.txt IndicPositionalCategory.txt ArabicShaping.txt DerivedCoreProperties.txt UnicodeData.txt Blocks.txt Scripts.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\".format (sys.argv[0]))\nprint (\" *\")\nprint (\" * on files with these headers:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "use_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "use_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   {} IndicSyllabicCategory.txt IndicPositionalCategory.txt ArabicShaping.txt DerivedCoreProperties.txt UnicodeData.txt Blocks.txt Scripts.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\".format (sys.argv[0]))\nprint (\" *\")\nprint (\" * on files with these headers:\")\nprint (\" *\")\nfor h in headers:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "total",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "total = 0\nused = 0\nlast_block = None\ndef print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "used",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "used = 0\nlast_block = None\ndef print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:\n\t\t\tprint (' ' * (20 + (start % 16 * 6)), end='')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "last_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "last_block = None\ndef print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:\n\t\t\tprint (' ' * (20 + (start % 16 * 6)), end='')\n\tnum = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tnum",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0\n\tfor u in range (start, end+1):\n\t\tif u % 16 == 0:\n\t\t\tprint ()\n\t\t\tprint (\"  /* %04X */\" % u, end='')\n\t\tif u in use_data:\n\t\t\tnum += 1\n\t\td = use_data.get (u)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\td = use_data.get (u)\n\t\tif d is not None:\n\t\t\td = d[0]\n\t\telif u in unicode_data[4]:\n\t\t\td = 'O'\n\t\telse:\n\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\td = d[0]\n\t\telif u in unicode_data[4]:\n\t\t\td = 'O'\n\t\telse:\n\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\td = 'O'\n\t\telse:\n\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block\nuu = sorted (use_data.keys ())\nlast = -100000",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block\nuu = sorted (use_data.keys ())\nlast = -100000\nnum = 0\noffset = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tlast_block = block\nuu = sorted (use_data.keys ())\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "uu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "uu = sorted (use_data.keys ())\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "last",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "last = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "num",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "num = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "offset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):\n\tif not v: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "starts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "starts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):\n\tif not v: continue\n\tfor suf in v.keys():",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "ends",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "ends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):\n\tif not v: continue\n\tfor suf in v.keys():\n\t\ttag = k + suf",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\ttag = k + suf\n\t\tprint (\"#define %s\tUSE(%s)\" % (tag, tag))\nprint ('#pragma GCC diagnostic pop')\nprint (\"\")\nimport packTab\ndata = {u:v[0] for u,v in use_data.items()}\nDEFAULT = 5\nCOMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "data = {u:v[0] for u,v in use_data.items()}\nDEFAULT = 5\nCOMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)\n    print()\n    if compression == DEFAULT:\n        print('#ifndef HB_OPTIMIZE_SIZE')\n    elif compression == COMPACT:\n        print('#else')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "DEFAULT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "DEFAULT = 5\nCOMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)\n    print()\n    if compression == DEFAULT:\n        print('#ifndef HB_OPTIMIZE_SIZE')\n    elif compression == COMPACT:\n        print('#else')\n    else:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "COMPACT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "COMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)\n    print()\n    if compression == DEFAULT:\n        print('#ifndef HB_OPTIMIZE_SIZE')\n    elif compression == COMPACT:\n        print('#else')\n    else:\n        assert False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\ttag = k + suf\n\t\tprint (\"#undef %s\" % tag)\nprint ()\nprint ()\nprint (\"#endif /* HB_OT_SHAPER_USE_TABLE_HH */\")\nprint (\"/* == End of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "ConstraintSe",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "class ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"\n\tdef __init__ (self, constraint):\n\t\t# Either a list or a dictionary. As a list of code points, it\n\t\t# represents a prohibited code point sequence. As a dictionary,\n\t\t# it represents a set of prohibited sequences, where each item\n\t\t# represents the set of prohibited sequences starting with the",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "writ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "def write (s):\n\tsys.stdout.flush ()\n\tsys.stdout.buffer.write (s.encode ('utf-8'))\nimport sys\nif len (sys.argv) != 3:\n\tsys.exit (__doc__)\nwith open (sys.argv[2], encoding='utf-8') as f:\n\tscripts_header = [f.readline () for i in range (2)]\n\tscripts = {}\n\tscript_order = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tscripts_header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tscripts_header = [f.readline () for i in range (2)]\n\tscripts = {}\n\tscript_order = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tscripts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tscripts = {}\n\tscript_order = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tscript_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tscript_order = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tscripts[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"\n\tdef __init__ (self, constraint):\n\t\t# Either a list or a dictionary. As a list of code points, it",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tscript_order[script]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"\n\tdef __init__ (self, constraint):\n\t\t# Either a list or a dictionary. As a list of code points, it\n\t\t# represents a prohibited code point sequence. As a dictionary,\n\t\t# it represents a set of prohibited sequences, where each item",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tself._c",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tself._c = constraint\n\tdef add (self, constraint):\n\t\t\"\"\"Add a constraint to this set.\"\"\"\n\t\tif not constraint:\n\t\t\treturn\n\t\tfirst = constraint[0]\n\t\trest = constraint[1:]\n\t\tif isinstance (self._c, list):\n\t\t\tif constraint == self._c[:len (constraint)]:\n\t\t\t\tself._c = constraint",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tfirst",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tfirst = constraint[0]\n\t\trest = constraint[1:]\n\t\tif isinstance (self._c, list):\n\t\t\tif constraint == self._c[:len (constraint)]:\n\t\t\t\tself._c = constraint\n\t\t\telif self._c != constraint[:len (self._c)]:\n\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\trest",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\trest = constraint[1:]\n\t\tif isinstance (self._c, list):\n\t\t\tif constraint == self._c[:len (constraint)]:\n\t\t\t\tself._c = constraint\n\t\t\telif self._c != constraint[:len (self._c)]:\n\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tself._c",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\t\tself._c = constraint\n\t\t\telif self._c != constraint[:len (self._c)]:\n\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)\n\t\t\telse:\n\t\t\t\tself._c[first] = ConstraintSet (rest)\n\t@staticmethod\n\tdef _indent (depth):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tself._c",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)\n\t\t\telse:\n\t\t\t\tself._c[first] = ConstraintSet (rest)\n\t@staticmethod\n\tdef _indent (depth):\n\t\treturn ('  ' * depth).replace ('        ', '\\t')\n\tdef __str__ (self, index=0, depth=4):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tself._c[first]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\t\tself._c[first] = ConstraintSet (rest)\n\t@staticmethod\n\tdef _indent (depth):\n\t\treturn ('  ' * depth).replace ('        ', '\\t')\n\tdef __str__ (self, index=0, depth=4):\n\t\ts = []\n\t\tindent = self._indent (depth)\n\t\tif isinstance (self._c, list):\n\t\t\tif len (self._c) == 0:\n\t\t\t\tassert index == 2, 'Cannot use `matched` for this constraint; the general case has not been implemented'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\ts = []\n\t\tindent = self._indent (depth)\n\t\tif isinstance (self._c, list):\n\t\t\tif len (self._c) == 0:\n\t\t\t\tassert index == 2, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = true;\\n'.format (indent))\n\t\t\telif len (self._c) == 1:\n\t\t\t\tassert index == 1, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = 0x{:04X}u == buffer->cur ({}).codepoint;\\n'.format (indent, next (iter (self._c)), index or ''))\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tindent",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tindent = self._indent (depth)\n\t\tif isinstance (self._c, list):\n\t\t\tif len (self._c) == 0:\n\t\t\t\tassert index == 2, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = true;\\n'.format (indent))\n\t\t\telif len (self._c) == 1:\n\t\t\t\tassert index == 1, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = 0x{:04X}u == buffer->cur ({}).codepoint;\\n'.format (indent, next (iter (self._c)), index or ''))\n\t\t\telse:\n\t\t\t\ts.append ('{}if (0x{:04X}u == buffer->cur ({}).codepoint &&\\n'.format (indent, self._c[0], index or ''))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tcases",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tcases = collections.defaultdict (set)\n\t\t\tfor first, rest in sorted (self._c.items ()):\n\t\t\t\tcases[rest.__str__ (index + 1, depth + 2)].add (first)\n\t\t\tfor body, labels in sorted (cases.items (), key=lambda b_ls: sorted (b_ls[1])[0]):\n\t\t\t\tfor i, cp in enumerate (sorted (labels)):\n\t\t\t\t\tif i % 4 == 0:\n\t\t\t\t\t\ts.append (self._indent (depth + 1))\n\t\t\t\t\telse:\n\t\t\t\t\t\ts.append (' ')\n\t\t\t\t\ts.append ('case 0x{:04X}u:{}'.format (cp, '\\n' if i % 4 == 3 else ''))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "constraints",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "constraints = {}\nwith open (sys.argv[1], encoding='utf-8') as f:\n\tconstraints_header = []\n\twhile True:\n\t\tline = f.readline ().strip ()\n\t\tif line == '#':\n\t\t\tbreak\n\t\tconstraints_header.append(line)\n\tfor line in f:\n\t\tj = line.find ('#')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tconstraints_header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tconstraints_header = []\n\twhile True:\n\t\tline = f.readline ().strip ()\n\t\tif line == '#':\n\t\t\tbreak\n\t\tconstraints_header.append(line)\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tline = f.readline ().strip ()\n\t\tif line == '#':\n\t\t\tbreak\n\t\tconstraints_header.append(line)\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue\n\t\tassert 2 <= len (constraint), 'Prohibited sequence is too short: {}'.format (constraint)\n\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue\n\t\tassert 2 <= len (constraint), 'Prohibited sequence is too short: {}'.format (constraint)\n\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:\n\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tconstraint",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue\n\t\tassert 2 <= len (constraint), 'Prohibited sequence is too short: {}'.format (constraint)\n\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:\n\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'\nprint ('/* == Start of generated functions == */')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:\n\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'\nprint ('/* == Start of generated functions == */')\nprint ('/*')\nprint (' * The following functions are generated by running:')\nprint (' *')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tconstraints[script]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'\nprint ('/* == Start of generated functions == */')\nprint ('/*')\nprint (' * The following functions are generated by running:')\nprint (' *')\nprint (' *   %s ms-use/IndicShapingInvalidCluster.txt Scripts.txt' % sys.argv[0])\nprint (' *')\nprint (' * on files with these headers:')\nprint (' *')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "move_to_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def move_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.move_to(to_x, to_y)\ndef line_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.line_to(to_x, to_y)\ndef cubic_to_f(\n    funcs,\n    draw_data,\n    st,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "line_to_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def line_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.line_to(to_x, to_y)\ndef cubic_to_f(\n    funcs,\n    draw_data,\n    st,\n    control1_x,\n    control1_y,\n    control2_x,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "cubic_to_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def cubic_to_f(\n    funcs,\n    draw_data,\n    st,\n    control1_x,\n    control1_y,\n    control2_x,\n    control2_y,\n    to_x,\n    to_y,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "close_path_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def close_path_f(funcs, draw_data, st, user_data):\n    context = POOL[draw_data]\n    context.close_path()\nDFUNCS = hb.draw_funcs_create()\nhb.draw_funcs_set_move_to_func(DFUNCS, move_to_f, None)\nhb.draw_funcs_set_line_to_func(DFUNCS, line_to_f, None)\nhb.draw_funcs_set_cubic_to_func(DFUNCS, cubic_to_f, None)\nhb.draw_funcs_set_close_path_func(DFUNCS, close_path_f, None)\ndef push_transform_f(funcs, paint_data, xx, yx, xy, yy, dx, dy, user_data):\n    raise NotImplementedError",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_transform_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def push_transform_f(funcs, paint_data, xx, yx, xy, yy, dx, dy, user_data):\n    raise NotImplementedError\ndef pop_transform_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef color_f(funcs, paint_data, is_foreground, color, user_data):\n    context = POOL[paint_data]\n    r = hb.color_get_red(color) / 255\n    g = hb.color_get_green(color) / 255\n    b = hb.color_get_blue(color) / 255\n    a = hb.color_get_alpha(color) / 255",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "pop_transform_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def pop_transform_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef color_f(funcs, paint_data, is_foreground, color, user_data):\n    context = POOL[paint_data]\n    r = hb.color_get_red(color) / 255\n    g = hb.color_get_green(color) / 255\n    b = hb.color_get_blue(color) / 255\n    a = hb.color_get_alpha(color) / 255\n    context.set_source_rgba(r, g, b, a)\n    context.paint()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "color_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def color_f(funcs, paint_data, is_foreground, color, user_data):\n    context = POOL[paint_data]\n    r = hb.color_get_red(color) / 255\n    g = hb.color_get_green(color) / 255\n    b = hb.color_get_blue(color) / 255\n    a = hb.color_get_alpha(color) / 255\n    context.set_source_rgba(r, g, b, a)\n    context.paint()\ndef push_clip_rectangle_f(funcs, paint_data, xmin, ymin, xmax, ymax, user_data):\n    context = POOL[paint_data]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_clip_rectangle_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def push_clip_rectangle_f(funcs, paint_data, xmin, ymin, xmax, ymax, user_data):\n    context = POOL[paint_data]\n    context.save()\n    context.rectangle(xmin, ymin, xmax, ymax)\n    context.clip()\ndef push_clip_glyph_f(funcs, paint_data, glyph, font, user_data):\n    context = POOL[paint_data]\n    context.save()\n    context.new_path()\n    hb.font_draw_glyph(font, glyph, DFUNCS, paint_data)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_clip_glyph_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def push_clip_glyph_f(funcs, paint_data, glyph, font, user_data):\n    context = POOL[paint_data]\n    context.save()\n    context.new_path()\n    hb.font_draw_glyph(font, glyph, DFUNCS, paint_data)\n    context.close_path()\n    context.clip()\ndef pop_clip_f(funcs, paint_data, user_data):\n    context = POOL[paint_data]\n    context.restore()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "pop_clip_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def pop_clip_f(funcs, paint_data, user_data):\n    context = POOL[paint_data]\n    context.restore()\ndef push_group_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef pop_group_f(funcs, paint_data, mode, user_data):\n    raise NotImplementedError\nPFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_group_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def push_group_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef pop_group_f(funcs, paint_data, mode, user_data):\n    raise NotImplementedError\nPFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)\nhb.paint_funcs_set_color_func(PFUNCS, color_f, None)\nhb.paint_funcs_set_push_clip_glyph_func(PFUNCS, push_clip_glyph_f, None)\nhb.paint_funcs_set_push_clip_rectangle_func(PFUNCS, push_clip_rectangle_f, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "pop_group_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def pop_group_f(funcs, paint_data, mode, user_data):\n    raise NotImplementedError\nPFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)\nhb.paint_funcs_set_color_func(PFUNCS, color_f, None)\nhb.paint_funcs_set_push_clip_glyph_func(PFUNCS, push_clip_glyph_f, None)\nhb.paint_funcs_set_push_clip_rectangle_func(PFUNCS, push_clip_rectangle_f, None)\nhb.paint_funcs_set_pop_clip_func(PFUNCS, pop_clip_f, None)\nhb.paint_funcs_set_push_group_func(PFUNCS, push_group_f, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "makebuffer",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def makebuffer(words):\n    buf = hb.buffer_create()\n    text = \" \".join(words)\n    hb.buffer_add_codepoints(buf, [ord(c) for c in text], 0, len(text))\n    hb.buffer_guess_segment_properties(buf)\n    return buf\ndef justify(face, words, advance, target_advance):\n    font = hb.font_create(face)\n    buf = makebuffer(words)\n    wiggle = 5",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "justify",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def justify(face, words, advance, target_advance):\n    font = hb.font_create(face)\n    buf = makebuffer(words)\n    wiggle = 5\n    shrink = target_advance - wiggle < advance\n    expand = target_advance + wiggle > advance\n    ret, advance, tag, value = hb.shape_justify(\n        font,\n        buf,\n        None,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "shape",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def shape(face, words):\n    font = hb.font_create(face)\n    buf = makebuffer(words)\n    hb.shape(font, buf)\n    positions = hb.buffer_get_glyph_positions(buf)\n    advance = sum(p.x_advance for p in positions)\n    return buf, advance\ndef typeset(face, text, target_advance):\n    lines = []\n    words = []",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "typeset",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def typeset(face, text, target_advance):\n    lines = []\n    words = []\n    for word in text.split():\n        words.append(word)\n        buf, advance = shape(face, words)\n        if advance > target_advance:\n            # Shrink\n            ret, buf, variation = justify(face, words, advance, target_advance)\n            if ret:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "render",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def render(face, text, context, width, height, fontsize):\n    font = hb.font_create(face)\n    margin = fontsize * 2\n    scale = fontsize / hb.face_get_upem(face)\n    target_advance = (width - (margin * 2)) / scale\n    lines = typeset(face, text, target_advance)\n    _, extents = hb.font_get_h_extents(font)\n    lineheight = extents.ascender - extents.descender + extents.line_gap\n    lineheight *= scale\n    context.save()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "def main(fontpath, textpath):\n    fontsize = 70\n    blob = hb.blob_create_from_file(fontpath)\n    face = hb.face_create(blob, 0)\n    with open(textpath) as f:\n        text = f.read()\n    def on_draw(da, context):\n        alloc = da.get_allocation()\n        POOL[id(context)] = context\n        render(face, text, context, alloc.width, alloc.height, fontsize)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "POOL",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "POOL = {}\ndef move_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.move_to(to_x, to_y)\ndef line_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.line_to(to_x, to_y)\ndef cubic_to_f(\n    funcs,\n    draw_data,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "DFUNCS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "DFUNCS = hb.draw_funcs_create()\nhb.draw_funcs_set_move_to_func(DFUNCS, move_to_f, None)\nhb.draw_funcs_set_line_to_func(DFUNCS, line_to_f, None)\nhb.draw_funcs_set_cubic_to_func(DFUNCS, cubic_to_f, None)\nhb.draw_funcs_set_close_path_func(DFUNCS, close_path_f, None)\ndef push_transform_f(funcs, paint_data, xx, yx, xy, yy, dx, dy, user_data):\n    raise NotImplementedError\ndef pop_transform_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef color_f(funcs, paint_data, is_foreground, color, user_data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "PFUNCS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "peekOfCode": "PFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)\nhb.paint_funcs_set_color_func(PFUNCS, color_f, None)\nhb.paint_funcs_set_push_clip_glyph_func(PFUNCS, push_clip_glyph_f, None)\nhb.paint_funcs_set_push_clip_rectangle_func(PFUNCS, push_clip_rectangle_f, None)\nhb.paint_funcs_set_pop_clip_func(PFUNCS, pop_clip_f, None)\nhb.paint_funcs_set_push_group_func(PFUNCS, push_group_f, None)\nhb.paint_funcs_set_pop_group_func(PFUNCS, pop_group_f, None)\ndef makebuffer(words):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "Debugge",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "class Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)\n\t\treturn True\ndebugger = Debugger ()\nhb.buffer_set_message_func (buf, debugger.message, 1, 0)\n##\n## Add text to buffer\n##\n#",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "fontdata",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "fontdata = open (sys.argv[1], 'rb').read ()\ntext = sys.argv[2]\n# Need to create GLib.Bytes explicitly until this bug is fixed:\n# https://bugzilla.gnome.org/show_bug.cgi?id=729541\nblob = hb.glib_blob_create (GLib.Bytes.new (fontdata))\nface = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "text",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "text = sys.argv[2]\n# Need to create GLib.Bytes explicitly until this bug is fixed:\n# https://bugzilla.gnome.org/show_bug.cgi?id=729541\nblob = hb.glib_blob_create (GLib.Bytes.new (fontdata))\nface = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "blob",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "blob = hb.glib_blob_create (GLib.Bytes.new (fontdata))\nface = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "face",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "face = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()\nclass Debugger (object):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "font",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "font = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()\nclass Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "upem",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "upem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()\nclass Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)\n\t\treturn True",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "buf",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "buf = hb.buffer_create ()\nclass Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)\n\t\treturn True\ndebugger = Debugger ()\nhb.buffer_set_message_func (buf, debugger.message, 1, 0)\n##\n## Add text to buffer\n##",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "debugger",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "debugger = Debugger ()\nhb.buffer_set_message_func (buf, debugger.message, 1, 0)\n##\n## Add text to buffer\n##\n#\n# See https://github.com/harfbuzz/harfbuzz/pull/271\n#\n# If you do not care about cluster values reflecting Python\n# string indices, then this is quickest way to add text to",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "infos",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "infos = hb.buffer_get_glyph_infos (buf)\npositions = hb.buffer_get_glyph_positions (buf)\nfor info, pos in zip (infos, positions):\n\tgid = info.codepoint\n\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "positions",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "positions = hb.buffer_get_glyph_positions (buf)\nfor info, pos in zip (infos, positions):\n\tgid = info.codepoint\n\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tgid",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "\tgid = info.codepoint\n\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tcluster",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tx_advance",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tx_offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\ty_offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "peekOfCode": "\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.ios.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "removeprefix",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "def removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "srcdir = os.getenv ('srcdir', os.path.dirname (__file__))\nbase_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "base_srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "base_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "\tabs_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "HBSOURCES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "HBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' not in content) or ('HB_END_DECLS' not in content):\n\t\tprint ('Ouch, file %s does not have HB_BEGIN_DECLS / HB_END_DECLS, but it should' % x)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "stat = 0\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' not in content) or ('HB_END_DECLS' not in content):\n\t\tprint ('Ouch, file %s does not have HB_BEGIN_DECLS / HB_END_DECLS, but it should' % x)\n\t\tstat = 1\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' in content) or ('HB_END_DECLS' in content):\n\t\tprint ('Ouch, file %s has HB_BEGIN_DECLS / HB_END_DECLS, but it shouldn\\'t' % x)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "\t\tstat = 1\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif ('HB_BEGIN_DECLS' in content) or ('HB_END_DECLS' in content):\n\t\tprint ('Ouch, file %s has HB_BEGIN_DECLS / HB_END_DECLS, but it shouldn\\'t' % x)\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "peekOfCode": "\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-c-linkage-decls",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nstat = 0\nprint ('Checking that all public symbols are exported with HB_EXTERN')\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tfor s in re.findall (r'\\n.+\\nhb_.+\\n', content):\n\t\tif not s.startswith ('\\nHB_EXTERN '):\n\t\t\tprint ('failure on:', s)\n\t\t\tstat = 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "peekOfCode": "stat = 0\nprint ('Checking that all public symbols are exported with HB_EXTERN')\nfor x in HBHEADERS:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tfor s in re.findall (r'\\n.+\\nhb_.+\\n', content):\n\t\tif not s.startswith ('\\nHB_EXTERN '):\n\t\t\tprint ('failure on:', s)\n\t\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "peekOfCode": "\t\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-externs",
        "documentation": {}
    },
    {
        "label": "removeprefix",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "def removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "srcdir = os.getenv ('srcdir', os.path.dirname (__file__))\nbase_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "base_srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "base_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "\tabs_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS + HBSOURCES:\n\tif not x.endswith ('h') or x == 'hb-gobject-structs.h': continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "HBSOURCES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "HBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nfor x in HBHEADERS + HBSOURCES:\n\tif not x.endswith ('h') or x == 'hb-gobject-structs.h': continue\n\ttag = x.upper ().replace ('.', '_').replace ('-', '_').replace(os.path.sep, '_').replace('/', '_')\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "stat = 0\nfor x in HBHEADERS + HBSOURCES:\n\tif not x.endswith ('h') or x == 'hb-gobject-structs.h': continue\n\ttag = x.upper ().replace ('.', '_').replace ('-', '_').replace(os.path.sep, '_').replace('/', '_')\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif len (re.findall (tag + r'\\b', content)) != 3:\n\t\tprint ('Ouch, header file %s does not have correct preprocessor guards. Expected: %s' % (x, tag))\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "\ttag = x.upper ().replace ('.', '_').replace ('-', '_').replace(os.path.sep, '_').replace('/', '_')\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif len (re.findall (tag + r'\\b', content)) != 3:\n\t\tprint ('Ouch, header file %s does not have correct preprocessor guards. Expected: %s' % (x, tag))\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "peekOfCode": "\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-header-guards",
        "documentation": {}
    },
    {
        "label": "removeprefix",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "def removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "srcdir = os.getenv ('srcdir', os.path.dirname (__file__))\nbase_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "base_srcdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "base_srcdir = os.getenv ('base_srcdir', srcdir)\nos.chdir (srcdir)\ndef removeprefix(s):\n\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\tabs_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "\tabs_path = os.path.join(base_srcdir, s)\n\treturn os.path.relpath(abs_path, srcdir)\nHBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "HBHEADERS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "HBHEADERS = [os.path.basename (x) for x in os.getenv ('HBHEADERS', '').split ()] or \\\n\t[x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith ('.h')]\nHBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nprint ('Checking that public header files #include \"hb-common.h\" or \"hb.h\" first (or none)')\nfor x in HBHEADERS:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "HBSOURCES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "HBSOURCES = [\n    removeprefix(x) for x in os.getenv ('HBSOURCES', '').split ()\n] or [\n    x for x in os.listdir ('.') if x.startswith ('hb') and x.endswith (('.cc', '.hh'))\n]\nstat = 0\nprint ('Checking that public header files #include \"hb-common.h\" or \"hb.h\" first (or none)')\nfor x in HBHEADERS:\n\tif x == 'hb.h' or x == 'hb-common.h': continue\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "stat = 0\nprint ('Checking that public header files #include \"hb-common.h\" or \"hb.h\" first (or none)')\nfor x in HBHEADERS:\n\tif x == 'hb.h' or x == 'hb-common.h': continue\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tfirst = re.findall (r'#.*include.*', content)[0]\n\tif first not in ['#include \"hb.h\"', '#include \"hb-common.h\"']:\n\t\tprint ('failure on %s' % x)\n\t\tstat = 1\nprint ('Checking that source files #include a private header first (or none)')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\tfirst",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "\tfirst = re.findall (r'#.*include.*', content)[0]\n\tif first not in ['#include \"hb.h\"', '#include \"hb-common.h\"']:\n\t\tprint ('failure on %s' % x)\n\t\tstat = 1\nprint ('Checking that source files #include a private header first (or none)')\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tincludes = re.findall (r'#.*include.*', content)\n\tif includes:\n\t\tif not len (re.findall (r'\".*\\.hh\"', includes[0])):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "\t\tstat = 1\nprint ('Checking that source files #include a private header first (or none)')\nfor x in HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tincludes = re.findall (r'#.*include.*', content)\n\tif includes:\n\t\tif not len (re.findall (r'\".*\\.hh\"', includes[0])):\n\t\t\tprint ('failure on %s' % x)\n\t\t\tstat = 1\nprint ('Checking that there is no #include <hb-*.h>')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\tincludes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "\tincludes = re.findall (r'#.*include.*', content)\n\tif includes:\n\t\tif not len (re.findall (r'\".*\\.hh\"', includes[0])):\n\t\t\tprint ('failure on %s' % x)\n\t\t\tstat = 1\nprint ('Checking that there is no #include <hb-*.h>')\nfor x in HBHEADERS + HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif re.findall ('#.*include.*<.*hb', content):\n\t\tprint ('failure on %s' % x)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "\t\t\tstat = 1\nprint ('Checking that there is no #include <hb-*.h>')\nfor x in HBHEADERS + HBSOURCES:\n\twith open (x, 'r', encoding='utf-8') as f: content = f.read ()\n\tif re.findall ('#.*include.*<.*hb', content):\n\t\tprint ('failure on %s' % x)\n\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "peekOfCode": "\t\tstat = 1\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-includes",
        "documentation": {}
    },
    {
        "label": "libs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "libs = os.getenv ('libs', '.libs')\nldd = os.getenv ('LDD', shutil.which ('ldd'))\nif not ldd:\n\totool = os.getenv ('OTOOL', shutil.which ('otool'))\n\tif otool:\n\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "ldd",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "ldd = os.getenv ('LDD', shutil.which ('ldd'))\nif not ldd:\n\totool = os.getenv ('OTOOL', shutil.which ('otool'))\n\tif otool:\n\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0\ntested = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\totool",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\totool = os.getenv ('OTOOL', shutil.which ('otool'))\n\tif otool:\n\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0\ntested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\tldd",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\tldd = otool + ' -L'\n\telse:\n\t\tprint ('check-libstdc++.py: \\'ldd\\' not found; skipping test')\n\t\tsys.exit (77)\nstat = 0\ntested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "stat = 0\ntested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\tprint ('Checking that we are not linking to libstdc++ or libc++ in %s' % so)\n\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "tested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "tested = False\n# harfbuzz-icu links to libstdc++ because icu does.\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\tprint ('Checking that we are not linking to libstdc++ or libc++ in %s' % so)\n\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):\n\t\t\tprint ('Ouch, %s is linked to libstdc++ or libc++' % so)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\tso",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\tso = os.path.join (libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\tprint ('Checking that we are not linking to libstdc++ or libc++ in %s' % so)\n\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):\n\t\t\tprint ('Ouch, %s is linked to libstdc++ or libc++' % so)\n\t\t\tstat = 1\n\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\tldd_result",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\tldd_result = subprocess.check_output (ldd.split() + [so])\n\t\tif (b'libstdc++' in ldd_result) or (b'libc++' in ldd_result):\n\t\t\tprint ('Ouch, %s is linked to libstdc++ or libc++' % so)\n\t\t\tstat = 1\n\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\t\tstat = 1\n\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "\t\ttested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "peekOfCode": "\t\ttested = True\nif not tested:\n\tprint ('check-libstdc++.py: libharfbuzz shared library not found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-libstdc++",
        "documentation": {}
    },
    {
        "label": "builddir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "builddir = os.getenv ('builddir', os.path.dirname (__file__))\nlibs = os.getenv ('libs', '.libs')\nobjdump = os.getenv ('OBJDUMP', shutil.which ('objdump'))\nif not objdump:\n\tprint ('check-static-inits.py: \\'ldd\\' not found; skipping test')\n\tsys.exit (77)\nif sys.version_info < (3, 5):\n\tprint ('check-static-inits.py: needs python 3.5 for recursive support in glob')\n\tsys.exit (77)\nOBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "libs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "libs = os.getenv ('libs', '.libs')\nobjdump = os.getenv ('OBJDUMP', shutil.which ('objdump'))\nif not objdump:\n\tprint ('check-static-inits.py: \\'ldd\\' not found; skipping test')\n\tsys.exit (77)\nif sys.version_info < (3, 5):\n\tprint ('check-static-inits.py: needs python 3.5 for recursive support in glob')\n\tsys.exit (77)\nOBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)\nif not OBJS:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "objdump",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "objdump = os.getenv ('OBJDUMP', shutil.which ('objdump'))\nif not objdump:\n\tprint ('check-static-inits.py: \\'ldd\\' not found; skipping test')\n\tsys.exit (77)\nif sys.version_info < (3, 5):\n\tprint ('check-static-inits.py: needs python 3.5 for recursive support in glob')\n\tsys.exit (77)\nOBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)\nif not OBJS:\n\tprint ('check-static-inits.py: object files not found; skipping test')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "OBJS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "OBJS = glob.glob (os.path.join (builddir, libs, '**', '*hb*.o'), recursive=True)\nif not OBJS:\n\tprint ('check-static-inits.py: object files not found; skipping test')\n\tsys.exit (77)\nstat = 0\ntested = 0\nfor obj in OBJS:\n\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "stat = 0\ntested = 0\nfor obj in OBJS:\n\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:\n\t\t\t# https://github.com/harfbuzz/harfbuzz/issues/3019\n\t\t\tprint ('objdump %s returned \"not recognized\", skipping' % obj)\n\t\t\tcontinue\n\t\tprint ('objdump %s returned error:\\n%s' % (obj, result.stderr.decode ('utf-8')))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "tested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "tested = 0\nfor obj in OBJS:\n\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:\n\t\t\t# https://github.com/harfbuzz/harfbuzz/issues/3019\n\t\t\tprint ('objdump %s returned \"not recognized\", skipping' % obj)\n\t\t\tcontinue\n\t\tprint ('objdump %s returned error:\\n%s' % (obj, result.stderr.decode ('utf-8')))\n\t\tstat = 2",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\tresult",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "\tresult = subprocess.run(objdump.split () + ['-t', obj], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\tif result.returncode:\n\t\tif result.stderr.find (b'not recognized') != -1:\n\t\t\t# https://github.com/harfbuzz/harfbuzz/issues/3019\n\t\t\tprint ('objdump %s returned \"not recognized\", skipping' % obj)\n\t\t\tcontinue\n\t\tprint ('objdump %s returned error:\\n%s' % (obj, result.stderr.decode ('utf-8')))\n\t\tstat = 2\n\tresult = result.stdout.decode ('utf-8')\n\t# Checking that no object file has static initializers",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "\t\tstat = 2\n\tresult = result.stdout.decode ('utf-8')\n\t# Checking that no object file has static initializers\n\tfor l in re.findall (r'^.*\\.[cd]tors.*$', result, re.MULTILINE):\n\t\tif not re.match (r'.*\\b0+\\b', l):\n\t\t\tprint ('Ouch, %s has static initializers/finalizers' % obj)\n\t\t\tstat = 1\n\t# Checking that no object file has lazy static C++ constructors/destructors or other such stuff\n\tif ('__cxa_' in result) and ('__ubsan_handle' not in result):\n\t\tprint ('Ouch, %s has lazy static C++ constructors/destructors or other such stuff' % obj)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\tresult",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "\tresult = result.stdout.decode ('utf-8')\n\t# Checking that no object file has static initializers\n\tfor l in re.findall (r'^.*\\.[cd]tors.*$', result, re.MULTILINE):\n\t\tif not re.match (r'.*\\b0+\\b', l):\n\t\t\tprint ('Ouch, %s has static initializers/finalizers' % obj)\n\t\t\tstat = 1\n\t# Checking that no object file has lazy static C++ constructors/destructors or other such stuff\n\tif ('__cxa_' in result) and ('__ubsan_handle' not in result):\n\t\tprint ('Ouch, %s has lazy static C++ constructors/destructors or other such stuff' % obj)\n\t\tstat = 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "\t\t\tstat = 1\n\t# Checking that no object file has lazy static C++ constructors/destructors or other such stuff\n\tif ('__cxa_' in result) and ('__ubsan_handle' not in result):\n\t\tprint ('Ouch, %s has lazy static C++ constructors/destructors or other such stuff' % obj)\n\t\tstat = 1\n\ttested += 1\nsys.exit (stat if tested else 77)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "peekOfCode": "\t\tstat = 1\n\ttested += 1\nsys.exit (stat if tested else 77)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-static-inits",
        "documentation": {}
    },
    {
        "label": "os.environ['LC_ALL']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "os.environ['LC_ALL'] = 'C' # otherwise 'nm' prints in wrong order\nbuilddir = os.getenv ('builddir', os.path.dirname (__file__))\nlibs = os.getenv ('libs', '.libs')\nIGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "builddir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "builddir = os.getenv ('builddir', os.path.dirname (__file__))\nlibs = os.getenv ('libs', '.libs')\nIGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "libs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "libs = os.getenv ('libs', '.libs')\nIGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)\ncxxfilt = shutil.which ('c++filt')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "IGNORED_SYMBOLS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "IGNORED_SYMBOLS = '|'.join(['_fini', '_init', '_fdata', '_ftext', '_fbss',\n\t'__bss_start', '__bss_start__', '__bss_end__', '_edata', '_end', '_bss_end__',\n\t'__end__', '__gcov_.*', 'llvm_.*', 'flush_fn_list', 'writeout_fn_list', 'mangle_path',\n\t'lprofDirMode', 'reset_fn_list'])\nnm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)\ncxxfilt = shutil.which ('c++filt')\ntested = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "nm",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "nm = os.getenv ('NM', shutil.which ('nm'))\nif not nm:\n\tprint ('check-symbols.py: \\'nm\\' not found; skipping test')\n\tsys.exit (77)\ncxxfilt = shutil.which ('c++filt')\ntested = False\nstat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "cxxfilt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "cxxfilt = shutil.which ('c++filt')\ntested = False\nstat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "tested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "tested = False\nstat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "stat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "stat = 0\nfor soname in ['harfbuzz', 'harfbuzz-subset', 'harfbuzz-icu', 'harfbuzz-gobject']:\n\tfor suffix in ['so', 'dylib']:\n\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tso",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tso = os.path.join (builddir, libs, 'lib%s.%s' % (soname, suffix))\n\t\tif not os.path.exists (so): continue\n\t\t# On macOS, C symbols are prefixed with _\n\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]\n\t\t# run again c++filt also if is available\n\t\tif cxxfilt:\n\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tsymprefix",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tsymprefix = '_' if suffix == 'dylib' else ''\n\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]\n\t\t# run again c++filt also if is available\n\t\tif cxxfilt:\n\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (\n\t\t\t\t[cxxfilt], input='\\n'.join (EXPORTED_SYMBOLS).encode ()\n\t\t\t).decode ('utf-8').splitlines ()\n\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tEXPORTED_SYMBOLS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tEXPORTED_SYMBOLS = [s.split ()[2]\n\t\t\t\t    for s in re.findall (r'^.+ [BCDGIRSTu] .+$', subprocess.check_output (nm.split() + [so]).decode ('utf-8'), re.MULTILINE)\n\t\t\t\t    if not re.match (r'.* %s(%s)\\b' % (symprefix, IGNORED_SYMBOLS), s)]\n\t\t# run again c++filt also if is available\n\t\tif cxxfilt:\n\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (\n\t\t\t\t[cxxfilt], input='\\n'.join (EXPORTED_SYMBOLS).encode ()\n\t\t\t).decode ('utf-8').splitlines ()\n\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]\n\t\tprint ('Checking that %s does not expose internal symbols' % so)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\tEXPORTED_SYMBOLS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\tEXPORTED_SYMBOLS = subprocess.check_output (\n\t\t\t\t[cxxfilt], input='\\n'.join (EXPORTED_SYMBOLS).encode ()\n\t\t\t).decode ('utf-8').splitlines ()\n\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]\n\t\tprint ('Checking that %s does not expose internal symbols' % so)\n\t\tsuspicious_symbols = [x for x in EXPORTED_SYMBOLS if not re.match (r'^%s(_|$)' % prefix, x)]\n\t\tif suspicious_symbols:\n\t\t\tprint ('Ouch, internal symbols exposed:', suspicious_symbols)\n\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tprefix",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tprefix = (symprefix + os.path.basename (so)).replace ('libharfbuzz', 'hb').replace ('-', '_').split ('.')[0]\n\t\tprint ('Checking that %s does not expose internal symbols' % so)\n\t\tsuspicious_symbols = [x for x in EXPORTED_SYMBOLS if not re.match (r'^%s(_|$)' % prefix, x)]\n\t\tif suspicious_symbols:\n\t\t\tprint ('Ouch, internal symbols exposed:', suspicious_symbols)\n\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tsuspicious_symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tsuspicious_symbols = [x for x in EXPORTED_SYMBOLS if not re.match (r'^%s(_|$)' % prefix, x)]\n\t\tif suspicious_symbols:\n\t\t\tprint ('Ouch, internal symbols exposed:', suspicious_symbols)\n\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:\n\t\t\tprint ('Checking that %s has the same symbol list as %s' % (so, def_path))\n\t\t\twith open (def_path, 'r', encoding='utf-8') as f: def_file = f.read ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\tstat = 1\n\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:\n\t\t\tprint ('Checking that %s has the same symbol list as %s' % (so, def_path))\n\t\t\twith open (def_path, 'r', encoding='utf-8') as f: def_file = f.read ()\n\t\t\tdiff_result = list (difflib.context_diff (\n\t\t\t\tdef_file.splitlines (),\n\t\t\t\t['EXPORTS'] + [re.sub ('^%shb' % symprefix, 'hb', x) for x in EXPORTED_SYMBOLS] +",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\tdef_path",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\tdef_path = os.path.join (builddir, soname + '.def')\n\t\tif not os.path.exists (def_path):\n\t\t\tprint ('\\'%s\\' not found; skipping' % def_path)\n\t\telse:\n\t\t\tprint ('Checking that %s has the same symbol list as %s' % (so, def_path))\n\t\t\twith open (def_path, 'r', encoding='utf-8') as f: def_file = f.read ()\n\t\t\tdiff_result = list (difflib.context_diff (\n\t\t\t\tdef_file.splitlines (),\n\t\t\t\t['EXPORTS'] + [re.sub ('^%shb' % symprefix, 'hb', x) for x in EXPORTED_SYMBOLS] +\n\t\t\t\t\t# cheat: copy the last line from the def file!",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\tdiff_result",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\tdiff_result = list (difflib.context_diff (\n\t\t\t\tdef_file.splitlines (),\n\t\t\t\t['EXPORTS'] + [re.sub ('^%shb' % symprefix, 'hb', x) for x in EXPORTED_SYMBOLS] +\n\t\t\t\t\t# cheat: copy the last line from the def file!\n\t\t\t\t\t[def_file.splitlines ()[-1]]\n\t\t\t))\n\t\t\tif diff_result:\n\t\t\t\tprint ('\\n'.join (diff_result))\n\t\t\t\tstat = 1\n\t\t\ttested = True",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tstat",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\t\tstat = 1\n\t\t\ttested = True\nif not tested:\n\tprint ('check-symbols.py: no shared libraries found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "\t\t\ttested",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "peekOfCode": "\t\t\ttested = True\nif not tested:\n\tprint ('check-symbols.py: no shared libraries found; skipping test')\n\tsys.exit (77)\nsys.exit (stat)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.check-symbols",
        "documentation": {}
    },
    {
        "label": "parser",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.fix_get_types",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.fix_get_types",
        "peekOfCode": "parser = argparse.ArgumentParser ()\nparser.add_argument ('input')\nparser.add_argument ('output')\nargs = parser.parse_args ()\nwith open (args.input, 'r') as inp, open (args.output, 'w') as out:\n    for l in inp.readlines ():\n        l = re.sub ('_t_get_type', '_get_type', l)\n        l = re.sub ('_T \\(', ' (', l)\n        out.write (l)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.fix_get_types",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.fix_get_types",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.fix_get_types",
        "peekOfCode": "args = parser.parse_args ()\nwith open (args.input, 'r') as inp, open (args.output, 'w') as out:\n    for l in inp.readlines ():\n        l = re.sub ('_t_get_type', '_get_type', l)\n        l = re.sub ('_T \\(', ' (', l)\n        out.write (l)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.fix_get_types",
        "documentation": {}
    },
    {
        "label": "rea",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "def read (f):\n\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "read_joining_u",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "def read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tif fields[2] in {'T', 'U'}:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "print_has_arabic_joinin",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "def print_has_arabic_joining (scripts, joining_uu):\n\tprint (\"static bool\")\n\tprint (\"has_arabic_joining (hb_script_t script)\")\n\tprint (\"{\")\n\tprint (\"  /* List of scripts that have data in arabic-table. */\")\n\tprint (\"  switch ((int) script)\")\n\tprint (\"  {\")\n\tfor script in sorted ({scripts[u] for u in joining_uu if scripts[u] not in {'Common', 'Inherited'}}):\n\t\tprint (\"    case HB_SCRIPT_{}:\".format (script.upper ()))\n\tprint (\"      return true;\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline (), f.readline ()] for f in files]\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\ndef read (f):\n\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "headers = [[f.readline (), f.readline ()] for f in files]\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\ndef read (f):\n\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\tmapping",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\tmapping = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\t\tmapping[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\t\tmapping[u] = t\n\treturn mapping\ndef read_joining_uu (f):\n\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\tvalues = set ()\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tif fields[2] in {'T', 'U'}:\n\t\t\tcontinue\n\t\tvalues.add (int (fields[0], 16))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tif fields[2] in {'T', 'U'}:\n\t\t\tcontinue\n\t\tvalues.add (int (fields[0], 16))\n\treturn sorted (values)\ndef print_has_arabic_joining (scripts, joining_uu):\n\tprint (\"static bool\")\n\tprint (\"has_arabic_joining (hb_script_t script)\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-joining-list",
        "documentation": {}
    },
    {
        "label": "code",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-pua",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-pua",
        "peekOfCode": "code = packTab.Code('_hb_arabic')\nfor p in (\"ArabicPUASimplified.txt\", \"ArabicPUATraditional.txt\"):\n    with open (p, encoding='utf-8') as f:\n        fields = [l.split('\\t') for l in f if l[:1] != '#']\n    data = {int(fs[1], 16):int(fs[0], 16) for fs in fields}\n    sol = packTab.pack_table(data, compression=9)\n    sol.genCode(code, f'pua_{p[9:13].lower()}_map')\ncode.print_c(linkage='static inline')\nprint ()\nprint (\"#endif /* HB_OT_SHAPER_ARABIC_PUA_HH */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-pua",
        "documentation": {}
    },
    {
        "label": "read_blocks",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "def read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "print_joining_table",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "def print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "print_shaping_table",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "def print_shaping_table(f):\n\tshapes = {}\n\tligatures = {}\n\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[files[0].readline (), files[0].readline ()], [files[2].readline (), files[2].readline ()]]\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\nblocks = {}\ndef read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "headers = [[files[0].readline (), files[0].readline ()], [files[2].readline (), files[2].readline ()]]\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nwhile files[0].readline ().find ('##################') < 0:\n\tpass\nblocks = {}\ndef read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "blocks",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "blocks = {}\ndef read_blocks(f):\n\tglobal blocks\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tblocks[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tblocks[u] = t\ndef print_joining_table(f):\n\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tvalues = {}\n\tfor line in f:\n\t\tif line[0] == '#':\n\t\t\tcontinue\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:\n\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:\n\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')\n\t\telse:\n\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tu = int (fields[0], 16)\n\t\tif fields[3] in [\"ALAPH\", \"DALATH RISH\"]:\n\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')\n\t\telse:\n\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tvalue = \"JOINING_GROUP_\" + fields[3].replace(' ', '_')\n\t\telse:\n\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tvalue = \"JOINING_TYPE_\" + fields[2]\n\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalues[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tvalues[u] = value\n\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tshort_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tshort_value = {}\n\tfor value in sorted (set ([v for v in values.values ()] + ['JOINING_TYPE_X'])):\n\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())\n\tnum = len(values)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tshort",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tshort = ''.join(x[0] for x in value.split('_')[2:])\n\t\tassert short not in short_value.values()\n\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())\n\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tshort_value[value]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tshort_value[value] = short\n\tprint ()\n\tfor value,short in short_value.items():\n\t\tprint (\"#define %s\t%s\" % (short, value))\n\tuu = sorted(values.keys())\n\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tuu = sorted(values.keys())\n\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tnum",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tnum = len(values)\n\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tall_blocks",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tall_blocks = set([blocks[u] for u in uu])\n\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tlast",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tlast = -100000\n\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tranges",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tranges = []\n\tfor u in uu:\n\t\tif u - last <= 1+16*5:\n\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tranges[-1][-1]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tranges[-1][-1] = u\n\t\telse:\n\t\t\tranges.append([u,u])\n\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")\n\tprint (\"{\")\n\tlast_block = None\n\toffset = 0\n\tfor start,end in ranges:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tlast",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tlast = u\n\tprint ()\n\tprint (\"static const uint8_t joining_table[] =\")\n\tprint (\"{\")\n\tlast_block = None\n\toffset = 0\n\tfor start,end in ranges:\n\t\tprint ()\n\t\tprint (\"#define joining_offset_0x%04xu %d\" % (start, offset))\n\t\tfor u in range(start, end+1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tlast_block = None\n\toffset = 0\n\tfor start,end in ranges:\n\t\tprint ()\n\t\tprint (\"#define joining_offset_0x%04xu %d\" % (start, offset))\n\t\tfor u in range(start, end+1):\n\t\t\tblock = blocks.get(u, last_block)\n\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\toffset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\toffset = 0\n\tfor start,end in ranges:\n\t\tprint ()\n\t\tprint (\"#define joining_offset_0x%04xu %d\" % (start, offset))\n\t\tfor u in range(start, end+1):\n\t\t\tblock = blocks.get(u, last_block)\n\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:\n\t\t\t\t\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tblock",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tblock = blocks.get(u, last_block)\n\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:\n\t\t\t\t\tprint ()\n\t\t\t\tif block in all_blocks:\n\t\t\t\t\tprint (\"\\n  /* %s */\" % block)\n\t\t\t\telse:\n\t\t\t\t\tprint (\"\\n  /* FILLER */\")\n\t\t\t\tlast_block = block",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tvalue = values.get(u, \"JOINING_TYPE_X\")\n\t\t\tif block != last_block or u == start:\n\t\t\t\tif u != start:\n\t\t\t\t\tprint ()\n\t\t\t\tif block in all_blocks:\n\t\t\t\t\tprint (\"\\n  /* %s */\" % block)\n\t\t\t\telse:\n\t\t\t\t\tprint (\"\\n  /* FILLER */\")\n\t\t\t\tlast_block = block\n\t\t\t\tif u % 32 != 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tlast_block = block\n\t\t\t\tif u % 32 != 0:\n\t\t\t\t\tprint ()\n\t\t\t\t\tprint (\"  /* %04X */\" % (u//32*32), \"  \" * (u % 32), end=\"\")\n\t\t\tif u % 32 == 0:\n\t\t\t\tprint ()\n\t\t\t\tprint (\"  /* %04X */ \" % u, end=\"\")\n\t\t\tprint (\"%s,\" % short_value[value], end=\"\")\n\t\tprint ()\n\t\toffset += end - start + 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\toccupancy",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\toccupancy = num * 100. / offset\n\tprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\n\tprint ()\n\tpage_bits = 12\n\tprint ()\n\tprint (\"static unsigned int\")\n\tprint (\"joining_type (hb_codepoint_t u)\")\n\tprint (\"{\")\n\tprint (\"  switch (u >> %d)\" % page_bits)\n\tprint (\"  {\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tpage_bits",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tpage_bits = 12\n\tprint ()\n\tprint (\"static unsigned int\")\n\tprint (\"joining_type (hb_codepoint_t u)\")\n\tprint (\"{\")\n\tprint (\"  switch (u >> %d)\" % page_bits)\n\tprint (\"  {\")\n\tpages = set([u>>page_bits for u in [s for s,e in ranges]+[e for s,e in ranges]])\n\tfor p in sorted(pages):\n\t\tprint (\"    case 0x%0Xu:\" % p)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tpages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tpages = set([u>>page_bits for u in [s for s,e in ranges]+[e for s,e in ranges]])\n\tfor p in sorted(pages):\n\t\tprint (\"    case 0x%0Xu:\" % p)\n\t\tfor (start,end) in ranges:\n\t\t\tif p not in [start>>page_bits, end>>page_bits]: continue\n\t\t\toffset = \"joining_offset_0x%04xu\" % start\n\t\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return joining_table[u - 0x%04Xu + %s];\" % (start, end, start, offset))\n\t\tprint (\"      break;\")\n\t\tprint (\"\")\n\tprint (\"    default:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\toffset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\toffset = \"joining_offset_0x%04xu\" % start\n\t\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return joining_table[u - 0x%04Xu + %s];\" % (start, end, start, offset))\n\t\tprint (\"      break;\")\n\t\tprint (\"\")\n\tprint (\"    default:\")\n\tprint (\"      break;\")\n\tprint (\"  }\")\n\tprint (\"  return X;\")\n\tprint (\"}\")\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "LIGATURES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "LIGATURES = (\n\t0xF2EE, 0xFC08, 0xFC0E, 0xFC12, 0xFC32, 0xFC3F, 0xFC40, 0xFC41, 0xFC42,\n\t0xFC44, 0xFC4E, 0xFC5E, 0xFC60, 0xFC61, 0xFC62, 0xFC6A, 0xFC6D, 0xFC6F,\n\t0xFC70, 0xFC73, 0xFC75, 0xFC86, 0xFC8F, 0xFC91, 0xFC94, 0xFC9C, 0xFC9D,\n\t0xFC9E, 0xFC9F, 0xFCA1, 0xFCA2, 0xFCA3, 0xFCA4, 0xFCA8, 0xFCAA, 0xFCAC,\n\t0xFCB0, 0xFCC9, 0xFCCA, 0xFCCB, 0xFCCC, 0xFCCD, 0xFCCE, 0xFCCF, 0xFCD0,\n\t0xFCD1, 0xFCD2, 0xFCD3, 0xFCD5, 0xFCDA, 0xFCDB, 0xFCDC, 0xFCDD, 0xFD30,\n\t0xFD88, 0xFEF5, 0xFEF6, 0xFEF7, 0xFEF8, 0xFEF9, 0xFEFA, 0xFEFB, 0xFEFC,\n\t0xF201, 0xF211, 0xF2EE,\n)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tshapes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tshapes = {}\n\tligatures = {}\n\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligatures",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligatures = {}\n\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:\n\t\tfields = [x.strip () for x in line.split (';')]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tnames",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tnames = {}\n\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif fields[5][0:1] != '<':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tlines",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tlines = f.readlines()\n\tlines += [\n\t\t\"F201;PUA ARABIC LIGATURE LELLAH ISOLATED FORM;Lo;0;AL;<isolated> 0644 0644 0647;;;;N;;;;;\",\n\t\t\"F211;PUA ARABIC LIGATURE LAM WITH MEEM WITH JEEM INITIAL FORM;Lo;0;AL;<initial> 0644 0645 062C;;;;N;;;;;\",\n\t\t\"F2EE;PUA ARABIC LIGATURE SHADDA WITH FATHATAN ISOLATED FORM;Lo;0;AL;<isolated> 0020 064B 0651;;;;N;;;;;\",\n\t]\n\tfor line in lines:\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif fields[5][0:1] != '<':\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif fields[5][0:1] != '<':\n\t\t\tcontinue\n\t\titems = fields[5].split (' ')\n\t\tshape, items = items[0][1:-1], tuple (int (x, 16) for x in items[1:])\n\t\tc = int (fields[0], 16)\n\t\tif not shape in ['initial', 'medial', 'isolated', 'final']:\n\t\t\tcontinue\n\t\tif len (items) != 1:\n\t\t\t# Mark ligatures start with space and are in visual order, so we",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\titems",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\titems = fields[5].split (' ')\n\t\tshape, items = items[0][1:-1], tuple (int (x, 16) for x in items[1:])\n\t\tc = int (fields[0], 16)\n\t\tif not shape in ['initial', 'medial', 'isolated', 'final']:\n\t\t\tcontinue\n\t\tif len (items) != 1:\n\t\t\t# Mark ligatures start with space and are in visual order, so we\n\t\t\t# remove the space and reverse the items.\n\t\t\tif items[0] == 0x0020:\n\t\t\t\titems = items[:0:-1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tc = int (fields[0], 16)\n\t\tif not shape in ['initial', 'medial', 'isolated', 'final']:\n\t\t\tcontinue\n\t\tif len (items) != 1:\n\t\t\t# Mark ligatures start with space and are in visual order, so we\n\t\t\t# remove the space and reverse the items.\n\t\t\tif items[0] == 0x0020:\n\t\t\t\titems = items[:0:-1]\n\t\t\t\tshape = None\n\t\t\t# We only care about a subset of ligatures",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\titems",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\titems = items[:0:-1]\n\t\t\t\tshape = None\n\t\t\t# We only care about a subset of ligatures\n\t\t\tif c not in LIGATURES:\n\t\t\t\tcontinue\n\t\t\t# Save ligature\n\t\t\tnames[c] = fields[1]\n\t\t\tif items not in ligatures:\n\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tshape",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tshape = None\n\t\t\t# We only care about a subset of ligatures\n\t\t\tif c not in LIGATURES:\n\t\t\t\tcontinue\n\t\t\t# Save ligature\n\t\t\tnames[c] = fields[1]\n\t\t\tif items not in ligatures:\n\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tnames[c]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tnames[c] = fields[1]\n\t\t\tif items not in ligatures:\n\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c\n\t\telse:\n\t\t\t# Save shape\n\t\t\tif items[0] not in names:\n\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tligatures[items]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tligatures[items] = {}\n\t\t\tligatures[items][shape] = c\n\t\telse:\n\t\t\t# Save shape\n\t\t\tif items[0] not in names:\n\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tligatures[items][shape]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tligatures[items][shape] = c\n\t\telse:\n\t\t\t# Save shape\n\t\t\tif items[0] not in names:\n\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tnames[items[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tnames[items[0]] = fields[1]\n\t\t\telse:\n\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tnames[items[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tnames[items[0]] = os.path.commonprefix ([names[items[0]], fields[1]]).strip ()\n\t\t\tif items[0] not in shapes:\n\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tshapes[items[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\tshapes[items[0]] = {}\n\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):\n\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tshapes[items[0]][shape]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tshapes[items[0]][shape] = c\n\tprint ()\n\tprint (\"static const uint16_t shaping_table[][4] =\")\n\tprint (\"{\")\n\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):\n\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]\n\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tkeys",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tkeys = shapes.keys ()\n\tmin_u, max_u = min (keys), max (keys)\n\tfor u in range (min_u, max_u + 1):\n\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]\n\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)\n\t\tprint (\"  {%s}, /* U+%04X %s */\" % (value, u, names[u] if u in names else \"\"))\n\tprint (\"};\")\n\tprint ()\n\tprint (\"#define SHAPING_TABLE_FIRST\t0x%04Xu\" % min_u)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\ts = [shapes[u][shape] if u in shapes and shape in shapes[u] else 0\n\t\t     for shape in  ['initial', 'medial', 'final', 'isolated']]\n\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)\n\t\tprint (\"  {%s}, /* U+%04X %s */\" % (value, u, names[u] if u in names else \"\"))\n\tprint (\"};\")\n\tprint ()\n\tprint (\"#define SHAPING_TABLE_FIRST\t0x%04Xu\" % min_u)\n\tprint (\"#define SHAPING_TABLE_LAST\t0x%04Xu\" % max_u)\n\tprint ()\n\tligas_2 = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\tvalue = ', '.join (\"0x%04Xu\" % c for c in s)\n\t\tprint (\"  {%s}, /* U+%04X %s */\" % (value, u, names[u] if u in names else \"\"))\n\tprint (\"};\")\n\tprint ()\n\tprint (\"#define SHAPING_TABLE_FIRST\t0x%04Xu\" % min_u)\n\tprint (\"#define SHAPING_TABLE_LAST\t0x%04Xu\" % max_u)\n\tprint ()\n\tligas_2 = {}\n\tligas_3 = {}\n\tligas_mark_2 = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligas_2",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligas_2 = {}\n\tligas_3 = {}\n\tligas_mark_2 = {}\n\tfor key in ligatures.keys ():\n\t\tfor shape in ligatures[key]:\n\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligas_3",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligas_3 = {}\n\tligas_mark_2 = {}\n\tfor key in ligatures.keys ():\n\t\tfor shape in ligatures[key]:\n\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tligas_mark_2",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tligas_mark_2 = {}\n\tfor key in ligatures.keys ():\n\t\tfor shape in ligatures[key]:\n\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\tc = ligatures[key][shape]\n\t\t\tif len(key) == 3:\n\t\t\t\tif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_3:\n\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['medial'], shapes[key[2]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_3:\n\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))\n\t\t\telif len(key) == 2:\n\t\t\t\tif shape is None:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'], shapes[key[2]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_3:\n\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))\n\t\t\telif len(key) == 2:\n\t\t\t\tif shape is None:\n\t\t\t\t\tliga = key\n\t\t\t\t\tif liga[0] not in ligas_mark_2:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tligas_3[liga[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tligas_3[liga[0]] = []\n\t\t\t\tligas_3[liga[0]].append ((liga[1], liga[2], c))\n\t\t\telif len(key) == 2:\n\t\t\t\tif shape is None:\n\t\t\t\t\tliga = key\n\t\t\t\t\tif liga[0] not in ligas_mark_2:\n\t\t\t\t\t\tligas_mark_2[liga[0]] = []\n\t\t\t\t\tligas_mark_2[liga[0]].append ((liga[1], c))\n\t\t\t\t\tcontinue\n\t\t\t\telif shape == 'isolated':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = key\n\t\t\t\t\tif liga[0] not in ligas_mark_2:\n\t\t\t\t\t\tligas_mark_2[liga[0]] = []\n\t\t\t\t\tligas_mark_2[liga[0]].append ((liga[1], c))\n\t\t\t\t\tcontinue\n\t\t\t\telif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tligas_mark_2[liga[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\t\tligas_mark_2[liga[0]] = []\n\t\t\t\t\tligas_mark_2[liga[0]].append ((liga[1], c))\n\t\t\t\t\tcontinue\n\t\t\t\telif shape == 'isolated':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'final':\n\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_2:\n\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['medial'], shapes[key[1]]['final'])\n\t\t\t\telif shape == 'initial':\n\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_2:\n\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))\n\t\t\telse:\n\t\t\t\traise Exception (\"Unexpected number of ligature components\", key)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tliga",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tliga = (shapes[key[0]]['initial'], shapes[key[1]]['medial'])\n\t\t\t\telse:\n\t\t\t\t\traise Exception (\"Unexpected shape\", shape)\n\t\t\t\tif liga[0] not in ligas_2:\n\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))\n\t\t\telse:\n\t\t\t\traise Exception (\"Unexpected number of ligature components\", key)\n\tmax_i = max (len (ligas_2[l]) for l in ligas_2)\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tligas_2[liga[0]]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\t\t\t\t\tligas_2[liga[0]] = []\n\t\t\t\tligas_2[liga[0]].append ((liga[1], c))\n\t\t\telse:\n\t\t\t\traise Exception (\"Unexpected number of ligature components\", key)\n\tmax_i = max (len (ligas_2[l]) for l in ligas_2)\n\tprint ()\n\tprint (\"static const struct ligature_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_pairs_t {\")\n\tprint (\"   uint16_t components[1];\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tmax_i",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tmax_i = max (len (ligas_2[l]) for l in ligas_2)\n\tprint ()\n\tprint (\"static const struct ligature_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_pairs_t {\")\n\tprint (\"   uint16_t components[1];\")\n\tprint (\"   uint16_t ligature;\")\n\tprint (\" } ligatures[%d];\" % max_i)\n\tprint (\"} ligature_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tmax_i",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tmax_i = max (len (ligas_mark_2[l]) for l in ligas_mark_2)\n\tprint ()\n\tprint (\"static const struct ligature_mark_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_pairs_t {\")\n\tprint (\"   uint16_t components[1];\")\n\tprint (\"   uint16_t ligature;\")\n\tprint (\" } ligatures[%d];\" % max_i)\n\tprint (\"} ligature_mark_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "\tmax_i",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "peekOfCode": "\tmax_i = max (len (ligas_3[l]) for l in ligas_3)\n\tprint ()\n\tprint (\"static const struct ligature_3_set_t {\")\n\tprint (\" uint16_t first;\")\n\tprint (\" struct ligature_triplets_t {\")\n\tprint (\"   uint16_t components[2];\")\n\tprint (\"   uint16_t ligature;\")\n\tprint (\" } ligatures[%d];\" % max_i)\n\tprint (\"} ligature_3_table[] =\")\n\tprint (\"{\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-arabic-table",
        "documentation": {}
    },
    {
        "label": "output_file",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "output_file = sys.argv[1]\nheader_paths = sys.argv[2:]\nheaders_content = []\nfor h in header_paths:\n\tif h.endswith (\".h\"):\n\t\twith open (h, encoding='utf-8') as f: headers_content.append (f.read ())\nsymbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "header_paths",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "header_paths = sys.argv[2:]\nheaders_content = []\nfor h in header_paths:\n\tif h.endswith (\".h\"):\n\t\twith open (h, encoding='utf-8') as f: headers_content.append (f.read ())\nsymbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "headers_content",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "headers_content = []\nfor h in header_paths:\n\tif h.endswith (\".h\"):\n\t\twith open (h, encoding='utf-8') as f: headers_content.append (f.read ())\nsymbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail\nhb_subset_input_override_name_table",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "symbols = sorted (re.findall (r\"^hb_\\w+(?= \\()\", \"\\n\".join (headers_content), re.M))\nif '--experimental-api' not in sys.argv:\n\t# Move these to harfbuzz-sections.txt when got stable\n\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail\nhb_subset_input_override_name_table\n\"\"\".splitlines ()\n\tsymbols = [x for x in symbols if x not in experimental_symbols]\nsymbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "\texperimental_symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "\texperimental_symbols = \\\n\"\"\"hb_subset_repack_or_fail\nhb_subset_input_override_name_table\n\"\"\".splitlines ()\n\tsymbols = [x for x in symbols if x not in experimental_symbols]\nsymbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "\tsymbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "\tsymbols = [x for x in symbols if x not in experimental_symbols]\nsymbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "symbols",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "symbols = \"\\n\".join (symbols)\nresult = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "result",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "peekOfCode": "result = symbols if os.getenv ('PLAIN_LIST', '') else \"\"\"EXPORTS\n%s\nLIBRARY lib%s-0.dll\"\"\" % (symbols, output_file.replace ('src/', '').replace ('.def', ''))\nwith open (output_file, \"w\") as f: f.write (result)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-def",
        "documentation": {}
    },
    {
        "label": "f",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "f = open(sys.argv[1])\nheader = [f.readline () for _ in range(10)]\nranges = OrderedDict()\nfor line in f.readlines():\n\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "header = [f.readline () for _ in range(10)]\nranges = OrderedDict()\nfor line in f.readlines():\n\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "ranges",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "ranges = OrderedDict()\nfor line in f.readlines():\n\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang\n\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tline = line.strip()\n\tif not line or line[0] == '#':\n\t\tcontinue\n\trang, typ = [s.strip() for s in line.split('#')[0].split(';')[:2]]\n\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang\n\telse:\n\t\tstart = end = rang[0]\n\tif typ not in ranges:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\trang",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\trang = [int(s, 16) for s in rang.split('..')]\n\tif len(rang) > 1:\n\t\tstart, end = rang\n\telse:\n\t\tstart = end = rang[0]\n\tif typ not in ranges:\n\t\tranges[typ] = []\n\tif ranges[typ] and ranges[typ][-1][1] == start - 1:\n\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\tstart = end = rang[0]\n\tif typ not in ranges:\n\t\tranges[typ] = []\n\tif ranges[typ] and ranges[typ][-1][1] == start - 1:\n\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:\n\t\tranges[typ].append((start, end))\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following tables are generated by running:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\tranges[typ]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\tranges[typ] = []\n\tif ranges[typ] and ranges[typ][-1][1] == start - 1:\n\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:\n\t\tranges[typ].append((start, end))\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following tables are generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-emoji-table.py emoji-data.txt\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\tranges[typ][-1]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\tranges[typ][-1] = (ranges[typ][-1][0], end)\n\telse:\n\t\tranges[typ].append((start, end))\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following tables are generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-emoji-table.py emoji-data.txt\")\nprint (\" *\")\nprint (\" * on file with this header:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tarr",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tarr = dict()\n\tfor start,end in s:\n\t\tfor i in range(start, end + 1):\n\t\t\tarr[i] = 1\n\tsol = packTab.pack_table(arr, 0, compression=9)\n\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tarr[i]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\t\t\tarr[i] = 1\n\tsol = packTab.pack_table(arr, 0, compression=9)\n\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()\nprint (\"#endif /* HB_UNICODE_EMOJI_TABLE_HH */\")\nprint ()\nprint (\"/* == End of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tsol",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tsol = packTab.pack_table(arr, 0, compression=9)\n\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()\nprint (\"#endif /* HB_UNICODE_EMOJI_TABLE_HH */\")\nprint ()\nprint (\"/* == End of generated table == */\")\n# Generate test file.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "\tcode",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "\tcode = packTab.Code('_hb_emoji')\n\tsol.genCode(code, 'is_'+typ)\n\tcode.print_c(linkage='static inline')\n\tprint()\nprint ()\nprint (\"#endif /* HB_UNICODE_EMOJI_TABLE_HH */\")\nprint ()\nprint (\"/* == End of generated table == */\")\n# Generate test file.\nsequences = []",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "sequences",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "peekOfCode": "sequences = []\nwith open(sys.argv[2]) as f:\n    for line in f.readlines():\n        if \"#\" in line:\n            line = line[:line.index(\"#\")]\n        if \";\" in line:\n            line = line[:line.index(\";\")]\n        line = line.strip()\n        line = line.split(\" \")\n        if len(line) < 2:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-emoji-table",
        "documentation": {}
    },
    {
        "label": "OUTPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "OUTPUT = sys.argv[1]\nCURRENT_SOURCE_DIR = sys.argv[2]\n# make sure input files are unique\nsources = sorted(set(sys.argv[3:]))\nwith open (OUTPUT, \"wb\") as f:\n\tf.write (\"\".join ('#include \"{}\"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (\".cc\")).encode ())\n# copy it also to the source tree, but only if it has changed\nbaseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "CURRENT_SOURCE_DIR",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "CURRENT_SOURCE_DIR = sys.argv[2]\n# make sure input files are unique\nsources = sorted(set(sys.argv[3:]))\nwith open (OUTPUT, \"wb\") as f:\n\tf.write (\"\".join ('#include \"{}\"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (\".cc\")).encode ())\n# copy it also to the source tree, but only if it has changed\nbaseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "sources",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "sources = sorted(set(sys.argv[3:]))\nwith open (OUTPUT, \"wb\") as f:\n\tf.write (\"\".join ('#include \"{}\"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (\".cc\")).encode ())\n# copy it also to the source tree, but only if it has changed\nbaseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():\n\t\t\tshutil.copyfile (OUTPUT, baseline_filename)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "baseline_filename",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "peekOfCode": "baseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():\n\t\t\tshutil.copyfile (OUTPUT, baseline_filename)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-harfbuzzcc",
        "documentation": {}
    },
    {
        "label": "version",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "peekOfCode": "version = sys.argv[1]\nmajor, minor, micro = version.split (\".\")\nOUTPUT = sys.argv[2]\nINPUT = sys.argv[3]\nCURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "OUTPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "peekOfCode": "OUTPUT = sys.argv[2]\nINPUT = sys.argv[3]\nCURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "INPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "peekOfCode": "INPUT = sys.argv[3]\nCURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:\n\tpass",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "CURRENT_SOURCE_DIR",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "peekOfCode": "CURRENT_SOURCE_DIR = os.path.dirname(INPUT)\ntry:\n\twith open (OUTPUT, \"r\", encoding='utf-8') as old_output:\n\t\tfor line in old_output:\n\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:\n\tpass\nwith open (INPUT, \"r\", encoding='utf-8') as template:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "\t\t\told_version",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "peekOfCode": "\t\t\told_version = re.match (r\"#define HB_VERSION_STRING \\\"(\\d.\\d.\\d)\\\"\", line)\n\t\t\tif old_version and old_version[1] == version:\n\t\t\t\tsys.exit ()\nexcept IOError:\n\tpass\nwith open (INPUT, \"r\", encoding='utf-8') as template:\n\twith open (OUTPUT, \"wb\") as output:\n\t\toutput.write (template.read ()\n\t\t\t.replace (\"@HB_VERSION_MAJOR@\", major)\n\t\t\t.replace (\"@HB_VERSION_MINOR@\", minor)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "baseline_filename",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "peekOfCode": "baseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))\nwith open(baseline_filename, \"rb\") as baseline:\n\twith open(OUTPUT, \"rb\") as generated:\n\t\tif baseline.read() != generated.read():\n\t\t\tshutil.copyfile (OUTPUT, baseline_filename)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-hb-version",
        "documentation": {}
    },
    {
        "label": "matra_pos_left",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_left(u, block):\n  return \"PRE_M\"\ndef matra_pos_right(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_POST'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'\n  if block == 'Gujarati':\treturn  'AFTER_POST'\n  if block == 'Oriya':\t\treturn  'AFTER_POST'\n  if block == 'Tamil':\t\treturn  'AFTER_POST'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB' if u <= 0x0C42 else 'AFTER_SUB'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_pos_right",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_right(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_POST'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'\n  if block == 'Gujarati':\treturn  'AFTER_POST'\n  if block == 'Oriya':\t\treturn  'AFTER_POST'\n  if block == 'Tamil':\t\treturn  'AFTER_POST'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB' if u <= 0x0C42 else 'AFTER_SUB'\n  if block == 'Kannada':\treturn  'BEFORE_SUB' if u < 0x0CC3 or u > 0x0CD6 else 'AFTER_SUB'\n  if block == 'Malayalam':\treturn  'AFTER_POST'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_pos_top",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_top(u, block):\n  # BENG and MLYM don't have top matras.\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST' # Deviate from spec\n  if block == 'Gujarati':\treturn  'AFTER_SUB'\n  if block == 'Oriya':\t\treturn  'AFTER_MAIN'\n  if block == 'Tamil':\t\treturn  'AFTER_SUB'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB'\n  if block == 'Kannada':\treturn  'BEFORE_SUB'\n  return 'AFTER_SUB'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_pos_bottom",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def matra_pos_bottom(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_SUB'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'\n  if block == 'Gujarati':\treturn  'AFTER_POST'\n  if block == 'Oriya':\t\treturn  'AFTER_SUB'\n  if block == 'Tamil':\t\treturn  'AFTER_POST'\n  if block == 'Telugu':\t\treturn  'BEFORE_SUB'\n  if block == 'Kannada':\treturn  'BEFORE_SUB'\n  if block == 'Malayalam':\treturn  'AFTER_POST'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "indic_matra_position",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def indic_matra_position(u, pos, block): # Reposition matra\n  if pos == 'PRE_C':\treturn matra_pos_left(u, block)\n  if pos == 'POST_C':\treturn matra_pos_right(u, block)\n  if pos == 'ABOVE_C':\treturn matra_pos_top(u, block)\n  if pos == 'BELOW_C':\treturn matra_pos_bottom(u, block)\n  assert (False)\ndef position_to_category(pos):\n  if pos == 'PRE_C':\treturn 'VPre'\n  if pos == 'ABOVE_C':\treturn 'VAbv'\n  if pos == 'BELOW_C':\treturn 'VBlw'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "position_to_category",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def position_to_category(pos):\n  if pos == 'PRE_C':\treturn 'VPre'\n  if pos == 'ABOVE_C':\treturn 'VAbv'\n  if pos == 'BELOW_C':\treturn 'VBlw'\n  if pos == 'POST_C':\treturn 'VPst'\n  assert(False)\ndefaults = (category_map[defaults[0]], position_map[defaults[1]], defaults[2])\nindic_data = {}\nfor k, (cat, pos, block) in combined.items():\n  cat = category_map[cat]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "print_bloc",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "def print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0\n\tfor u in range (start, end+1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "ALLOWED_SINGLES",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "ALLOWED_SINGLES = [0x00A0, 0x25CC]\nALLOWED_BLOCKS = [\n\t'Basic Latin',\n\t'Latin-1 Supplement',\n\t'Devanagari',\n\t'Bengali',\n\t'Gurmukhi',\n\t'Gujarati',\n\t'Oriya',\n\t'Tamil',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "ALLOWED_BLOCKS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "ALLOWED_BLOCKS = [\n\t'Basic Latin',\n\t'Latin-1 Supplement',\n\t'Devanagari',\n\t'Bengali',\n\t'Gurmukhi',\n\t'Gujarati',\n\t'Oriya',\n\t'Tamil',\n\t'Telugu',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline () for i in range (2)] for f in files]\nunicode_data = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "headers = [[f.readline () for i in range (2)] for f in files]\nunicode_data = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "unicode_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "unicode_data = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tt = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tunicode_data[i][u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tunicode_data[i][u] = t\n# Merge data into one dict:\ndefaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue\n\t\tif not u in combined:\n\t\t\tcombined[u] = list (defaults)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "defaults",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "defaults = ('Other', 'Not_Applicable', 'No_Block')\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue\n\t\tif not u in combined:\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "combined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif i == 2 and not u in combined:\n\t\t\tcontinue\n\t\tif not u in combined:\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tcombined[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types\ncategories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tcombined[u][i]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tcombined[u][i] = v\ncombined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types\ncategories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',\n    'H',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "combined = {k:v for k,v in combined.items() if k in ALLOWED_SINGLES or v[2] in ALLOWED_BLOCKS}\n# Convert categories & positions types\ncategories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',\n    'H',\n    'ZWNJ',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "categories = {\n  'indic' : [\n    'X',\n    'C',\n    'V',\n    'N',\n    'H',\n    'ZWNJ',\n    'ZWJ',\n    'M',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "category_map",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "category_map = {\n  'Other'\t\t\t: 'X',\n  'Avagraha'\t\t\t: 'Symbol',\n  'Bindu'\t\t\t: 'SM',\n  'Brahmi_Joining_Number'\t: 'PLACEHOLDER', # Don't care.\n  'Cantillation_Mark'\t\t: 'A',\n  'Consonant'\t\t\t: 'C',\n  'Consonant_Dead'\t\t: 'C',\n  'Consonant_Final'\t\t: 'CM',\n  'Consonant_Head_Letter'\t: 'C',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "position_map",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "position_map = {\n  'Not_Applicable'\t\t: 'END',\n  'Left'\t\t\t: 'PRE_C',\n  'Top'\t\t\t\t: 'ABOVE_C',\n  'Bottom'\t\t\t: 'BELOW_C',\n  'Right'\t\t\t: 'POST_C',\n  # These should resolve to the position of the last part of the split sequence.\n  'Bottom_And_Right'\t\t: 'POST_C',\n  'Left_And_Right'\t\t: 'POST_C',\n  'Top_And_Bottom'\t\t: 'BELOW_C',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "category_overrides",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "category_overrides = {\n  # These are the variation-selectors. They only appear in the Myanmar grammar\n  # but are not Myanmar-specific\n  0xFE00: 'VS',\n  0xFE01: 'VS',\n  0xFE02: 'VS',\n  0xFE03: 'VS',\n  0xFE04: 'VS',\n  0xFE05: 'VS',\n  0xFE06: 'VS',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "position_overrides",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "position_overrides = {\n  0x0A51: 'BELOW_C', # https://github.com/harfbuzz/harfbuzz/issues/524\n  0x0B01: 'BEFORE_SUB', # Oriya Bindu is BeforeSub in the spec.\n}\ndef matra_pos_left(u, block):\n  return \"PRE_M\"\ndef matra_pos_right(u, block):\n  if block == 'Devanagari':\treturn  'AFTER_SUB'\n  if block == 'Bengali':\treturn  'AFTER_POST'\n  if block == 'Gurmukhi':\treturn  'AFTER_POST'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "defaults",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "defaults = (category_map[defaults[0]], position_map[defaults[1]], defaults[2])\nindic_data = {}\nfor k, (cat, pos, block) in combined.items():\n  cat = category_map[cat]\n  pos = position_map[pos]\n  indic_data[k] = (cat, pos, block)\nfor k,new_cat in category_overrides.items():\n  (cat, pos, _) = indic_data.get(k, defaults)\n  indic_data[k] = (new_cat, pos, unicode_data[2][k])\n# We only expect position for certain types",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "indic_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "indic_data = {}\nfor k, (cat, pos, block) in combined.items():\n  cat = category_map[cat]\n  pos = position_map[pos]\n  indic_data[k] = (cat, pos, block)\nfor k,new_cat in category_overrides.items():\n  (cat, pos, _) = indic_data.get(k, defaults)\n  indic_data[k] = (new_cat, pos, unicode_data[2][k])\n# We only expect position for certain types\npositioned_categories = ('CM', 'SM', 'RS', 'H', 'M', 'MPst')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "positioned_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "positioned_categories = ('CM', 'SM', 'RS', 'H', 'M', 'MPst')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat not in positioned_categories:\n    pos = 'END'\n    indic_data[k] = (cat, pos, block)\n# Position overrides are more complicated\n# Keep in sync with CONSONANT_FLAGS in the shaper\nconsonant_categories = ('C', 'CS', 'Ra','CM', 'V', 'PLACEHOLDER', 'DOTTEDCIRCLE')\nmatra_categories = ('M', 'MPst')\nsmvd_categories = ('SM', 'VD', 'A', 'Symbol')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "consonant_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "consonant_categories = ('C', 'CS', 'Ra','CM', 'V', 'PLACEHOLDER', 'DOTTEDCIRCLE')\nmatra_categories = ('M', 'MPst')\nsmvd_categories = ('SM', 'VD', 'A', 'Symbol')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat in consonant_categories:\n    pos = 'BASE_C'\n  elif cat in matra_categories:\n    if block.startswith('Khmer') or block.startswith('Myanmar'):\n      cat = position_to_category(pos)\n    else:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "matra_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "matra_categories = ('M', 'MPst')\nsmvd_categories = ('SM', 'VD', 'A', 'Symbol')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat in consonant_categories:\n    pos = 'BASE_C'\n  elif cat in matra_categories:\n    if block.startswith('Khmer') or block.startswith('Myanmar'):\n      cat = position_to_category(pos)\n    else:\n      pos = indic_matra_position(k, pos, block)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "smvd_categories",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "smvd_categories = ('SM', 'VD', 'A', 'Symbol')\nfor k, (cat, pos, block) in indic_data.items():\n  if cat in consonant_categories:\n    pos = 'BASE_C'\n  elif cat in matra_categories:\n    if block.startswith('Khmer') or block.startswith('Myanmar'):\n      cat = position_to_category(pos)\n    else:\n      pos = indic_matra_position(k, pos, block)\n  elif cat in smvd_categories:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "values = [{_: 1} for _ in defaults]\nfor vv in indic_data.values():\n  for i,v in enumerate(vv):\n    values[i][v] = values[i].get (v, 0) + 1\n# Move the outliers NO-BREAK SPACE and DOTTED CIRCLE out\nsingles = {}\nfor u in ALLOWED_SINGLES:\n\tsingles[u] = indic_data[u]\n\tdel indic_data[u]\nprint (\"/* == Start of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "singles",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "singles = {}\nfor u in ALLOWED_SINGLES:\n\tsingles[u] = indic_data[u]\n\tdel indic_data[u]\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-indic-table.py IndicSyllabicCategory.txt IndicPositionalCategory.txt Blocks.txt\")\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tsingles[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tsingles[u] = indic_data[u]\n\tdel indic_data[u]\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   ./gen-indic-table.py IndicSyllabicCategory.txt IndicPositionalCategory.txt Blocks.txt\")\nprint (\" *\")\nprint (\" * on files with these headers:\")\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "done",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "done = {}\nfor shaper, shaper_cats in categories.items():\n  print ('/* %s */' % shaper)\n  for cat in shaper_cats:\n    v = shaper[0].upper()\n    if cat not in done:\n      print (\"#define OT_%s %s_Cat(%s)\" % (cat, v, cat))\n      done[cat] = v\n    else:\n      print ('static_assert (OT_%s == %s_Cat(%s), \"\");' % (cat, v, cat))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "short",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "short = [{\n\t\"Repha\":\t\t'Rf',\n\t\"PLACEHOLDER\":\t\t'GB',\n\t\"DOTTEDCIRCLE\":\t\t'DC',\n\t\"VPst\":\t\t\t'VR',\n\t\"VPre\":\t\t\t'VL',\n\t\"Robatic\":\t\t'Rt',\n\t\"Xgroup\":\t\t'Xg',\n\t\"Ygroup\":\t\t'Yg',\n\t\"As\":\t\t\t'As',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "all_shorts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "all_shorts = [{},{}]\n# Add some of the values, to make them more readable, and to avoid duplicates\nfor i in range (2):\n\tfor v,s in short[i].items ():\n\t\tall_shorts[i][s] = v\nwhat = [\"OT\", \"POS\"]\nwhat_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tall_shorts[i][s]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tall_shorts[i][s] = v\nwhat = [\"OT\", \"POS\"]\nwhat_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "what",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "what = [\"OT\", \"POS\"]\nwhat_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "what_short",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "what_short = [\"_OT\", \"_POS\"]\ncat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "cat_defs",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "cat_defs = []\nfor i in range (2):\n\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tvv",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tv_no_and",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tv_no_and = v.replace ('_And_', '_')\n\t\tif v in short[i]:\n\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\ts = short[i][v]\n\t\telse:\n\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\ts = ''.join ([c for c in v_no_and if ord ('A') <= ord (c) <= ord ('Z')])\n\t\t\tif s in all_shorts[i]:\n\t\t\t\traise Exception (\"Duplicate short value alias\", v, all_shorts[i][s])\n\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tall_shorts[i][s]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tall_shorts[i][s] = v\n\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tshort[i][v]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\t\tshort[i][v] = s\n\t\tcat_defs.append ((what_short[i] + '_' + s, what[i] + '_' + (v.upper () if i else v), str (values[i][v]), v))\nmaxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "maxlen_s",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "maxlen_s = max ([len (c[0]) for c in cat_defs])\nmaxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))\nprint ()\nprint ('#pragma GCC diagnostic pop')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "maxlen_l",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "maxlen_l = max ([len (c[1]) for c in cat_defs])\nmaxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))\nprint ()\nprint ('#pragma GCC diagnostic pop')\nprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "maxlen_n",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "maxlen_n = max ([len (c[2]) for c in cat_defs])\nfor s in what_short:\n\tprint ()\n\tfor c in [c for c in cat_defs if s in c[0]]:\n\t\tprint (\"#define %s %s /* %s chars; %s */\" %\n\t\t\t(c[0].ljust (maxlen_s), c[1].ljust (maxlen_l), c[2].rjust (maxlen_n), c[3]))\nprint ()\nprint ('#pragma GCC diagnostic pop')\nprint ()\nprint (\"#define INDIC_COMBINE_CATEGORIES(S,M) ((S) | ((M) << 8))\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "total",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "total = 0\nused = 0\nlast_block = None\ndef print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "used",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "used = 0\nlast_block = None\ndef print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0\n\tassert start % 8 == 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "last_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "last_block = None\ndef print_block (block, start, end, data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tnum",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0\n\tfor u in range (start, end+1):\n\t\tif u % 8 == 0:\n\t\t\tprint ()\n\t\t\tprint (\"  /* %04X */\" % u, end=\"\")\n\t\tif u in data:\n\t\t\tnum += 1\n\t\td = data.get (u, defaults)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\td = data.get (u, defaults)\n\t\tprint (\"%9s\" % (\"_(%s,%s),\" % (short[0][d[0]], short[1][d[1]])), end=\"\")\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block\nuu = sorted (indic_data)\nlast = -100000\nnum = 0\noffset = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\tlast_block = block\nuu = sorted (indic_data)\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "uu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "uu = sorted (indic_data)\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "last",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "last = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "num",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "num = 0\noffset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "offset = 0\nstarts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "starts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "starts = []\nends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "ends",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "ends = []\nprint (\"static const uint16_t indic_table[] = {\")\nfor u in uu:\n\tif u <= last:\n\t\tcontinue\n\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tblock",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tblock = indic_data[u][2]\n\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1\n\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tstart = u//8*8\n\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1\n\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:\n\t\t\tif last >= 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tend = start+1\n\twhile end in uu and block == indic_data[end][2]:\n\t\tend += 1\n\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:\n\t\t\tif last >= 0:\n\t\t\t\tends.append (last + 1)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tend = (end-1)//8*8 + 7\n\tif start != last + 1:\n\t\tif start - last <= 1+16*2:\n\t\t\tprint_block (None, last+1, start-1, indic_data)\n\t\telse:\n\t\t\tif last >= 0:\n\t\t\t\tends.append (last + 1)\n\t\t\t\toffset += ends[-1] - starts[-1]\n\t\t\tprint ()\n\t\t\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tlast",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tlast = end\nends.append (last + 1)\noffset += ends[-1] - starts[-1]\nprint ()\nprint ()\noccupancy = used * 100. / total\npage_bits = 12\nprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\nprint ()\nprint (\"uint16_t\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "occupancy",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "occupancy = used * 100. / total\npage_bits = 12\nprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\nprint ()\nprint (\"uint16_t\")\nprint (\"hb_indic_get_categories (hb_codepoint_t u)\")\nprint (\"{\")\nprint (\"  switch (u >> %d)\" % page_bits)\nprint (\"  {\")\npages = set ([u>>page_bits for u in starts+ends+list (singles.keys ())])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "page_bits",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "page_bits = 12\nprint (\"}; /* Table items: %d; occupancy: %d%% */\" % (offset, occupancy))\nprint ()\nprint (\"uint16_t\")\nprint (\"hb_indic_get_categories (hb_codepoint_t u)\")\nprint (\"{\")\nprint (\"  switch (u >> %d)\" % page_bits)\nprint (\"  {\")\npages = set ([u>>page_bits for u in starts+ends+list (singles.keys ())])\nfor p in sorted(pages):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "pages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "pages = set ([u>>page_bits for u in starts+ends+list (singles.keys ())])\nfor p in sorted(pages):\n\tprint (\"    case 0x%0Xu:\" % p)\n\tfor u,d in singles.items ():\n\t\tif p != u>>page_bits: continue\n\t\tprint (\"      if (unlikely (u == 0x%04Xu)) return _(%s,%s);\" % (u, short[0][d[0]], short[1][d[1]]))\n\tfor (start,end) in zip (starts, ends):\n\t\tif p not in [start>>page_bits, end>>page_bits]: continue\n\t\toffset = \"indic_offset_0x%04xu\" % start\n\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return indic_table[u - 0x%04Xu + %s];\" % (start, end-1, start, offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\t\toffset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\t\toffset = \"indic_offset_0x%04xu\" % start\n\t\tprint (\"      if (hb_in_range<hb_codepoint_t> (u, 0x%04Xu, 0x%04Xu)) return indic_table[u - 0x%04Xu + %s];\" % (start, end-1, start, offset))\n\tprint (\"      break;\")\n\tprint (\"\")\nprint (\"    default:\")\nprint (\"      break;\")\nprint (\"  }\")\nprint (\"  return _(X,X);\")\nprint (\"}\")\nprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "\tvv",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "peekOfCode": "\tvv = sorted (values[i].keys ())\n\tfor v in vv:\n\t\tprint (\"#undef %s_%s\" %\n\t\t\t(what_short[i], short[i][v]))\nprint ()\nprint ('#endif')\nprint ()\nprint (\"/* == End of generated table == */\")\n# Maintain at least 50% occupancy in the table */\nif occupancy < 50:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-indic-table",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "peekOfCode": "args = sys.argv[1:]\ninput_file = args[0]\nwith open (input_file, mode=\"r\", encoding=\"utf-8\") as f:\n  all_ranges = []\n  current_bit = 0\n  while True:\n    line = f.readline().strip()\n    if not line:\n      break\n    fields = re.split(r'\\t+', line)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "documentation": {}
    },
    {
        "label": "input_file",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "peekOfCode": "input_file = args[0]\nwith open (input_file, mode=\"r\", encoding=\"utf-8\") as f:\n  all_ranges = []\n  current_bit = 0\n  while True:\n    line = f.readline().strip()\n    if not line:\n      break\n    fields = re.split(r'\\t+', line)\n    if len(fields) == 3:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "documentation": {}
    },
    {
        "label": "all_ranges",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "peekOfCode": "all_ranges = sorted(all_ranges, key=lambda t: t[0])\nfor ranges in all_ranges:\n  start = (\"0x%X\" % ranges[0]).rjust(8)\n  end = (\"0x%X\" % ranges[1]).rjust(8)\n  bit = (\"%s\" % ranges[2]).rjust(3)\n  print (\"  {%s, %s, %s}, // %s\" % (start, end, bit, ranges[3]))\nprint (\"\"\"};\"\"\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-os2-unicode-ranges",
        "documentation": {}
    },
    {
        "label": "ragel",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "ragel = sys.argv[1]\nif not ragel:\n\tsys.exit ('You have to install ragel if you are going to develop HarfBuzz itself')\nif len (sys.argv) < 4:\n\tsys.exit (__doc__)\nOUTPUT = sys.argv[2]\nCURRENT_SOURCE_DIR = sys.argv[3]\nINPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "OUTPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "OUTPUT = sys.argv[2]\nCURRENT_SOURCE_DIR = sys.argv[3]\nINPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "CURRENT_SOURCE_DIR",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "CURRENT_SOURCE_DIR = sys.argv[3]\nINPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "INPUT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "INPUT = sys.argv[4]\noutdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "outdir",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "outdir = os.path.dirname (OUTPUT)\nshutil.copy (INPUT, outdir)\nrl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "rl",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "rl = os.path.basename (INPUT)\nhh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "hh",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "peekOfCode": "hh = rl.replace ('.rl', '.hh')\nsubprocess.Popen (ragel.split() + ['-e', '-F1', '-o', hh, rl], cwd=outdir).wait ()\n# copy it also to src/\nshutil.copyfile (os.path.join (outdir, hh), os.path.join (CURRENT_SOURCE_DIR, hh))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ragel-artifacts",
        "documentation": {}
    },
    {
        "label": "LanguageTa",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "class LanguageTag (object):\n\t\"\"\"A BCP 47 language tag.\n\tAttributes:\n\t\tsubtags (List[str]): The list of subtags in this tag.\n\t\tgrandfathered (bool): Whether this tag is grandfathered. If\n\t\t\t``true``, the entire lowercased tag is the ``language``\n\t\t\tand the other subtag fields are empty.\n\t\tlanguage (str): The language subtag.\n\t\tscript (str): The script subtag.\n\t\tregion (str): The region subtag.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "OpenTypeRegistryParse",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "class OpenTypeRegistryParser (HTMLParser):\n\t\"\"\"A parser for the OpenType language system tag registry.\n\tAttributes:\n\t\theader (str): The \"last updated\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of language system tags to the\n\t\t\tnames they are given in the registry.\n\t\tranks (DefaultDict[str, int]): A map of language system tags to\n\t\t\tnumbers. If a single BCP 47 tag corresponds to multiple\n\t\t\tOpenType tags, the tags are ordered in increasing order by\n\t\t\trank. The rank is based on the number of BCP 47 tags",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "BCP47Parse",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "class BCP47Parser (object):\n\t\"\"\"A parser for the BCP 47 subtag registry.\n\tAttributes:\n\t\theader (str): The \"File-Date\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of subtags to the names they\n\t\t\tare given in the registry. Each value is a\n\t\t\t``'\\\\n'``-separated list of names.\n\t\tscopes (Mapping[str, str]): A map of language subtags to strings\n\t\t\tsuffixed to language names, including suffixes to explain\n\t\t\tlanguage scopes.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "expec",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def expect (condition, message=None):\n\tif not condition:\n\t\tif message is None:\n\t\t\traise AssertionError\n\t\traise AssertionError (message)\ndef write (s):\n\tsys.stdout.flush ()\n\tsys.stdout.buffer.write (s.encode ('utf-8'))\nDEFAULT_LANGUAGE_SYSTEM = ''\n# from https://www-01.sil.org/iso639-3/iso-639-3.tab",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "writ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def write (s):\n\tsys.stdout.flush ()\n\tsys.stdout.buffer.write (s.encode ('utf-8'))\nDEFAULT_LANGUAGE_SYSTEM = ''\n# from https://www-01.sil.org/iso639-3/iso-639-3.tab\nISO_639_3_TO_1 = {\n\t'aar': 'aa',\n\t'abk': 'ab',\n\t'afr': 'af',\n\t'aka': 'ak',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "rank_delt",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def rank_delta (bcp_47, ot):\n\t\"\"\"Return a delta to apply to a BCP 47 tag's rank.\n\tMost OpenType tags have a constant rank, but a few have ranks that\n\tdepend on the BCP 47 tag.\n\tArgs:\n\t\tbcp_47 (str): A BCP 47 tag.\n\t\tot (str): An OpenType tag to.\n\tReturns:\n\t\tA number to add to ``ot``'s rank when sorting ``bcp_47``'s\n\t\tOpenType equivalents.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "hb_ta",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def hb_tag (tag):\n\t\"\"\"Convert a tag to ``HB_TAG`` form.\n\tArgs:\n\t\ttag (str): An OpenType tag.\n\tReturns:\n\t\tA snippet of C++ representing ``tag``.\n\t\"\"\"\n\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\treturn 'HB_TAG_NONE\\t       '\n\treturn \"HB_TAG('%s','%s','%s','%s')\" % tuple (('%-4s' % tag)[:4])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "get_variant_se",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def get_variant_set (name):\n\t\"\"\"Return a set of variant language names from a name.\n\tArgs:\n\t\tname (str): A list of language names from the BCP 47 registry,\n\t\t\tjoined on ``'\\\\n'``.\n\tReturns:\n\t\tA set of normalized language names.\n\t\"\"\"\n\treturn set (unicodedata.normalize ('NFD', n.replace ('\\u2019', \"'\"))\n\t\t\t.encode ('ASCII', 'ignore')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "language_name_intersectio",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def language_name_intersection (a, b):\n\t\"\"\"Return the names in common between two language names.\n\tArgs:\n\t\ta (str): A list of language names from the BCP 47 registry,\n\t\t\tjoined on ``'\\\\n'``.\n\t\tb (str): A list of language names from the BCP 47 registry,\n\t\t\tjoined on ``'\\\\n'``.\n\tReturns:\n\t\tThe normalized language names shared by ``a`` and ``b``.\n\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "get_matching_language_nam",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def get_matching_language_name (intersection, candidates):\n\treturn next (iter (c for c in candidates if not intersection.isdisjoint (get_variant_set (c))))\ndef same_tag (bcp_47_tag, ot_tags):\n\treturn len (bcp_47_tag) == 3 and len (ot_tags) == 1 and bcp_47_tag == ot_tags[0].lower ()\nfor language_len in (2, 3):\n\tif language_len == 3:\n\t\tprint ('#ifndef HB_NO_LANGUAGE_LONG')\n\tprint ('static const LangTag ot_languages%d[] = {' % language_len)\n\tfor language, tags in sorted (ot.from_bcp_47.items ()):\n\t\tif language == '' or '-' in language:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "same_ta",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def same_tag (bcp_47_tag, ot_tags):\n\treturn len (bcp_47_tag) == 3 and len (ot_tags) == 1 and bcp_47_tag == ot_tags[0].lower ()\nfor language_len in (2, 3):\n\tif language_len == 3:\n\t\tprint ('#ifndef HB_NO_LANGUAGE_LONG')\n\tprint ('static const LangTag ot_languages%d[] = {' % language_len)\n\tfor language, tags in sorted (ot.from_bcp_47.items ()):\n\t\tif language == '' or '-' in language:\n\t\t\tcontinue\n\t\tif len(language) != language_len: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "print_subtag_matche",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def print_subtag_matches (subtag, string, new_line):\n\tif subtag:\n\t\tif new_line:\n\t\t\tprint ()\n\t\t\tprint ('\\t&& ', end='')\n\t\tprint ('subtag_matches (%s, limit, \"-%s\", %i)' % (string, subtag, 1 + len (subtag)), end='')\ncomplex_tags = collections.defaultdict (list)\nfor initial, group in itertools.groupby ((lt_tags for lt_tags in [\n\t\t\t(LanguageTag (language), tags)\n\t\t\tfor language, tags in sorted (ot.from_bcp_47.items (),",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "verify_disambiguation_dic",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "def verify_disambiguation_dict ():\n\t\"\"\"Verify and normalize ``disambiguation``.\n\t``disambiguation`` is a map of ambiguous OpenType language system\n\ttags to the particular BCP 47 tags they correspond to. This function\n\tchecks that all its keys really are ambiguous and that each key's\n\tvalue is valid for that key. It checks that no ambiguous tag is\n\tmissing, except when it can figure out which BCP 47 tag is the best\n\tby itself.\n\tIt modifies ``disambiguation`` to remove keys whose values are the\n\tsame as those that the fallback would return anyway, and to add",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "DEFAULT_LANGUAGE_SYSTEM",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "DEFAULT_LANGUAGE_SYSTEM = ''\n# from https://www-01.sil.org/iso639-3/iso-639-3.tab\nISO_639_3_TO_1 = {\n\t'aar': 'aa',\n\t'abk': 'ab',\n\t'afr': 'af',\n\t'aka': 'ak',\n\t'amh': 'am',\n\t'ara': 'ar',\n\t'arg': 'an',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ISO_639_3_TO_1",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ISO_639_3_TO_1 = {\n\t'aar': 'aa',\n\t'abk': 'ab',\n\t'afr': 'af',\n\t'aka': 'ak',\n\t'amh': 'am',\n\t'ara': 'ar',\n\t'arg': 'an',\n\t'asm': 'as',\n\t'ava': 'av',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.subtags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.subtags = tag.lower ().split ('-')\n\t\tself.grandfathered = tag.lower () in bcp_47.grandfathered\n\t\tif self.grandfathered:\n\t\t\tself.language = tag.lower ()\n\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.grandfathered",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.grandfathered = tag.lower () in bcp_47.grandfathered\n\t\tif self.grandfathered:\n\t\t\tself.language = tag.lower ()\n\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.language",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.language = tag.lower ()\n\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.script",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.script = ''\n\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.region",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.region = ''\n\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.variant",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.variant = ''\n\t\telse:\n\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.language",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.language = self.subtags[0]\n\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.script",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.script = self._find_first (lambda s: len (s) == 4 and s[0] > '9', self.subtags)\n\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):\n\t\ttry:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.region",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.region = self._find_first (lambda s: len (s) == 2 and s[0] > '9' or len (s) == 3 and s[0] <= '9', self.subtags[1:])\n\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):\n\t\ttry:\n\t\t\treturn next (iter (filter (function, sequence)))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.variant",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.variant = self._find_first (lambda s: len (s) > 4 or len (s) == 4 and s[0] <= '9', self.subtags)\n\tdef __str__(self):\n\t\treturn '-'.join(self.subtags)\n\tdef __repr__ (self):\n\t\treturn 'LanguageTag(%r)' % str(self)\n\t@staticmethod\n\tdef _find_first (function, sequence):\n\t\ttry:\n\t\t\treturn next (iter (filter (function, sequence)))\n\t\texcept StopIteration:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.header = ''\n\t\tself.names = {}\n\t\tself.ranks = collections.defaultdict (int)\n\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.names",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.names = {}\n\t\tself.ranks = collections.defaultdict (int)\n\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.ranks",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.ranks = collections.defaultdict (int)\n\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.to_bcp_47",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.to_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.from_bcp_47",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.from_bcp_47 = collections.defaultdict (set)\n\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.from_bcp_47_uninherited",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.from_bcp_47_uninherited = None\n\t\t# Whether the parser is in a <td> element\n\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself._td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself._td = False\n\t\t# Whether the parser is after a <br> element within the current <tr> element\n\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself._br",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself._br = False\n\t\t# The text of the <td> elements of the current <tr> element.\n\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:\n\t\t\t\tif attr == 'name' and value == 'updated_at':\n\t\t\t\t\tself.header = self.get_starttag_text ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself._current_tr",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself._current_tr = []\n\tdef handle_starttag (self, tag, attrs):\n\t\tif tag == 'br':\n\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:\n\t\t\t\tif attr == 'name' and value == 'updated_at':\n\t\t\t\t\tself.header = self.get_starttag_text ()\n\t\t\t\t\tbreak\n\t\telif tag == 'td':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._br",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._br = True\n\t\telif tag == 'meta':\n\t\t\tfor attr, value in attrs:\n\t\t\t\tif attr == 'name' and value == 'updated_at':\n\t\t\t\t\tself.header = self.get_starttag_text ()\n\t\t\t\t\tbreak\n\t\telif tag == 'td':\n\t\t\tself._td = True\n\t\t\tself._current_tr.append ('')\n\t\telif tag == 'tr':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tself.header = self.get_starttag_text ()\n\t\t\t\t\tbreak\n\t\telif tag == 'td':\n\t\t\tself._td = True\n\t\t\tself._current_tr.append ('')\n\t\telif tag == 'tr':\n\t\t\tself._br = False\n\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._td = True\n\t\t\tself._current_tr.append ('')\n\t\telif tag == 'tr':\n\t\t\tself._br = False\n\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':\n\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._br",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._br = False\n\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':\n\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)\n\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._current_tr",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._current_tr = []\n\tdef handle_endtag (self, tag):\n\t\tif tag == 'td':\n\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)\n\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself._td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself._td = False\n\t\telif tag == 'tr' and self._current_tr:\n\t\t\texpect (2 <= len (self._current_tr) <= 3)\n\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tname",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tname = self._current_tr[0].strip ()\n\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\ttag = self._current_tr[1].strip (\"\\t\\n\\v\\f\\r '\")\n\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\trank",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\trank = 0\n\t\t\tif len (tag) > 4:\n\t\t\t\texpect (tag.endswith (' (deprecated)'), 'ill-formed OpenType tag: %s' % tag)\n\t\t\t\tname += ' (deprecated)'\n\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\ttag = tag.split (' ')[0]\n\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\trank",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\trank = 1\n\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.names[tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.names[tag] = re.sub (' languages$', '', name)\n\t\t\tif not self._current_tr[2]:\n\t\t\t\treturn\n\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:\n\t\t\tself._current_tr[-1] += data",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tiso_codes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tiso_codes = self._current_tr[2].strip ()\n\t\t\tself.to_bcp_47[tag].update (ISO_639_3_TO_1.get (code, code) for code in iso_codes.replace (' ', '').split (','))\n\t\t\trank += 2 * len (self.to_bcp_47[tag])\n\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:\n\t\t\tself._current_tr[-1] += data\n\tdef handle_charref (self, name):\n\t\tself.handle_data (html.unescape ('&#%s;' % name))\n\tdef handle_entityref (self, name):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.ranks[tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.ranks[tag] = rank\n\tdef handle_data (self, data):\n\t\tif self._td and not self._br:\n\t\t\tself._current_tr[-1] += data\n\tdef handle_charref (self, name):\n\t\tself.handle_data (html.unescape ('&#%s;' % name))\n\tdef handle_entityref (self, name):\n\t\tself.handle_data (html.unescape ('&%s;' % name))\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the OpenType language system tag registry.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\ts = set ()\n\t\t\t\t\tfor language in bcp_47.macrolanguages[macrolanguage]:\n\t\t\t\t\t\tif language.lower () not in bcp_47.grandfathered:\n\t\t\t\t\t\t\ts.add ('%s-%s' % (language, suffix))\n\t\t\t\t\tbcp_47.macrolanguages['%s-%s' % (macrolanguage, suffix)] = s\n\t\t\texcept ValueError:\n\t\t\t\tpass\n\t@staticmethod\n\tdef _remove_language (tag_1, dict_1, dict_2):\n\t\tfor tag_2 in dict_1.pop (tag_1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tfirst_time",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tfirst_time = self.from_bcp_47_uninherited is None\n\t\tif first_time:\n\t\t\tself.from_bcp_47_uninherited = dict (self.from_bcp_47)\n\t\tfor macrolanguage, languages in dict (bcp_47.macrolanguages).items ():\n\t\t\tot_macrolanguages = {\n\t\t\t\tot_macrolanguage for ot_macrolanguage in self.from_bcp_47_uninherited.get (macrolanguage, set ())\n\t\t\t}\n\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.from_bcp_47_uninherited",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.from_bcp_47_uninherited = dict (self.from_bcp_47)\n\t\tfor macrolanguage, languages in dict (bcp_47.macrolanguages).items ():\n\t\t\tot_macrolanguages = {\n\t\t\t\tot_macrolanguage for ot_macrolanguage in self.from_bcp_47_uninherited.get (macrolanguage, set ())\n\t\t\t}\n\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tot_macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tot_macrolanguages = {\n\t\t\t\tot_macrolanguage for ot_macrolanguage in self.from_bcp_47_uninherited.get (macrolanguage, set ())\n\t\t\t}\n\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tblocked_ot_macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tblocked_ot_macrolanguages = set ()\n\t\t\tif 'retired code' not in bcp_47.scopes.get (macrolanguage, ''):\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tround_trip_languages = {\n\t\t\t\t\t\tl for l in languages\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tround_trip_macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tround_trip_macrolanguages = {\n\t\t\t\t\t\tl for l in self.to_bcp_47[ot_macrolanguage]\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tround_trip_languages = {\n\t\t\t\t\t\tl for l in languages\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tintersection = round_trip_macrolanguages & round_trip_languages\n\t\t\t\t\tif intersection and intersection != round_trip_languages:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tround_trip_languages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tround_trip_languages = {\n\t\t\t\t\t\tl for l in languages\n\t\t\t\t\t\tif 'retired code' not in bcp_47.scopes.get (l, '')\n\t\t\t\t\t}\n\t\t\t\t\tintersection = round_trip_macrolanguages & round_trip_languages\n\t\t\t\t\tif intersection and intersection != round_trip_languages:\n\t\t\t\t\t\tblocked_ot_macrolanguages.add (ot_macrolanguage)\n\t\t\tif ot_macrolanguages:\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tif ot_macrolanguage not in blocked_ot_macrolanguages:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tintersection",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tintersection = round_trip_macrolanguages & round_trip_languages\n\t\t\t\t\tif intersection and intersection != round_trip_languages:\n\t\t\t\t\t\tblocked_ot_macrolanguages.add (ot_macrolanguage)\n\t\t\tif ot_macrolanguages:\n\t\t\t\tfor ot_macrolanguage in ot_macrolanguages:\n\t\t\t\t\tif ot_macrolanguage not in blocked_ot_macrolanguages:\n\t\t\t\t\t\tfor language in languages:\n\t\t\t\t\t\t\tself.add_language (language, ot_macrolanguage)\n\t\t\t\t\t\t\tif not blocked_ot_macrolanguages:\n\t\t\t\t\t\t\t\tself.ranks[ot_macrolanguage] += 1",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tself.from_bcp_47[language]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tself.from_bcp_47[language] = sorted (tags,\n\t\t\t\t\tkey=lambda t: (self.ranks[t] + rank_delta (language, t), t))\not = OpenTypeRegistryParser ()\nclass BCP47Parser (object):\n\t\"\"\"A parser for the BCP 47 subtag registry.\n\tAttributes:\n\t\theader (str): The \"File-Date\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of subtags to the names they\n\t\t\tare given in the registry. Each value is a\n\t\t\t``'\\\\n'``-separated list of names.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot = OpenTypeRegistryParser ()\nclass BCP47Parser (object):\n\t\"\"\"A parser for the BCP 47 subtag registry.\n\tAttributes:\n\t\theader (str): The \"File-Date\" line of the registry.\n\t\tnames (Mapping[str, str]): A map of subtags to the names they\n\t\t\tare given in the registry. Each value is a\n\t\t\t``'\\\\n'``-separated list of names.\n\t\tscopes (Mapping[str, str]): A map of language subtags to strings\n\t\t\tsuffixed to language names, including suffixes to explain",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.header = ''\n\t\tself.names = {}\n\t\tself.scopes = {}\n\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.names",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.names = {}\n\t\tself.scopes = {}\n\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.scopes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.scopes = {}\n\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.macrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.macrolanguages = collections.defaultdict (set)\n\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:\n\t\t\tsubtag_type = None",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.prefixes",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.prefixes = collections.defaultdict (set)\n\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:\n\t\t\tsubtag_type = None\n\t\t\tsubtag = None",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.grandfathered",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tself.grandfathered = set ()\n\tdef parse (self, filename):\n\t\t\"\"\"Parse the BCP 47 subtag registry.\n\t\tArgs:\n\t\t\tfilename (str): The file name of the registry.\n\t\t\"\"\"\n\t\twith open (filename, encoding='utf-8') as f:\n\t\t\tsubtag_type = None\n\t\t\tsubtag = None\n\t\t\tdeprecated = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tsubtag_type",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tsubtag_type = None\n\t\t\tsubtag = None\n\t\t\tdeprecated = False\n\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tsubtag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tsubtag = None\n\t\t\tdeprecated = False\n\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tdeprecated",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tdeprecated = False\n\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\thas_preferred_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\thas_preferred_value = False\n\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):\n\t\t\t\t\tsubtag_type = line.split (' ')[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline_buffer",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tline_buffer = ''\n\t\t\tfor line in itertools.chain (f, ['']):\n\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):\n\t\t\t\t\tsubtag_type = line.split (' ')[1]\n\t\t\t\t\tdeprecated = False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tline = line.rstrip ()\n\t\t\t\tif line.startswith (' '):\n\t\t\t\t\tline_buffer += line[1:]\n\t\t\t\t\tcontinue\n\t\t\t\tline, line_buffer = line_buffer, line\n\t\t\t\tif line.startswith ('Type: '):\n\t\t\t\t\tsubtag_type = line.split (' ')[1]\n\t\t\t\t\tdeprecated = False\n\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tsubtag_type",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tsubtag_type = line.split (' ')[1]\n\t\t\t\t\tdeprecated = False\n\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):\n\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdeprecated",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdeprecated = False\n\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):\n\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\thas_preferred_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\thas_preferred_value = False\n\t\t\t\telif line.startswith ('Subtag: ') or line.startswith ('Tag: '):\n\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tsubtag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tsubtag = line.split (' ')[1]\n\t\t\t\t\tif subtag_type == 'grandfathered':\n\t\t\t\t\t\tself.grandfathered.add (subtag.lower ())\n\t\t\t\telif line.startswith ('Description: '):\n\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:\n\t\t\t\t\t\tself.names[subtag] += '\\n' + description\n\t\t\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdescription",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdescription = line.split (' ', 1)[1].replace (' (individual language)', '')\n\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:\n\t\t\t\t\t\tself.names[subtag] += '\\n' + description\n\t\t\t\t\telse:\n\t\t\t\t\t\tself.names[subtag] = description\n\t\t\t\telif subtag_type == 'language' or subtag_type == 'grandfathered':\n\t\t\t\t\tif line.startswith ('Scope: '):\n\t\t\t\t\t\tscope = line.split (' ')[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdescription",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdescription = re.sub (' (\\(family\\)|\\((individual |macro)language\\)|languages)$', '',\n\t\t\t\t\t\t\tdescription)\n\t\t\t\t\tif subtag in self.names:\n\t\t\t\t\t\tself.names[subtag] += '\\n' + description\n\t\t\t\t\telse:\n\t\t\t\t\t\tself.names[subtag] = description\n\t\t\t\telif subtag_type == 'language' or subtag_type == 'grandfathered':\n\t\t\t\t\tif line.startswith ('Scope: '):\n\t\t\t\t\t\tscope = line.split (' ')[1]\n\t\t\t\t\t\tif scope == 'macrolanguage':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.names[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.names[subtag] = description\n\t\t\t\telif subtag_type == 'language' or subtag_type == 'grandfathered':\n\t\t\t\t\tif line.startswith ('Scope: '):\n\t\t\t\t\t\tscope = line.split (' ')[1]\n\t\t\t\t\t\tif scope == 'macrolanguage':\n\t\t\t\t\t\t\tscope = ' [macrolanguage]'\n\t\t\t\t\t\telif scope == 'collection':\n\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tscope = line.split (' ')[1]\n\t\t\t\t\t\tif scope == 'macrolanguage':\n\t\t\t\t\t\t\tscope = ' [macrolanguage]'\n\t\t\t\t\t\telif scope == 'collection':\n\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\t\tscope = ' [macrolanguage]'\n\t\t\t\t\t\telif scope == 'collection':\n\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\t\tscope = ' [collection]'\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.scopes[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.scopes[subtag] = scope\n\t\t\t\t\telif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.\n\t\t\t\t\t\tfor language in line.replace (',', '').split (' ')[2:]:\n\t\t\t\t\t\t\tself._add_macrolanguage (subtag, language)\n\t\t\t\t\telif line.startswith ('Preferred-Value: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.scopes[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.\n\t\t\t\t\t\tfor language in line.replace (',', '').split (' ')[2:]:\n\t\t\t\t\t\t\tself._add_macrolanguage (subtag, language)\n\t\t\t\t\telif line.startswith ('Preferred-Value: '):\n\t\t\t\t\t\t# If a subtag is deprecated in favor of a single replacement subtag,\n\t\t\t\t\t\t# it is either a dialect or synonym of the preferred subtag. Either",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tdeprecated",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tdeprecated = True\n\t\t\t\t\telif deprecated and line.startswith ('Comments: see '):\n\t\t\t\t\t\t# If a subtag is split into multiple replacement subtags,\n\t\t\t\t\t\t# it essentially represents a macrolanguage.\n\t\t\t\t\t\tfor language in line.replace (',', '').split (' ')[2:]:\n\t\t\t\t\t\t\tself._add_macrolanguage (subtag, language)\n\t\t\t\t\telif line.startswith ('Preferred-Value: '):\n\t\t\t\t\t\t# If a subtag is deprecated in favor of a single replacement subtag,\n\t\t\t\t\t\t# it is either a dialect or synonym of the preferred subtag. Either\n\t\t\t\t\t\t# way, it is close enough to the truth to consider the replacement",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\thas_preferred_value",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\thas_preferred_value = True\n\t\t\t\t\t\tmacrolanguage = line.split (' ')[1]\n\t\t\t\t\t\tself._add_macrolanguage (macrolanguage, subtag)\n\t\t\t\t\telif not has_preferred_value and line.startswith ('Macrolanguage: '):\n\t\t\t\t\t\tself._add_macrolanguage (line.split (' ')[1], subtag)\n\t\t\t\telif subtag_type == 'variant':\n\t\t\t\t\tif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\telif line.startswith ('Prefix: '):\n\t\t\t\t\t\tself.prefixes[subtag].add (line.split (' ')[1])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tmacrolanguage",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tmacrolanguage = line.split (' ')[1]\n\t\t\t\t\t\tself._add_macrolanguage (macrolanguage, subtag)\n\t\t\t\t\telif not has_preferred_value and line.startswith ('Macrolanguage: '):\n\t\t\t\t\t\tself._add_macrolanguage (line.split (' ')[1], subtag)\n\t\t\t\telif subtag_type == 'variant':\n\t\t\t\t\tif line.startswith ('Deprecated: '):\n\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\telif line.startswith ('Prefix: '):\n\t\t\t\t\t\tself.prefixes[subtag].add (line.split (' ')[1])\n\t\t\t\telif line.startswith ('File-Date: '):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\t\tself.scopes[subtag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\t\tself.scopes[subtag] = ' (retired code)' + self.scopes.get (subtag, '')\n\t\t\t\t\telif line.startswith ('Prefix: '):\n\t\t\t\t\t\tself.prefixes[subtag].add (line.split (' ')[1])\n\t\t\t\telif line.startswith ('File-Date: '):\n\t\t\t\t\tself.header = line\n\t\texpect (self.header)\n\tdef _add_macrolanguage (self, macrolanguage, language):\n\t\tglobal ot\n\t\tif language not in ot.from_bcp_47:\n\t\t\tfor l in self.macrolanguages.get (language, set ()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tself.header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tself.header = line\n\t\texpect (self.header)\n\tdef _add_macrolanguage (self, macrolanguage, language):\n\t\tglobal ot\n\t\tif language not in ot.from_bcp_47:\n\t\t\tfor l in self.macrolanguages.get (language, set ()):\n\t\t\t\tself._add_macrolanguage (macrolanguage, l)\n\t\tif macrolanguage not in ot.from_bcp_47:\n\t\t\tfor ls in list (self.macrolanguages.values ()):\n\t\t\t\tif macrolanguage in ls:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tinverted",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tinverted = collections.defaultdict (list)\n\t\tfor macrolanguage, languages in self.macrolanguages.items ():\n\t\t\tfor language in languages:\n\t\t\t\tinverted[language].append (macrolanguage)\n\t\tfor language, macrolanguages in inverted.items ():\n\t\t\tif len (macrolanguages) > 1:\n\t\t\t\tmacrolanguages.sort (key=lambda ml: len (self.macrolanguages[ml]))\n\t\t\t\tbiggest_macrolanguage = macrolanguages.pop ()\n\t\t\t\tfor macrolanguage in macrolanguages:\n\t\t\t\t\tself._add_macrolanguage (biggest_macrolanguage, macrolanguage)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tbiggest_macrolanguage",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tbiggest_macrolanguage = macrolanguages.pop ()\n\t\t\t\tfor macrolanguage in macrolanguages:\n\t\t\t\t\tself._add_macrolanguage (biggest_macrolanguage, macrolanguage)\n\tdef _get_name_piece (self, subtag):\n\t\t\"\"\"Return the first name of a subtag plus its scope suffix.\n\t\tArgs:\n\t\t\tsubtag (str): A BCP 47 subtag.\n\t\tReturns:\n\t\t\tThe name form of ``subtag``.\n\t\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tname",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tname = self._get_name_piece (lt.language)\n\t\tif lt.script:\n\t\t\tname += '; ' + self._get_name_piece (lt.script.title ())\n\t\tif lt.region:\n\t\t\tname += '; ' + self._get_name_piece (lt.region.upper ())\n\t\tif lt.variant:\n\t\t\tname += '; ' + self._get_name_piece (lt.variant)\n\t\treturn name\nbcp_47 = BCP47Parser ()\not.parse (sys.argv[1])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47 = BCP47Parser ()\not.parse (sys.argv[1])\nbcp_47.parse (sys.argv[2])\not.add_language ('ary', 'MOR')\not.add_language ('ath', 'ATH')\not.add_language ('bai', 'BML')\not.ranks['BAL'] = ot.ranks['KAR'] + 1\not.add_language ('ber', 'BBR')\not.remove_language_ot ('PGR')\not.add_language ('el-polyton', 'PGR')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['BAL']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['BAL'] = ot.ranks['KAR'] + 1\not.add_language ('ber', 'BBR')\not.remove_language_ot ('PGR')\not.add_language ('el-polyton', 'PGR')\nbcp_47.macrolanguages['et'] = {'ekk'}\nbcp_47.names['flm'] = 'Falam Chin'\nbcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['et']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['et'] = {'ekk'}\nbcp_47.names['flm'] = 'Falam Chin'\nbcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.names['flm']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.names['flm'] = 'Falam Chin'\nbcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.scopes['flm']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.scopes['flm'] = ' (retired code)'\nbcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')\not.add_language ('und-Geok', 'KGE')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['flm']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['flm'] = {'cfm'}\not.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')\not.add_language ('und-Geok', 'KGE')\nbcp_47.macrolanguages['id'] = {'in'}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['FNE']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['FNE'] = ot.ranks['TNE'] + 1\not.add_language ('und-fonipa', 'IPPH')\not.add_language ('und-fonnapa', 'APPH')\not.remove_language_ot ('IRT')\not.add_language ('ga-Latg', 'IRT')\not.add_language ('hy-arevmda', 'HYE')\not.remove_language_ot ('KGE')\not.add_language ('und-Geok', 'KGE')\nbcp_47.macrolanguages['id'] = {'in'}\nbcp_47.macrolanguages['ijo'] = {'ijc'}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['id']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['id'] = {'in'}\nbcp_47.macrolanguages['ijo'] = {'ijc'}\not.add_language ('kht', 'KHN')\not.names['KHN'] = ot.names['KHT'] + ' (Microsoft fonts)'\not.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['ijo']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['ijo'] = {'ijc'}\not.add_language ('kht', 'KHN')\not.names['KHN'] = ot.names['KHT'] + ' (Microsoft fonts)'\not.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.names['KHN']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.names['KHN'] = ot.names['KHT'] + ' (Microsoft fonts)'\not.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['KHN']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['KHN'] = ot.ranks['KHT'] + 1\not.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks['LCR']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks['LCR'] = ot.ranks['MCR'] + 1\not.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.names['MAL']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.names['MAL'] = 'Malayalam Traditional'\not.ranks['MLR'] += 1\nbcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')\not.add_language ('qub', 'QWH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.names['mhv']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.names['mhv'] = 'Arakanese'\nbcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')\not.add_language ('qub', 'QWH')\not.add_language ('qud', 'QVI')\not.add_language ('qug', 'QVI')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.scopes['mhv']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.scopes['mhv'] = ' (retired code)'\not.add_language ('mnw-TH', 'MONT')\not.add_language ('no', 'NOR')\not.add_language ('oc-provenc', 'PRO')\not.remove_language_ot ('QUZ')\not.add_language ('qu', 'QUZ')\not.add_language ('qub', 'QWH')\not.add_language ('qud', 'QVI')\not.add_language ('qug', 'QVI')\not.add_language ('qul', 'QUH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.names['xst']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.names['xst'] = \"Silt'e\"\nbcp_47.scopes['xst'] = ' (retired code)'\nbcp_47.macrolanguages['xst'] = {'stv', 'wle'}\not.add_language ('xwo', 'TOD')\not.remove_language_ot ('ZHH')\not.remove_language_ot ('ZHP')\not.remove_language_ot ('ZHT')\not.remove_language_ot ('ZHTM')\nbcp_47.macrolanguages['zh'].remove ('lzh')\nbcp_47.macrolanguages['zh'].remove ('yue')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.scopes['xst']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.scopes['xst'] = ' (retired code)'\nbcp_47.macrolanguages['xst'] = {'stv', 'wle'}\not.add_language ('xwo', 'TOD')\not.remove_language_ot ('ZHH')\not.remove_language_ot ('ZHP')\not.remove_language_ot ('ZHT')\not.remove_language_ot ('ZHTM')\nbcp_47.macrolanguages['zh'].remove ('lzh')\nbcp_47.macrolanguages['zh'].remove ('yue')\not.add_language ('zh-Hant-MO', 'ZHH')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['xst']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['xst'] = {'stv', 'wle'}\not.add_language ('xwo', 'TOD')\not.remove_language_ot ('ZHH')\not.remove_language_ot ('ZHP')\not.remove_language_ot ('ZHT')\not.remove_language_ot ('ZHTM')\nbcp_47.macrolanguages['zh'].remove ('lzh')\nbcp_47.macrolanguages['zh'].remove ('yue')\not.add_language ('zh-Hant-MO', 'ZHH')\not.add_language ('zh-Hant-MO', 'ZHTM')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "bcp_47.macrolanguages['zom']",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "bcp_47.macrolanguages['zom'] = {'yos'}\ndef rank_delta (bcp_47, ot):\n\t\"\"\"Return a delta to apply to a BCP 47 tag's rank.\n\tMost OpenType tags have a constant rank, but a few have ranks that\n\tdepend on the BCP 47 tag.\n\tArgs:\n\t\tbcp_47 (str): A BCP 47 tag.\n\t\tot (str): An OpenType tag to.\n\tReturns:\n\t\tA number to add to ``ot``'s rank when sorting ``bcp_47``'s",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "disambiguation",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "disambiguation = {\n\t'ALT': 'alt',\n\t'ARK': 'rki',\n\t'ATH': 'ath',\n\t'BHI': 'bhb',\n\t'BLN': 'bjt',\n\t'BTI': 'beb',\n\t'CCHN': 'cco',\n\t'CMR': 'swb',\n\t'CPP': 'crp',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.names[DEFAULT_LANGUAGE_SYSTEM]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.names[DEFAULT_LANGUAGE_SYSTEM] = '*/'\not.ranks[DEFAULT_LANGUAGE_SYSTEM] = max (ot.ranks.values ()) + 1\nfor tricky_ot_tag in filter (lambda tag: re.match ('[A-Z]{3}$', tag), ot.names):\n\tpossible_bcp_47_tag = tricky_ot_tag.lower ()\n\tif possible_bcp_47_tag in bcp_47.names and not ot.from_bcp_47[possible_bcp_47_tag]:\n\t\tot.add_language (possible_bcp_47_tag, DEFAULT_LANGUAGE_SYSTEM)\n\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ot.ranks[DEFAULT_LANGUAGE_SYSTEM]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "ot.ranks[DEFAULT_LANGUAGE_SYSTEM] = max (ot.ranks.values ()) + 1\nfor tricky_ot_tag in filter (lambda tag: re.match ('[A-Z]{3}$', tag), ot.names):\n\tpossible_bcp_47_tag = tricky_ot_tag.lower ()\n\tif possible_bcp_47_tag in bcp_47.names and not ot.from_bcp_47[possible_bcp_47_tag]:\n\t\tot.add_language (possible_bcp_47_tag, DEFAULT_LANGUAGE_SYSTEM)\n\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')\nprint (' * The following table is generated by running:')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\tpossible_bcp_47_tag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\tpossible_bcp_47_tag = tricky_ot_tag.lower ()\n\tif possible_bcp_47_tag in bcp_47.names and not ot.from_bcp_47[possible_bcp_47_tag]:\n\t\tot.add_language (possible_bcp_47_tag, DEFAULT_LANGUAGE_SYSTEM)\n\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')\nprint (' * The following table is generated by running:')\nprint (' *')\nprint (' *   %s languagetags language-subtag-registry' % sys.argv[0])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tbcp_47.macrolanguages[possible_bcp_47_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tbcp_47.macrolanguages[possible_bcp_47_tag] = set ()\not.sort_languages ()\nprint ('/* == Start of generated table == */')\nprint ('/*')\nprint (' * The following table is generated by running:')\nprint (' *')\nprint (' *   %s languagetags language-subtag-registry' % sys.argv[0])\nprint (' *')\nprint (' * on files with these headers:')\nprint (' *')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tcommented_out",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tcommented_out = same_tag (language, tags)\n\t\tfor i, tag in enumerate (tags, start=1):\n\t\t\tprint ('%s{%s,\\t%s},' % ('/*' if commented_out else '  ', hb_tag (language), hb_tag (tag)), end='')\n\t\t\tif commented_out:\n\t\t\t\tprint ('*/', end='')\n\t\t\tprint ('\\t/* ', end='')\n\t\t\tbcp_47_name = bcp_47.names.get (language, '')\n\t\t\tbcp_47_name_candidates = bcp_47_name.split ('\\n')\n\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tbcp_47_name",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tbcp_47_name = bcp_47.names.get (language, '')\n\t\t\tbcp_47_name_candidates = bcp_47_name.split ('\\n')\n\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tbcp_47_name_candidates",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tbcp_47_name_candidates = bcp_47_name.split ('\\n')\n\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tot_name",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tot_name = ot.names[tag]\n\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:\n\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tscope",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tscope = bcp_47.scopes.get (language, '')\n\t\t\tif tag == DEFAULT_LANGUAGE_SYSTEM:\n\t\t\t\twrite (f'{bcp_47_name_candidates[0]}{scope} != {ot.names[language.upper ()]}')\n\t\t\telse:\n\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:\n\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)\n\t\t\t\t\tbcp_47.names[language] = name",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tintersection",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tintersection = language_name_intersection (bcp_47_name, ot_name)\n\t\t\t\tif not intersection:\n\t\t\t\t\twrite ('%s%s -> %s' % (bcp_47_name_candidates[0], scope, ot_name))\n\t\t\t\telse:\n\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)\n\t\t\t\t\tbcp_47.names[language] = name\n\t\t\t\t\twrite ('%s%s' % (name if len (name) > len (ot_name) else ot_name, scope))\n\t\t\tprint (' */')\n\tprint ('};')\n\tif language_len == 3:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tname",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tname = get_matching_language_name (intersection, bcp_47_name_candidates)\n\t\t\t\t\tbcp_47.names[language] = name\n\t\t\t\t\twrite ('%s%s' % (name if len (name) > len (ot_name) else ot_name, scope))\n\t\t\tprint (' */')\n\tprint ('};')\n\tif language_len == 3:\n\t\tprint ('#endif')\n\tprint ()\nprint ('/**')\nprint (' * hb_ot_tags_from_complex_language:')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tbcp_47.names[language]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tbcp_47.names[language] = name\n\t\t\t\t\twrite ('%s%s' % (name if len (name) > len (ot_name) else ot_name, scope))\n\t\t\tprint (' */')\n\tprint ('};')\n\tif language_len == 3:\n\t\tprint ('#endif')\n\tprint ()\nprint ('/**')\nprint (' * hb_ot_tags_from_complex_language:')\nprint (' * @lang_str: a BCP 47 language tag to convert.')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "complex_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "complex_tags = collections.defaultdict (list)\nfor initial, group in itertools.groupby ((lt_tags for lt_tags in [\n\t\t\t(LanguageTag (language), tags)\n\t\t\tfor language, tags in sorted (ot.from_bcp_47.items (),\n\t\t\t\tkey=lambda i: (-len (i[0]), i[0]))\n\t\t] if lt_tags[0].is_complex ()),\n\t\tkey=lambda lt_tags: lt_tags[0].get_group ()):\n\tcomplex_tags[initial] += group\n# Calculate the min length of the subtags outside the switch\nmin_subtag_len = 100",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "min_subtag_len",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "min_subtag_len = 100\nfor initial, items in sorted (complex_tags.items ()):\n\tif initial != 'und':\n\t\tcontinue\n\tfor lt, tags in items:\n\t\tif not tags:\n\t\t\tcontinue\n\t\tsubtag_len = 0\n\t\tsubtag_len += 1 + len (lt.script) if lt.script is not None else 0\n\t\tsubtag_len += 1 + len (lt.region) if lt.region is not None else 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tsubtag_len",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tsubtag_len = 0\n\t\tsubtag_len += 1 + len (lt.script) if lt.script is not None else 0\n\t\tsubtag_len += 1 + len (lt.region) if lt.region is not None else 0\n\t\tsubtag_len += 1 + len (lt.variant) if lt.variant is not None else 0\n\t\tmin_subtag_len = min(subtag_len, min_subtag_len)\nprint ('  if (limit - lang_str >= %d)' % (min_subtag_len + 2))\nprint ('  {')\nprint (\"    const char *p = strchr (lang_str, '-');\")\nprint (\"    if (!p || p >= limit || limit - p < %i) goto out;\" % min_subtag_len)\nfor initial, items in sorted (complex_tags.items ()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tmin_subtag_len",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tmin_subtag_len = min(subtag_len, min_subtag_len)\nprint ('  if (limit - lang_str >= %d)' % (min_subtag_len + 2))\nprint ('  {')\nprint (\"    const char *p = strchr (lang_str, '-');\")\nprint (\"    if (!p || p >= limit || limit - p < %i) goto out;\" % min_subtag_len)\nfor initial, items in sorted (complex_tags.items ()):\n\tif initial != 'und':\n\t\tcontinue\n\tfor lt, tags in items:\n\t\tif not tags:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tscript = lt.script\n\t\tregion = lt.region\n\t\tif lt.grandfathered:\n\t\t\tprint ('0 == strcmp (&lang_str[1], \"%s\")' % lt.language[1:], end='')\n\t\telse:\n\t\t\tstring_literal = lt.language[1:] + '-'\n\t\t\tif script:\n\t\t\t\tstring_literal += script\n\t\t\t\tscript = None\n\t\t\t\tif region:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\tregion",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\tregion = lt.region\n\t\tif lt.grandfathered:\n\t\t\tprint ('0 == strcmp (&lang_str[1], \"%s\")' % lt.language[1:], end='')\n\t\telse:\n\t\t\tstring_literal = lt.language[1:] + '-'\n\t\t\tif script:\n\t\t\t\tstring_literal += script\n\t\t\t\tscript = None\n\t\t\t\tif region:\n\t\t\t\t\tstring_literal += '-' + region",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tstring_literal",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tstring_literal = lt.language[1:] + '-'\n\t\t\tif script:\n\t\t\t\tstring_literal += script\n\t\t\t\tscript = None\n\t\t\t\tif region:\n\t\t\t\t\tstring_literal += '-' + region\n\t\t\t\t\tregion = None\n\t\t\tif string_literal[-1] == '-':\n\t\t\t\tprint ('0 == strncmp (&lang_str[1], \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tscript = None\n\t\t\t\tif region:\n\t\t\t\t\tstring_literal += '-' + region\n\t\t\t\t\tregion = None\n\t\t\tif string_literal[-1] == '-':\n\t\t\t\tprint ('0 == strncmp (&lang_str[1], \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\t\telse:\n\t\t\t\tprint ('lang_matches (&lang_str[1], limit, \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\tprint_subtag_matches (script, 'lang_str', True)\n\t\tprint_subtag_matches (region, 'lang_str', True)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tregion",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tregion = None\n\t\t\tif string_literal[-1] == '-':\n\t\t\t\tprint ('0 == strncmp (&lang_str[1], \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\t\telse:\n\t\t\t\tprint ('lang_matches (&lang_str[1], limit, \"%s\", %i)' % (string_literal, len (string_literal)), end='')\n\t\tprint_subtag_matches (script, 'lang_str', True)\n\t\tprint_subtag_matches (region, 'lang_str', True)\n\t\tprint_subtag_matches (lt.variant, 'lang_str', True)\n\t\tprint (')')\n\t\tprint ('    {')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tprimary_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tprimary_tags = []\n\t\telse:\n\t\t\tprimary_tags = list (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot.from_bcp_47.get (t)[0] == ot_tag)\n\t\tif len (primary_tags) == 1:\n\t\t\texpect (ot_tag not in disambiguation, 'unnecessary disambiguation for OT tag: %s' % ot_tag)\n\t\t\tif '-' in primary_tags[0]:\n\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\t\telse:\n\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tprimary_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tprimary_tags = list (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot.from_bcp_47.get (t)[0] == ot_tag)\n\t\tif len (primary_tags) == 1:\n\t\t\texpect (ot_tag not in disambiguation, 'unnecessary disambiguation for OT tag: %s' % ot_tag)\n\t\t\tif '-' in primary_tags[0]:\n\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\t\telse:\n\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:\n\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tdisambiguation[ot_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\t\telse:\n\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:\n\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:\n\t\t\texpect (ot_tag not in disambiguation, 'There is no possible valid disambiguation for %s' % ot_tag)\n\t\telse:\n\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tfirst_tag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tfirst_tag = sorted (t for t in bcp_47_tags if t not in bcp_47.grandfathered and ot_tag in ot.from_bcp_47.get (t))[0]\n\t\t\t\tif primary_tags[0] != first_tag:\n\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:\n\t\t\texpect (ot_tag not in disambiguation, 'There is no possible valid disambiguation for %s' % ot_tag)\n\t\telse:\n\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:\n\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\t\tdisambiguation[ot_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\t\tdisambiguation[ot_tag] = primary_tags[0]\n\t\telif len (primary_tags) == 0:\n\t\t\texpect (ot_tag not in disambiguation, 'There is no possible valid disambiguation for %s' % ot_tag)\n\t\telse:\n\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:\n\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:\n\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\toriginal_languages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\toriginal_languages = [t for t in primary_tags if t in ot.from_bcp_47_uninherited and 'retired code' not in bcp_47.scopes.get (t, '')]\n\t\t\tif len (original_languages) == 1:\n\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:\n\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = original_languages\n\t\t\telse:\n\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = [t for t in primary_tags if bcp_47.scopes.get (t) == ' [macrolanguage]']\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,\n\t\t\t\t\t\t'%s is not a valid disambiguation for %s' % (disambiguation[ot_tag], ot_tag))\n\t\t\telif ot_tag not in disambiguation:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = list (t for t in primary_tags if bcp_47.scopes.get (t) == ' [collection]')\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,\n\t\t\t\t\t\t'%s is not a valid disambiguation for %s' % (disambiguation[ot_tag], ot_tag))\n\t\t\telif ot_tag not in disambiguation:\n\t\t\t\tdisambiguation[ot_tag] = macrolanguages[0]\n\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmacrolanguages",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tmacrolanguages = list (t for t in primary_tags if 'retired code' not in bcp_47.scopes.get (t, ''))\n\t\t\tif len (macrolanguages) != 1:\n\t\t\t\texpect (ot_tag in disambiguation, 'ambiguous OT tag: %s %s' % (ot_tag, str (macrolanguages)))\n\t\t\t\texpect (disambiguation[ot_tag] in bcp_47_tags,\n\t\t\t\t\t\t'%s is not a valid disambiguation for %s' % (disambiguation[ot_tag], ot_tag))\n\t\t\telif ot_tag not in disambiguation:\n\t\t\t\tdisambiguation[ot_tag] = macrolanguages[0]\n\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))\n\t\t\tif different_bcp_47_tags and disambiguation[ot_tag] == different_bcp_47_tags[0] and '-' not in disambiguation[ot_tag]:\n\t\t\t\tdel disambiguation[ot_tag]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tdisambiguation[ot_tag]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\t\tdisambiguation[ot_tag] = macrolanguages[0]\n\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))\n\t\t\tif different_bcp_47_tags and disambiguation[ot_tag] == different_bcp_47_tags[0] and '-' not in disambiguation[ot_tag]:\n\t\t\t\tdel disambiguation[ot_tag]\n\tfor ot_tag in disambiguation.keys ():\n\t\texpect (ot_tag in ot.to_bcp_47, 'unknown OT tag: %s' % ot_tag)\nverify_disambiguation_dict ()\nfor ot_tag, bcp_47_tag in sorted (disambiguation.items ()):\n\twrite ('  case %s:  /* %s */' % (hb_tag (ot_tag), ot.names[ot_tag]))\n\tprint ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tdifferent_bcp_47_tags",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "peekOfCode": "\t\t\tdifferent_bcp_47_tags = sorted (t for t in bcp_47_tags if not same_tag (t, ot.from_bcp_47.get (t)))\n\t\t\tif different_bcp_47_tags and disambiguation[ot_tag] == different_bcp_47_tags[0] and '-' not in disambiguation[ot_tag]:\n\t\t\t\tdel disambiguation[ot_tag]\n\tfor ot_tag in disambiguation.keys ():\n\t\texpect (ot_tag in ot.to_bcp_47, 'unknown OT tag: %s' % ot_tag)\nverify_disambiguation_dict ()\nfor ot_tag, bcp_47_tag in sorted (disambiguation.items ()):\n\twrite ('  case %s:  /* %s */' % (hb_tag (ot_tag), ot.names[ot_tag]))\n\tprint ()\n\twrite ('    return hb_language_from_string (\\\"%s\\\", -1);  /* %s */' % (bcp_47_tag, bcp_47.get_name (LanguageTag (bcp_47_tag))))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-tag-table",
        "documentation": {}
    },
    {
        "label": "ucdxml",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ucdxml = packTab.ucdxml.load_ucdxml(sys.argv[1])\nucd = packTab.ucdxml.ucdxml_get_repertoire(ucdxml)\nhb_common_h = 'hb-common.h' if len (sys.argv) < 3 else sys.argv[2]\nlogging.info('Preparing data tables...')\n# This is how the data is encoded:\n#\n# General_Category (gc), Canonical_Combining_Class (ccc),\n# and Script (sc) are encoded as integers.\n#\n# Mirroring character (bmg) is encoded as difference from",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "ucd",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ucd = packTab.ucdxml.ucdxml_get_repertoire(ucdxml)\nhb_common_h = 'hb-common.h' if len (sys.argv) < 3 else sys.argv[2]\nlogging.info('Preparing data tables...')\n# This is how the data is encoded:\n#\n# General_Category (gc), Canonical_Combining_Class (ccc),\n# and Script (sc) are encoded as integers.\n#\n# Mirroring character (bmg) is encoded as difference from\n# the original character.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "hb_common_h",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "hb_common_h = 'hb-common.h' if len (sys.argv) < 3 else sys.argv[2]\nlogging.info('Preparing data tables...')\n# This is how the data is encoded:\n#\n# General_Category (gc), Canonical_Combining_Class (ccc),\n# and Script (sc) are encoded as integers.\n#\n# Mirroring character (bmg) is encoded as difference from\n# the original character.\n#",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "gc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "gc = [u['gc'] for u in ucd]\nccc = [int(u['ccc']) for u in ucd]\nbmg = [int(v, 16) - int(u) if v else 0 for u,v in enumerate(u['bmg'] for u in ucd)]\nsc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "ccc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ccc = [int(u['ccc']) for u in ucd]\nbmg = [int(v, 16) - int(u) if v else 0 for u,v in enumerate(u['bmg'] for u in ucd)]\nsc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "bmg",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "bmg = [int(v, 16) - int(u) if v else 0 for u,v in enumerate(u['bmg'] for u in ucd)]\nsc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc = [u['sc'] for u in ucd]\n# Prepare Compose / Decompose data\n#\n# This code is very dense.  See hb_ucd_compose() / hb_ucd_decompose() for the logic.\ndm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm = {i:tuple(int(v, 16) for v in u['dm'].split()) for i,u in enumerate(ucd)\n      if u['dm'] != '#' and u['dt'] == 'can' and not (0xAC00 <= i < 0xAC00+11172)}\nce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)\ndm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "ce",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "ce = {i for i,u in enumerate(ucd) if u['Comp_Ex'] == 'Y'}\nassert not any(v for v in dm.values() if len(v) not in (1,2))\ndm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)\ndm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1 = sorted(set(v for v in dm.values() if len(v) == 1))\nassert all((v[0] >> 16) in (0,2) for v in dm1)\ndm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1_p0_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1_p0_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 0]\ndm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1_p2_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1_p2_array = ['0x%04Xu' % (v[0] & 0xFFFF) for v in dm1 if (v[0] >> 16) == 2]\ndm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm1_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm1_order = {v:i+1 for i,v in enumerate(dm1)}\ndm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2 = sorted((v+(i if i not in ce and not ccc[i] else 0,), v)\n             for i,v in dm.items() if len(v) == 2)\nfilt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "filt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "filt = lambda v: ((v[0] & 0xFFFFF800) == 0x0000 and\n                  (v[1] & 0xFFFFFF80) == 0x0300 and\n                  (v[2] & 0xFFF0C000) == 0x0000)\ndm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u32_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u32_array = [v for v in dm2 if filt(v[0])]\ndm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u64_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u64_array = [v for v in dm2 if not filt(v[0])]\nassert dm2_u32_array + dm2_u64_array == dm2\ndm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u32_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u32_array = [\"HB_CODEPOINT_ENCODE3_11_7_14 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u32_array]\ndm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_u64_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_u64_array = [\"HB_CODEPOINT_ENCODE3 (0x%04Xu, 0x%04Xu, 0x%04Xu)\" % v[0] for v in dm2_u64_array]\nl = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "l",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "l = 1 + len(dm1_p0_array) + len(dm1_p2_array)\ndm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm2_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm2_order = {v[1]:i+l for i,v in enumerate(dm2)}\ndm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):\n    gc_order[i] = v",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "dm_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "dm_order = {None: 0}\ndm_order.update(dm1_order)\ndm_order.update(dm2_order)\n# Prepare General_Category / Script mapping arrays\ngc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):\n    gc_order[i] = v\n    gc_order[v] = i",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "gc_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "gc_order = dict()\nfor i,v in enumerate(('Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu',\n                      'Mc', 'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf',\n                      'Pi', 'Po', 'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',)):\n    gc_order[i] = v\n    gc_order[v] = i\nsc_order = dict()\nsc_array = []\nsc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc_order = dict()\nsc_array = []\nsc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):\n    m = sc_re.search (line)\n    if not m: continue\n    name = m.group(1)\n    tag = ''.join(m.group(i) for i in range(2, 6))\n    i = len(sc_array)\n    sc_order[tag] = i",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc_array",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc_array = []\nsc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):\n    m = sc_re.search (line)\n    if not m: continue\n    name = m.group(1)\n    tag = ''.join(m.group(i) for i in range(2, 6))\n    i = len(sc_array)\n    sc_order[tag] = i\n    sc_order[i] = tag",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "sc_re",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "sc_re = re.compile(r\"\\b(HB_SCRIPT_[_A-Z]*).*HB_TAG [(]'(.)','(.)','(.)','(.)'[)]\")\nfor line in open(hb_common_h):\n    m = sc_re.search (line)\n    if not m: continue\n    name = m.group(1)\n    tag = ''.join(m.group(i) for i in range(2, 6))\n    i = len(sc_array)\n    sc_order[tag] = i\n    sc_order[i] = tag\n    sc_array.append(name)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "DEFAULT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "DEFAULT = 'DEFAULT'\nCOMPACT = 'COMPACT'\nSLOPPY  = 'SLOPPY'\ncompression_level = {\n    DEFAULT: 5,\n    COMPACT: 9,\n    SLOPPY:  9,\n}\nlogging.info('Generating output...')\nprint(\"/* == Start of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "COMPACT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "COMPACT = 'COMPACT'\nSLOPPY  = 'SLOPPY'\ncompression_level = {\n    DEFAULT: 5,\n    COMPACT: 9,\n    SLOPPY:  9,\n}\nlogging.info('Generating output...')\nprint(\"/* == Start of generated table == */\")\nprint(\"/*\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "compression_level",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "compression_level = {\n    DEFAULT: 5,\n    COMPACT: 9,\n    SLOPPY:  9,\n}\nlogging.info('Generating output...')\nprint(\"/* == Start of generated table == */\")\nprint(\"/*\")\nprint(\" * The following table is generated by running:\")\nprint(\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "code",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "code = packTab.Code('_hb_ucd')\nsc_array, _ = code.addArray('hb_script_t', 'sc_map', sc_array)\ndm1_p0_array, _ = code.addArray('uint16_t', 'dm1_p0_map', dm1_p0_array)\ndm1_p2_array, _ = code.addArray('uint16_t', 'dm1_p2_map', dm1_p2_array)\ndm2_u32_array, _ = code.addArray('uint32_t', 'dm2_u32_map', dm2_u32_array)\ndm2_u64_array, _ = code.addArray('uint64_t', 'dm2_u64_map', dm2_u64_array)\ncode.print_c(linkage='static inline')\ndatasets = [\n    ('gc', gc, 'Cn', gc_order),\n    ('ccc', ccc, 0, None),",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "datasets",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "peekOfCode": "datasets = [\n    ('gc', gc, 'Cn', gc_order),\n    ('ccc', ccc, 0, None),\n    ('bmg', bmg, 0, None),\n    ('sc', sc, 'Zzzz', sc_order),\n    ('dm', dm, None, dm_order),\n]\n# Write main data\nfor step in (DEFAULT, COMPACT, SLOPPY):\n    compression = compression_level[step]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-ucd-table",
        "documentation": {}
    },
    {
        "label": "PropertyValue",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "class PropertyValue(object):\n\tdef __init__(self, name_):\n\t\tself.name = name_\n\tdef __str__(self):\n\t\treturn self.name\n\tdef __eq__(self, other):\n\t\treturn self.name == (other if isinstance(other, str) else other.name)\n\tdef __ne__(self, other):\n\t\treturn not (self == other)\n\tdef __hash__(self):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_BASE",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,\n\t\t\tVowel_Independent,\n\t\t\t] or\n\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/484\n\t\tAJT in [jt_C, jt_D, jt_L, jt_R] and UISC != Joiner or\n\t\t(UGC == Lo and UISC in [Avagraha, Bindu, Consonant_Final, Consonant_Medial,\n\t\t\t\t\tConsonant_Subjoined, Vowel, Vowel_Dependent]))\ndef is_BASE_NUM(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_BASE_NUM",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_BASE_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Brahmi_Joining_Number\ndef is_BASE_OTHER(U, UISC, UDI, UGC, AJT):\n\tif UISC == Consonant_Placeholder: return True\n\treturn U in [0x2015, 0x2022, 0x25FB, 0x25FC, 0x25FD, 0x25FE]\ndef is_CGJ(U, UISC, UDI, UGC, AJT):\n\t# Also includes VARIATION_SELECTOR and ZWJ\n\treturn UISC == Joiner or UDI and UGC in [Mc, Me, Mn]\ndef is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_BASE_OTHER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_BASE_OTHER(U, UISC, UDI, UGC, AJT):\n\tif UISC == Consonant_Placeholder: return True\n\treturn U in [0x2015, 0x2022, 0x25FB, 0x25FC, 0x25FD, 0x25FE]\ndef is_CGJ(U, UISC, UDI, UGC, AJT):\n\t# Also includes VARIATION_SELECTOR and ZWJ\n\treturn UISC == Joiner or UDI and UGC in [Mc, Me, Mn]\ndef is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or\n\t\tUISC == Consonant_Succeeding_Repha)\ndef is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CGJ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CGJ(U, UISC, UDI, UGC, AJT):\n\t# Also includes VARIATION_SELECTOR and ZWJ\n\treturn UISC == Joiner or UDI and UGC in [Mc, Me, Mn]\ndef is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or\n\t\tUISC == Consonant_Succeeding_Repha)\ndef is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Syllable_Modifier\ndef is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_FINAL",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_FINAL(U, UISC, UDI, UGC, AJT):\n\treturn ((UISC == Consonant_Final and UGC != Lo) or\n\t\tUISC == Consonant_Succeeding_Repha)\ndef is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Syllable_Modifier\ndef is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.\n\treturn (UISC == Consonant_Medial and UGC != Lo or\n\t\tUISC == Consonant_Initial_Postfixed)\ndef is_CONS_MOD(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_FINAL_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_FINAL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Syllable_Modifier\ndef is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.\n\treturn (UISC == Consonant_Medial and UGC != Lo or\n\t\tUISC == Consonant_Initial_Postfixed)\ndef is_CONS_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Nukta, Gemination_Mark, Consonant_Killer]\ndef is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_MED",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_MED(U, UISC, UDI, UGC, AJT):\n\t# Consonant_Initial_Postfixed is new in Unicode 11; not in the spec.\n\treturn (UISC == Consonant_Medial and UGC != Lo or\n\t\tUISC == Consonant_Initial_Postfixed)\ndef is_CONS_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Nukta, Gemination_Mark, Consonant_Killer]\ndef is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo\ndef is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Nukta, Gemination_Mark, Consonant_Killer]\ndef is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo\ndef is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker\ndef is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_SUB",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_SUB(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_Subjoined and UGC != Lo\ndef is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker\ndef is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_CONS_WITH_STACKER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_CONS_WITH_STACKER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Consonant_With_Stacker\ndef is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HALANT",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HALANT(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Virama and not is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT)\ndef is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HALANT_OR_VOWEL_MODIFIER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HALANT_OR_VOWEL_MODIFIER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x0DCA\ndef is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HALANT_NUM",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HALANT_NUM(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Number_Joiner\ndef is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph\ndef is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH_JOINER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH_JOINER(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Joiner\ndef is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH_SEGMENT_BEGIN",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH_SEGMENT_BEGIN(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_Begin\ndef is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_ZWNJ(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_HIEROGLYPH_SEGMENT_END",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_HIEROGLYPH_SEGMENT_END(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Hieroglyph_Segment_End\ndef is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_ZWNJ(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Non_Joiner\ndef is_OTHER(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_INVISIBLE_STACKER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_INVISIBLE_STACKER(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn (UISC == Invisible_Stacker\n\t\tand not is_SAKOT(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_ZWNJ(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Non_Joiner\ndef is_OTHER(U, UISC, UDI, UGC, AJT):\n\t# Also includes BASE_IND and SYM\n\treturn ((UGC == Po or UISC in [Consonant_Dead, Joiner, Modifying_Letter, Other])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_ZWNJ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_ZWNJ(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Non_Joiner\ndef is_OTHER(U, UISC, UDI, UGC, AJT):\n\t# Also includes BASE_IND and SYM\n\treturn ((UGC == Po or UISC in [Consonant_Dead, Joiner, Modifying_Letter, Other])\n\t\tand not is_BASE(U, UISC, UDI, UGC, AJT)\n\t\tand not is_BASE_OTHER(U, UISC, UDI, UGC, AJT)\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t\tand not is_SYM_MOD(U, UISC, UDI, UGC, AJT)\n\t\tand not is_Word_Joiner(U, UISC, UDI, UGC, AJT)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_OTHER",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_OTHER(U, UISC, UDI, UGC, AJT):\n\t# Also includes BASE_IND and SYM\n\treturn ((UGC == Po or UISC in [Consonant_Dead, Joiner, Modifying_Letter, Other])\n\t\tand not is_BASE(U, UISC, UDI, UGC, AJT)\n\t\tand not is_BASE_OTHER(U, UISC, UDI, UGC, AJT)\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t\tand not is_SYM_MOD(U, UISC, UDI, UGC, AJT)\n\t\tand not is_Word_Joiner(U, UISC, UDI, UGC, AJT)\n\t)\ndef is_REPHA(U, UISC, UDI, UGC, AJT):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_REPHA",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_REPHA(U, UISC, UDI, UGC, AJT):\n\treturn UISC in [Consonant_Preceding_Repha, Consonant_Prefixed]\ndef is_SAKOT(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x1A60\ndef is_SYM_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Symbol_Modifier\ndef is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_SAKOT",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_SAKOT(U, UISC, UDI, UGC, AJT):\n\t# Split off of HALANT\n\treturn U == 0x1A60\ndef is_SYM_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Symbol_Modifier\ndef is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])\ndef is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_SYM_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_SYM_MOD(U, UISC, UDI, UGC, AJT):\n\treturn UISC == Symbol_Modifier\ndef is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])\ndef is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or\n\t\tUGC != Lo and UISC == Bindu)\ndef is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_VOWEL",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_VOWEL(U, UISC, UDI, UGC, AJT):\n\treturn (UISC == Pure_Killer or\n\t\tUGC != Lo and UISC in [Vowel, Vowel_Dependent])\ndef is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or\n\t\tUGC != Lo and UISC == Bindu)\ndef is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv\n\treturn (UDI and U not in [0x115F, 0x1160, 0x3164, 0xFFA0, 0x1BCA0, 0x1BCA1, 0x1BCA2, 0x1BCA3]\n\t\tand UISC == Other",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_VOWEL_MOD",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_VOWEL_MOD(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Tone_Mark, Cantillation_Mark, Register_Shifter, Visarga] or\n\t\tUGC != Lo and UISC == Bindu)\ndef is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv\n\treturn (UDI and U not in [0x115F, 0x1160, 0x3164, 0xFFA0, 0x1BCA0, 0x1BCA1, 0x1BCA2, 0x1BCA3]\n\t\tand UISC == Other\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t) or UGC == Cn\nuse_mapping = {",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "is_Word_Joiner",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def is_Word_Joiner(U, UISC, UDI, UGC, AJT):\n\t# Also includes Rsv\n\treturn (UDI and U not in [0x115F, 0x1160, 0x3164, 0xFFA0, 0x1BCA0, 0x1BCA1, 0x1BCA2, 0x1BCA3]\n\t\tand UISC == Other\n\t\tand not is_CGJ(U, UISC, UDI, UGC, AJT)\n\t) or UGC == Cn\nuse_mapping = {\n\t'B':\tis_BASE,\n\t'N':\tis_BASE_NUM,\n\t'GB':\tis_BASE_OTHER,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "map_to_use",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def map_to_use(data):\n\tout = {}\n\titems = use_mapping.items()\n\tfor U, (UISC, UIPC, AJT, UDI, UGC, UBlock, _) in data.items():\n\t\t# Resolve Indic_Syllabic_Category\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x1CE2 <= U <= 0x1CE8: UISC = Cantillation_Mark\n\t\t# Tibetan:\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x0F18 <= U <= 0x0F19 or 0x0F3E <= U <= 0x0F3F: UISC = Vowel_Dependent",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "print_bloc",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "def print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:\n\t\t\tprint (' ' * (20 + (start % 16 * 6)), end='')\n\tnum = 0\n\tassert start % 8 == 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "DISABLED_SCRIPTS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "DISABLED_SCRIPTS = {\n\t'Arabic',\n\t'Lao',\n\t'Samaritan',\n\t'Syriac',\n\t'Thai',\n}\nfiles = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline () for i in range (2)] for j,f in enumerate(files) if j != 4]\nfor j in range(7, 9):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "files = [open (x, encoding='utf-8') for x in sys.argv[1:]]\nheaders = [[f.readline () for i in range (2)] for j,f in enumerate(files) if j != 4]\nfor j in range(7, 9):\n\tfor line in files[j]:\n\t\tline = line.rstrip()\n\t\tif not line:\n\t\t\tbreak\n\t\theaders[j - 1].append(line)\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nunicode_data = [{} for _ in files]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "headers = [[f.readline () for i in range (2)] for j,f in enumerate(files) if j != 4]\nfor j in range(7, 9):\n\tfor line in files[j]:\n\t\tline = line.rstrip()\n\t\tif not line:\n\t\t\tbreak\n\t\theaders[j - 1].append(line)\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nunicode_data = [{} for _ in files]\nvalues = [{} for _ in files]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tline = line.rstrip()\n\t\tif not line:\n\t\t\tbreak\n\t\theaders[j - 1].append(line)\nheaders.append ([\"UnicodeData.txt does not have a header.\"])\nunicode_data = [{} for _ in files]\nvalues = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "unicode_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "unicode_data = [{} for _ in files]\nvalues = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "values = [{} for _ in files]\nfor i, f in enumerate (files):\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336\n\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tt = fields[1 if i not in [2, 4] else 2]\n\t\tif i == 2:\n\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336\n\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':\n\t\t\tt = 'Not_Applicable'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tt = 'jt_' + t\n\t\telif i == 3 and t != 'Default_Ignorable_Code_Point':\n\t\t\tcontinue\n\t\telif i == 7 and t == 'Consonant_Final_Modifier':\n\t\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/336\n\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':\n\t\t\tt = 'Not_Applicable'\n\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tt = 'Syllable_Modifier'\n\t\telif i == 8 and t == 'NA':\n\t\t\tt = 'Not_Applicable'\n\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tt",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tt = 'Not_Applicable'\n\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\ti0",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\ti0 = i if i < 7 else i - 7\n\t\tfor u in range (start, end + 1):\n\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tunicode_data[i0][u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tunicode_data[i0][u] = t\n\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalues[i0][t]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tvalues[i0][t] = values[i0].get (t, 0) + end - start + 1\ndefaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "defaults",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "defaults = ('Other', 'Not_Applicable', 'jt_X', '', 'Cn', 'No_Block', 'Unknown')\n# Merge data into one dict:\nfor i,v in enumerate (defaults):\n\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:\n\t\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tvalues[i][v]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tvalues[i][v] = values[i].get (v, 0) + 1\ncombined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:\n\t\t\t\tcontinue\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "combined = {}\nfor i,d in enumerate (unicode_data):\n\tfor u,v in d.items ():\n\t\tif not u in combined:\n\t\t\tif i >= 4:\n\t\t\t\tcontinue\n\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tcombined[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tcombined[u] = list (defaults)\n\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tcombined[u][i]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tcombined[u][i] = v\ncombined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',\n\t'Bindu',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "combined",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "combined = {k: v for k, v in combined.items() if v[6] not in DISABLED_SCRIPTS}\nproperty_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',\n\t'Bindu',\n\t'Visarga',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "property_names",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "property_names = [\n\t# General_Category\n\t'Cc', 'Cf', 'Cn', 'Co', 'Cs', 'Ll', 'Lm', 'Lo', 'Lt', 'Lu', 'Mc',\n\t'Me', 'Mn', 'Nd', 'Nl', 'No', 'Pc', 'Pd', 'Pe', 'Pf', 'Pi', 'Po',\n\t'Ps', 'Sc', 'Sk', 'Sm', 'So', 'Zl', 'Zp', 'Zs',\n\t# Indic_Syllabic_Category\n\t'Other',\n\t'Bindu',\n\t'Visarga',\n\t'Avagraha',",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tself.name",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tself.name = name_\n\tdef __str__(self):\n\t\treturn self.name\n\tdef __eq__(self, other):\n\t\treturn self.name == (other if isinstance(other, str) else other.name)\n\tdef __ne__(self, other):\n\t\treturn not (self == other)\n\tdef __hash__(self):\n\t\treturn hash(str(self))\nproperty_values = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "property_values",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "property_values = {}\nfor name in property_names:\n\tvalue = PropertyValue(name)\n\tassert value not in property_values\n\tassert value not in globals()\n\tproperty_values[name] = value\nglobals().update(property_values)\ndef is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tvalue",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tvalue = PropertyValue(name)\n\tassert value not in property_values\n\tassert value not in globals()\n\tproperty_values[name] = value\nglobals().update(property_values)\ndef is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,\n\t\t\tVowel_Independent,\n\t\t\t] or",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tproperty_values[name]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tproperty_values[name] = value\nglobals().update(property_values)\ndef is_BASE(U, UISC, UDI, UGC, AJT):\n\treturn (UISC in [Number, Consonant, Consonant_Head_Letter,\n\t\t\tTone_Letter,\n\t\t\tVowel_Independent,\n\t\t\t] or\n\t\t# TODO: https://github.com/MicrosoftDocs/typography-issues/issues/484\n\t\tAJT in [jt_C, jt_D, jt_L, jt_R] and UISC != Joiner or\n\t\t(UGC == Lo and UISC in [Avagraha, Bindu, Consonant_Final, Consonant_Medial,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "use_mapping",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "use_mapping = {\n\t'B':\tis_BASE,\n\t'N':\tis_BASE_NUM,\n\t'GB':\tis_BASE_OTHER,\n\t'CGJ':\tis_CGJ,\n\t'F':\tis_CONS_FINAL,\n\t'FM':\tis_CONS_FINAL_MOD,\n\t'M':\tis_CONS_MED,\n\t'CM':\tis_CONS_MOD,\n\t'SUB':\tis_CONS_SUB,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "use_positions",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "use_positions = {\n\t'F': {\n\t\t'Abv': [Top],\n\t\t'Blw': [Bottom],\n\t\t'Pst': [Right],\n\t},\n\t'M': {\n\t\t'Abv': [Top],\n\t\t'Blw': [Bottom, Bottom_And_Left, Bottom_And_Right],\n\t\t'Pst': [Right],",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tout",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tout = {}\n\titems = use_mapping.items()\n\tfor U, (UISC, UIPC, AJT, UDI, UGC, UBlock, _) in data.items():\n\t\t# Resolve Indic_Syllabic_Category\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x1CE2 <= U <= 0x1CE8: UISC = Cantillation_Mark\n\t\t# Tibetan:\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x0F18 <= U <= 0x0F19 or 0x0F3E <= U <= 0x0F3F: UISC = Vowel_Dependent\n\t\t# TODO: U+1CED should only be allowed after some of",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\titems",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\titems = use_mapping.items()\n\tfor U, (UISC, UIPC, AJT, UDI, UGC, UBlock, _) in data.items():\n\t\t# Resolve Indic_Syllabic_Category\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x1CE2 <= U <= 0x1CE8: UISC = Cantillation_Mark\n\t\t# Tibetan:\n\t\t# TODO: These don't have UISC assigned in Unicode 13.0.0, but have UIPC\n\t\tif 0x0F18 <= U <= 0x0F19 or 0x0F3E <= U <= 0x0F3F: UISC = Vowel_Dependent\n\t\t# TODO: U+1CED should only be allowed after some of\n\t\t# the nasalization marks, maybe only for U+1CE9..U+1CF1.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tvalues = [k for k,v in items if v(U, UISC, UDI, UGC, AJT)]\n\t\tassert len(values) == 1, \"%s %s %s %s %s %s\" % (hex(U), UISC, UDI, UGC, AJT, values)\n\t\tUSE = values[0]\n\t\t# Resolve Indic_Positional_Category\n\t\t# TODO: https://github.com/harfbuzz/harfbuzz/pull/1037\n\t\t#  and https://github.com/harfbuzz/harfbuzz/issues/1631\n\t\tif U in [0x11302, 0x11303, 0x114C1]: UIPC = Top\n\t\tassert (UIPC in [Not_Applicable, Visual_Order_Left] or U == 0x0F7F or\n\t\t\tUSE in use_positions), \"%s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT)\n\t\tpos_mapping = use_positions.get(USE, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tUSE",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tUSE = values[0]\n\t\t# Resolve Indic_Positional_Category\n\t\t# TODO: https://github.com/harfbuzz/harfbuzz/pull/1037\n\t\t#  and https://github.com/harfbuzz/harfbuzz/issues/1631\n\t\tif U in [0x11302, 0x11303, 0x114C1]: UIPC = Top\n\t\tassert (UIPC in [Not_Applicable, Visual_Order_Left] or U == 0x0F7F or\n\t\t\tUSE in use_positions), \"%s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT)\n\t\tpos_mapping = use_positions.get(USE, None)\n\t\tif pos_mapping:\n\t\t\tvalues = [k for k,v in pos_mapping.items() if v and UIPC in v]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tpos_mapping",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tpos_mapping = use_positions.get(USE, None)\n\t\tif pos_mapping:\n\t\t\tvalues = [k for k,v in pos_mapping.items() if v and UIPC in v]\n\t\t\tassert len(values) == 1, \"%s %s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT, values)\n\t\t\tUSE = USE + values[0]\n\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tvalues",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tvalues = [k for k,v in pos_mapping.items() if v and UIPC in v]\n\t\t\tassert len(values) == 1, \"%s %s %s %s %s %s %s %s\" % (hex(U), UIPC, USE, UISC, UDI, UGC, AJT, values)\n\t\t\tUSE = USE + values[0]\n\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\tUSE",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\tUSE = USE + values[0]\n\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   {} IndicSyllabicCategory.txt IndicPositionalCategory.txt ArabicShaping.txt DerivedCoreProperties.txt UnicodeData.txt Blocks.txt Scripts.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\".format (sys.argv[0]))\nprint (\" *\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tout[U]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tout[U] = (USE, UBlock)\n\treturn out\nuse_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   {} IndicSyllabicCategory.txt IndicPositionalCategory.txt ArabicShaping.txt DerivedCoreProperties.txt UnicodeData.txt Blocks.txt Scripts.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\".format (sys.argv[0]))\nprint (\" *\")\nprint (\" * on files with these headers:\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "use_data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "use_data = map_to_use(combined)\nprint (\"/* == Start of generated table == */\")\nprint (\"/*\")\nprint (\" * The following table is generated by running:\")\nprint (\" *\")\nprint (\" *   {} IndicSyllabicCategory.txt IndicPositionalCategory.txt ArabicShaping.txt DerivedCoreProperties.txt UnicodeData.txt Blocks.txt Scripts.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\".format (sys.argv[0]))\nprint (\" *\")\nprint (\" * on files with these headers:\")\nprint (\" *\")\nfor h in headers:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "total",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "total = 0\nused = 0\nlast_block = None\ndef print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "used",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "used = 0\nlast_block = None\ndef print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:\n\t\t\tprint (' ' * (20 + (start % 16 * 6)), end='')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "last_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "last_block = None\ndef print_block (block, start, end, use_data):\n\tglobal total, used, last_block\n\tif block and block != last_block:\n\t\tprint ()\n\t\tprint ()\n\t\tprint (\"  /* %s */\" % block)\n\t\tif start % 16:\n\t\t\tprint (' ' * (20 + (start % 16 * 6)), end='')\n\tnum = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\tnum",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\tnum = 0\n\tassert start % 8 == 0\n\tassert (end+1) % 8 == 0\n\tfor u in range (start, end+1):\n\t\tif u % 16 == 0:\n\t\t\tprint ()\n\t\t\tprint (\"  /* %04X */\" % u, end='')\n\t\tif u in use_data:\n\t\t\tnum += 1\n\t\td = use_data.get (u)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\td = use_data.get (u)\n\t\tif d is not None:\n\t\t\td = d[0]\n\t\telif u in unicode_data[4]:\n\t\t\td = 'O'\n\t\telse:\n\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\td = d[0]\n\t\telif u in unicode_data[4]:\n\t\t\td = 'O'\n\t\telse:\n\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\td = 'O'\n\t\telse:\n\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block\nuu = sorted (use_data.keys ())\nlast = -100000",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\t\td",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\t\td = 'WJ'\n\t\tprint (\"%6s,\" % d, end='')\n\ttotal += end - start + 1\n\tused += num\n\tif block:\n\t\tlast_block = block\nuu = sorted (use_data.keys ())\nlast = -100000\nnum = 0\noffset = 0",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\tlast_block",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\tlast_block = block\nuu = sorted (use_data.keys ())\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "uu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "uu = sorted (use_data.keys ())\nlast = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "last",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "last = -100000\nnum = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "num",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "num = 0\noffset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "offset = 0\nstarts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):\n\tif not v: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "starts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "starts = []\nends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):\n\tif not v: continue\n\tfor suf in v.keys():",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "ends",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "ends = []\nprint ('#pragma GCC diagnostic push')\nprint ('#pragma GCC diagnostic ignored \"-Wunused-macros\"')\nfor k,v in sorted(use_mapping.items()):\n\tif k in use_positions and use_positions[k]: continue\n\tprint (\"#define %s\tUSE(%s)\t/* %s */\" % (k, k, v.__name__[3:]))\nfor k,v in sorted(use_positions.items()):\n\tif not v: continue\n\tfor suf in v.keys():\n\t\ttag = k + suf",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\ttag = k + suf\n\t\tprint (\"#define %s\tUSE(%s)\" % (tag, tag))\nprint ('#pragma GCC diagnostic pop')\nprint (\"\")\nimport packTab\ndata = {u:v[0] for u,v in use_data.items()}\nDEFAULT = 5\nCOMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "data = {u:v[0] for u,v in use_data.items()}\nDEFAULT = 5\nCOMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)\n    print()\n    if compression == DEFAULT:\n        print('#ifndef HB_OPTIMIZE_SIZE')\n    elif compression == COMPACT:\n        print('#else')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "DEFAULT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "DEFAULT = 5\nCOMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)\n    print()\n    if compression == DEFAULT:\n        print('#ifndef HB_OPTIMIZE_SIZE')\n    elif compression == COMPACT:\n        print('#else')\n    else:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "COMPACT",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "COMPACT = 9\nfor compression in (DEFAULT, COMPACT):\n    logging.info('  Compression=%d:' % compression)\n    print()\n    if compression == DEFAULT:\n        print('#ifndef HB_OPTIMIZE_SIZE')\n    elif compression == COMPACT:\n        print('#else')\n    else:\n        assert False",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "\t\ttag",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "peekOfCode": "\t\ttag = k + suf\n\t\tprint (\"#undef %s\" % tag)\nprint ()\nprint ()\nprint (\"#endif /* HB_OT_SHAPER_USE_TABLE_HH */\")\nprint (\"/* == End of generated table == */\")",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-use-table",
        "documentation": {}
    },
    {
        "label": "ConstraintSe",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "class ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"\n\tdef __init__ (self, constraint):\n\t\t# Either a list or a dictionary. As a list of code points, it\n\t\t# represents a prohibited code point sequence. As a dictionary,\n\t\t# it represents a set of prohibited sequences, where each item\n\t\t# represents the set of prohibited sequences starting with the",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "writ",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "def write (s):\n\tsys.stdout.flush ()\n\tsys.stdout.buffer.write (s.encode ('utf-8'))\nimport sys\nif len (sys.argv) != 3:\n\tsys.exit (__doc__)\nwith open (sys.argv[2], encoding='utf-8') as f:\n\tscripts_header = [f.readline () for i in range (2)]\n\tscripts = {}\n\tscript_order = {}",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tscripts_header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tscripts_header = [f.readline () for i in range (2)]\n\tscripts = {}\n\tscript_order = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tscripts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tscripts = {}\n\tscript_order = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tscript_order",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tscript_order = {}\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tfields",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tfields = [x.strip () for x in line.split (';')]\n\t\tif len (fields) == 1:\n\t\t\tcontinue\n\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tuu",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tuu = fields[0].split ('..')\n\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tstart",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tstart = int (uu[0], 16)\n\t\tif len (uu) == 1:\n\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tend = start\n\t\telse:\n\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tend",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tend = int (uu[1], 16)\n\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tscript = fields[1]\n\t\tfor u in range (start, end + 1):\n\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tscripts[u]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tscripts[u] = script\n\t\tif script not in script_order:\n\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"\n\tdef __init__ (self, constraint):\n\t\t# Either a list or a dictionary. As a list of code points, it",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tscript_order[script]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tscript_order[script] = start\nclass ConstraintSet (object):\n\t\"\"\"A set of prohibited code point sequences.\n\tArgs:\n\t\tconstraint (List[int]): A prohibited code point sequence.\n\t\"\"\"\n\tdef __init__ (self, constraint):\n\t\t# Either a list or a dictionary. As a list of code points, it\n\t\t# represents a prohibited code point sequence. As a dictionary,\n\t\t# it represents a set of prohibited sequences, where each item",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tself._c",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tself._c = constraint\n\tdef add (self, constraint):\n\t\t\"\"\"Add a constraint to this set.\"\"\"\n\t\tif not constraint:\n\t\t\treturn\n\t\tfirst = constraint[0]\n\t\trest = constraint[1:]\n\t\tif isinstance (self._c, list):\n\t\t\tif constraint == self._c[:len (constraint)]:\n\t\t\t\tself._c = constraint",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tfirst",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tfirst = constraint[0]\n\t\trest = constraint[1:]\n\t\tif isinstance (self._c, list):\n\t\t\tif constraint == self._c[:len (constraint)]:\n\t\t\t\tself._c = constraint\n\t\t\telif self._c != constraint[:len (self._c)]:\n\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\trest",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\trest = constraint[1:]\n\t\tif isinstance (self._c, list):\n\t\t\tif constraint == self._c[:len (constraint)]:\n\t\t\t\tself._c = constraint\n\t\t\telif self._c != constraint[:len (self._c)]:\n\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tself._c",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\t\tself._c = constraint\n\t\t\telif self._c != constraint[:len (self._c)]:\n\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)\n\t\t\telse:\n\t\t\t\tself._c[first] = ConstraintSet (rest)\n\t@staticmethod\n\tdef _indent (depth):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tself._c",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\t\tself._c = {self._c[0]: ConstraintSet (self._c[1:])}\n\t\tif isinstance (self._c, dict):\n\t\t\tif first in self._c:\n\t\t\t\tself._c[first].add (rest)\n\t\t\telse:\n\t\t\t\tself._c[first] = ConstraintSet (rest)\n\t@staticmethod\n\tdef _indent (depth):\n\t\treturn ('  ' * depth).replace ('        ', '\\t')\n\tdef __str__ (self, index=0, depth=4):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tself._c[first]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\t\tself._c[first] = ConstraintSet (rest)\n\t@staticmethod\n\tdef _indent (depth):\n\t\treturn ('  ' * depth).replace ('        ', '\\t')\n\tdef __str__ (self, index=0, depth=4):\n\t\ts = []\n\t\tindent = self._indent (depth)\n\t\tif isinstance (self._c, list):\n\t\t\tif len (self._c) == 0:\n\t\t\t\tassert index == 2, 'Cannot use `matched` for this constraint; the general case has not been implemented'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\ts",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\ts = []\n\t\tindent = self._indent (depth)\n\t\tif isinstance (self._c, list):\n\t\t\tif len (self._c) == 0:\n\t\t\t\tassert index == 2, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = true;\\n'.format (indent))\n\t\t\telif len (self._c) == 1:\n\t\t\t\tassert index == 1, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = 0x{:04X}u == buffer->cur ({}).codepoint;\\n'.format (indent, next (iter (self._c)), index or ''))\n\t\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tindent",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tindent = self._indent (depth)\n\t\tif isinstance (self._c, list):\n\t\t\tif len (self._c) == 0:\n\t\t\t\tassert index == 2, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = true;\\n'.format (indent))\n\t\t\telif len (self._c) == 1:\n\t\t\t\tassert index == 1, 'Cannot use `matched` for this constraint; the general case has not been implemented'\n\t\t\t\ts.append ('{}matched = 0x{:04X}u == buffer->cur ({}).codepoint;\\n'.format (indent, next (iter (self._c)), index or ''))\n\t\t\telse:\n\t\t\t\ts.append ('{}if (0x{:04X}u == buffer->cur ({}).codepoint &&\\n'.format (indent, self._c[0], index or ''))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tcases",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tcases = collections.defaultdict (set)\n\t\t\tfor first, rest in sorted (self._c.items ()):\n\t\t\t\tcases[rest.__str__ (index + 1, depth + 2)].add (first)\n\t\t\tfor body, labels in sorted (cases.items (), key=lambda b_ls: sorted (b_ls[1])[0]):\n\t\t\t\tfor i, cp in enumerate (sorted (labels)):\n\t\t\t\t\tif i % 4 == 0:\n\t\t\t\t\t\ts.append (self._indent (depth + 1))\n\t\t\t\t\telse:\n\t\t\t\t\t\ts.append (' ')\n\t\t\t\t\ts.append ('case 0x{:04X}u:{}'.format (cp, '\\n' if i % 4 == 3 else ''))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "constraints",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "constraints = {}\nwith open (sys.argv[1], encoding='utf-8') as f:\n\tconstraints_header = []\n\twhile True:\n\t\tline = f.readline ().strip ()\n\t\tif line == '#':\n\t\t\tbreak\n\t\tconstraints_header.append(line)\n\tfor line in f:\n\t\tj = line.find ('#')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\tconstraints_header",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\tconstraints_header = []\n\twhile True:\n\t\tline = f.readline ().strip ()\n\t\tif line == '#':\n\t\t\tbreak\n\t\tconstraints_header.append(line)\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tline = f.readline ().strip ()\n\t\tif line == '#':\n\t\t\tbreak\n\t\tconstraints_header.append(line)\n\tfor line in f:\n\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tj",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tj = line.find ('#')\n\t\tif j >= 0:\n\t\t\tline = line[:j]\n\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue\n\t\tassert 2 <= len (constraint), 'Prohibited sequence is too short: {}'.format (constraint)\n\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tline",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tline = line[:j]\n\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue\n\t\tassert 2 <= len (constraint), 'Prohibited sequence is too short: {}'.format (constraint)\n\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:\n\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tconstraint",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tconstraint = [int (cp, 16) for cp in line.split (';')[0].split ()]\n\t\tif not constraint: continue\n\t\tassert 2 <= len (constraint), 'Prohibited sequence is too short: {}'.format (constraint)\n\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:\n\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'\nprint ('/* == Start of generated functions == */')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\tscript",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\tscript = scripts[constraint[0]]\n\t\tif script in constraints:\n\t\t\tconstraints[script].add (constraint)\n\t\telse:\n\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'\nprint ('/* == Start of generated functions == */')\nprint ('/*')\nprint (' * The following functions are generated by running:')\nprint (' *')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "\t\t\tconstraints[script]",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "peekOfCode": "\t\t\tconstraints[script] = ConstraintSet (constraint)\n\t\tassert constraints, 'No constraints found'\nprint ('/* == Start of generated functions == */')\nprint ('/*')\nprint (' * The following functions are generated by running:')\nprint (' *')\nprint (' *   %s ms-use/IndicShapingInvalidCluster.txt Scripts.txt' % sys.argv[0])\nprint (' *')\nprint (' * on files with these headers:')\nprint (' *')",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.gen-vowel-constraints",
        "documentation": {}
    },
    {
        "label": "move_to_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def move_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.move_to(to_x, to_y)\ndef line_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.line_to(to_x, to_y)\ndef cubic_to_f(\n    funcs,\n    draw_data,\n    st,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "line_to_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def line_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.line_to(to_x, to_y)\ndef cubic_to_f(\n    funcs,\n    draw_data,\n    st,\n    control1_x,\n    control1_y,\n    control2_x,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "cubic_to_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def cubic_to_f(\n    funcs,\n    draw_data,\n    st,\n    control1_x,\n    control1_y,\n    control2_x,\n    control2_y,\n    to_x,\n    to_y,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "close_path_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def close_path_f(funcs, draw_data, st, user_data):\n    context = POOL[draw_data]\n    context.close_path()\nDFUNCS = hb.draw_funcs_create()\nhb.draw_funcs_set_move_to_func(DFUNCS, move_to_f, None)\nhb.draw_funcs_set_line_to_func(DFUNCS, line_to_f, None)\nhb.draw_funcs_set_cubic_to_func(DFUNCS, cubic_to_f, None)\nhb.draw_funcs_set_close_path_func(DFUNCS, close_path_f, None)\ndef push_transform_f(funcs, paint_data, xx, yx, xy, yy, dx, dy, user_data):\n    raise NotImplementedError",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_transform_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def push_transform_f(funcs, paint_data, xx, yx, xy, yy, dx, dy, user_data):\n    raise NotImplementedError\ndef pop_transform_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef color_f(funcs, paint_data, is_foreground, color, user_data):\n    context = POOL[paint_data]\n    r = hb.color_get_red(color) / 255\n    g = hb.color_get_green(color) / 255\n    b = hb.color_get_blue(color) / 255\n    a = hb.color_get_alpha(color) / 255",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "pop_transform_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def pop_transform_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef color_f(funcs, paint_data, is_foreground, color, user_data):\n    context = POOL[paint_data]\n    r = hb.color_get_red(color) / 255\n    g = hb.color_get_green(color) / 255\n    b = hb.color_get_blue(color) / 255\n    a = hb.color_get_alpha(color) / 255\n    context.set_source_rgba(r, g, b, a)\n    context.paint()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "color_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def color_f(funcs, paint_data, is_foreground, color, user_data):\n    context = POOL[paint_data]\n    r = hb.color_get_red(color) / 255\n    g = hb.color_get_green(color) / 255\n    b = hb.color_get_blue(color) / 255\n    a = hb.color_get_alpha(color) / 255\n    context.set_source_rgba(r, g, b, a)\n    context.paint()\ndef push_clip_rectangle_f(funcs, paint_data, xmin, ymin, xmax, ymax, user_data):\n    context = POOL[paint_data]",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_clip_rectangle_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def push_clip_rectangle_f(funcs, paint_data, xmin, ymin, xmax, ymax, user_data):\n    context = POOL[paint_data]\n    context.save()\n    context.rectangle(xmin, ymin, xmax, ymax)\n    context.clip()\ndef push_clip_glyph_f(funcs, paint_data, glyph, font, user_data):\n    context = POOL[paint_data]\n    context.save()\n    context.new_path()\n    hb.font_draw_glyph(font, glyph, DFUNCS, paint_data)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_clip_glyph_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def push_clip_glyph_f(funcs, paint_data, glyph, font, user_data):\n    context = POOL[paint_data]\n    context.save()\n    context.new_path()\n    hb.font_draw_glyph(font, glyph, DFUNCS, paint_data)\n    context.close_path()\n    context.clip()\ndef pop_clip_f(funcs, paint_data, user_data):\n    context = POOL[paint_data]\n    context.restore()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "pop_clip_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def pop_clip_f(funcs, paint_data, user_data):\n    context = POOL[paint_data]\n    context.restore()\ndef push_group_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef pop_group_f(funcs, paint_data, mode, user_data):\n    raise NotImplementedError\nPFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "push_group_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def push_group_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef pop_group_f(funcs, paint_data, mode, user_data):\n    raise NotImplementedError\nPFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)\nhb.paint_funcs_set_color_func(PFUNCS, color_f, None)\nhb.paint_funcs_set_push_clip_glyph_func(PFUNCS, push_clip_glyph_f, None)\nhb.paint_funcs_set_push_clip_rectangle_func(PFUNCS, push_clip_rectangle_f, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "pop_group_f",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def pop_group_f(funcs, paint_data, mode, user_data):\n    raise NotImplementedError\nPFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)\nhb.paint_funcs_set_color_func(PFUNCS, color_f, None)\nhb.paint_funcs_set_push_clip_glyph_func(PFUNCS, push_clip_glyph_f, None)\nhb.paint_funcs_set_push_clip_rectangle_func(PFUNCS, push_clip_rectangle_f, None)\nhb.paint_funcs_set_pop_clip_func(PFUNCS, pop_clip_f, None)\nhb.paint_funcs_set_push_group_func(PFUNCS, push_group_f, None)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "makebuffer",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def makebuffer(words):\n    buf = hb.buffer_create()\n    text = \" \".join(words)\n    hb.buffer_add_codepoints(buf, [ord(c) for c in text], 0, len(text))\n    hb.buffer_guess_segment_properties(buf)\n    return buf\ndef justify(face, words, advance, target_advance):\n    font = hb.font_create(face)\n    buf = makebuffer(words)\n    wiggle = 5",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "justify",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def justify(face, words, advance, target_advance):\n    font = hb.font_create(face)\n    buf = makebuffer(words)\n    wiggle = 5\n    shrink = target_advance - wiggle < advance\n    expand = target_advance + wiggle > advance\n    ret, advance, tag, value = hb.shape_justify(\n        font,\n        buf,\n        None,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "shape",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def shape(face, words):\n    font = hb.font_create(face)\n    buf = makebuffer(words)\n    hb.shape(font, buf)\n    positions = hb.buffer_get_glyph_positions(buf)\n    advance = sum(p.x_advance for p in positions)\n    return buf, advance\ndef typeset(face, text, target_advance):\n    lines = []\n    words = []",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "typeset",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def typeset(face, text, target_advance):\n    lines = []\n    words = []\n    for word in text.split():\n        words.append(word)\n        buf, advance = shape(face, words)\n        if advance > target_advance:\n            # Shrink\n            ret, buf, variation = justify(face, words, advance, target_advance)\n            if ret:",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "render",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def render(face, text, context, width, height, fontsize):\n    font = hb.font_create(face)\n    margin = fontsize * 2\n    scale = fontsize / hb.face_get_upem(face)\n    target_advance = (width - (margin * 2)) / scale\n    lines = typeset(face, text, target_advance)\n    _, extents = hb.font_get_h_extents(font)\n    lineheight = extents.ascender - extents.descender + extents.line_gap\n    lineheight *= scale\n    context.save()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "def main(fontpath, textpath):\n    fontsize = 70\n    blob = hb.blob_create_from_file(fontpath)\n    face = hb.face_create(blob, 0)\n    with open(textpath) as f:\n        text = f.read()\n    def on_draw(da, context):\n        alloc = da.get_allocation()\n        POOL[id(context)] = context\n        render(face, text, context, alloc.width, alloc.height, fontsize)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "POOL",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "POOL = {}\ndef move_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.move_to(to_x, to_y)\ndef line_to_f(funcs, draw_data, st, to_x, to_y, user_data):\n    context = POOL[draw_data]\n    context.line_to(to_x, to_y)\ndef cubic_to_f(\n    funcs,\n    draw_data,",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "DFUNCS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "DFUNCS = hb.draw_funcs_create()\nhb.draw_funcs_set_move_to_func(DFUNCS, move_to_f, None)\nhb.draw_funcs_set_line_to_func(DFUNCS, line_to_f, None)\nhb.draw_funcs_set_cubic_to_func(DFUNCS, cubic_to_f, None)\nhb.draw_funcs_set_close_path_func(DFUNCS, close_path_f, None)\ndef push_transform_f(funcs, paint_data, xx, yx, xy, yy, dx, dy, user_data):\n    raise NotImplementedError\ndef pop_transform_f(funcs, paint_data, user_data):\n    raise NotImplementedError\ndef color_f(funcs, paint_data, is_foreground, color, user_data):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "PFUNCS",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "peekOfCode": "PFUNCS = hb.paint_funcs_create()\nhb.paint_funcs_set_push_transform_func(PFUNCS, push_transform_f, None)\nhb.paint_funcs_set_pop_transform_func(PFUNCS, pop_transform_f, None)\nhb.paint_funcs_set_color_func(PFUNCS, color_f, None)\nhb.paint_funcs_set_push_clip_glyph_func(PFUNCS, push_clip_glyph_f, None)\nhb.paint_funcs_set_push_clip_rectangle_func(PFUNCS, push_clip_rectangle_f, None)\nhb.paint_funcs_set_pop_clip_func(PFUNCS, pop_clip_f, None)\nhb.paint_funcs_set_push_group_func(PFUNCS, push_group_f, None)\nhb.paint_funcs_set_pop_group_func(PFUNCS, pop_group_f, None)\ndef makebuffer(words):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.justify",
        "documentation": {}
    },
    {
        "label": "Debugge",
        "kind": 6,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "class Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)\n\t\treturn True\ndebugger = Debugger ()\nhb.buffer_set_message_func (buf, debugger.message, 1, 0)\n##\n## Add text to buffer\n##\n#",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "fontdata",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "fontdata = open (sys.argv[1], 'rb').read ()\ntext = sys.argv[2]\n# Need to create GLib.Bytes explicitly until this bug is fixed:\n# https://bugzilla.gnome.org/show_bug.cgi?id=729541\nblob = hb.glib_blob_create (GLib.Bytes.new (fontdata))\nface = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "text",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "text = sys.argv[2]\n# Need to create GLib.Bytes explicitly until this bug is fixed:\n# https://bugzilla.gnome.org/show_bug.cgi?id=729541\nblob = hb.glib_blob_create (GLib.Bytes.new (fontdata))\nface = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "blob",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "blob = hb.glib_blob_create (GLib.Bytes.new (fontdata))\nface = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "face",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "face = hb.face_create (blob, 0)\ndel blob\nfont = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()\nclass Debugger (object):",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "font",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "font = hb.font_create (face)\nupem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()\nclass Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "upem",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "upem = hb.face_get_upem (face)\ndel face\nhb.font_set_scale (font, upem, upem)\n#hb.ft_font_set_funcs (font)\nhb.ot_font_set_funcs (font)\nbuf = hb.buffer_create ()\nclass Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)\n\t\treturn True",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "buf",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "buf = hb.buffer_create ()\nclass Debugger (object):\n\tdef message (self, buf, font, msg, data, _x_what_is_this):\n\t\tprint (msg)\n\t\treturn True\ndebugger = Debugger ()\nhb.buffer_set_message_func (buf, debugger.message, 1, 0)\n##\n## Add text to buffer\n##",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "debugger",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "debugger = Debugger ()\nhb.buffer_set_message_func (buf, debugger.message, 1, 0)\n##\n## Add text to buffer\n##\n#\n# See https://github.com/harfbuzz/harfbuzz/pull/271\n#\n# If you do not care about cluster values reflecting Python\n# string indices, then this is quickest way to add text to",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "infos",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "infos = hb.buffer_get_glyph_infos (buf)\npositions = hb.buffer_get_glyph_positions (buf)\nfor info, pos in zip (infos, positions):\n\tgid = info.codepoint\n\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "positions",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "positions = hb.buffer_get_glyph_positions (buf)\nfor info, pos in zip (infos, positions):\n\tgid = info.codepoint\n\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tgid",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "\tgid = info.codepoint\n\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tcluster",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "\tcluster = info.cluster\n\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tx_advance",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "\tx_advance = pos.x_advance\n\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\tx_offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "\tx_offset = pos.x_offset\n\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    },
    {
        "label": "\ty_offset",
        "kind": 5,
        "importPath": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "description": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "peekOfCode": "\ty_offset = pos.y_offset\n\tprint (\"gid%d=%d@%d,%d+%d\" % (gid, cluster, x_advance, x_offset, y_offset))",
        "detail": "windows.flutter.ephemeral..plugin_symlinks.rive_common.macos.harfbuzz.src.sample",
        "documentation": {}
    }
]